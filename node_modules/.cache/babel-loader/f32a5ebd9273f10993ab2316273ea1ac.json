{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgUpgradeClient = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/client/v1/tx\");\n/**\n * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state\n */\n\n\nvar MsgUpgradeClient =\n/** @class */\nfunction (_super) {\n  __extends(MsgUpgradeClient, _super);\n  /**\n   * @param client_id client unique identifier\n   * @param client_state  upgraded client state\n   * @param consensus_state upgraded consensus state, only contains enough information to serve as a basis of trust in update logic\n   * @param proof_upgrade_client proof that old chain committed to new client\n   * @param proof_upgrade_consensus_state  proof that old chain committed to new consensus state\n   * @param signer signer address\n   */\n\n\n  function MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.client_id = client_id;\n    _this.client_state = client_state;\n    _this.consensus_state = consensus_state;\n    _this.proof_upgrade_client = proof_upgrade_client;\n    _this.proof_upgrade_consensus_state = proof_upgrade_consensus_state;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgUpgradeClient.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgUpgradeClient.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgUpgradeClient.fromData = function (data) {\n    var client_id = data.client_id,\n        client_state = data.client_state,\n        consensus_state = data.consensus_state,\n        proof_upgrade_client = data.proof_upgrade_client,\n        proof_upgrade_consensus_state = data.proof_upgrade_consensus_state,\n        signer = data.signer;\n    return new MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer);\n  };\n\n  MsgUpgradeClient.prototype.toData = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        client_state = _a.client_state,\n        consensus_state = _a.consensus_state,\n        proof_upgrade_client = _a.proof_upgrade_client,\n        proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.client.v1.MsgUpgradeClient',\n      client_id: client_id,\n      client_state: client_state,\n      consensus_state: consensus_state,\n      proof_upgrade_client: proof_upgrade_client,\n      proof_upgrade_consensus_state: proof_upgrade_consensus_state,\n      signer: signer\n    };\n  };\n\n  MsgUpgradeClient.fromProto = function (proto) {\n    return new MsgUpgradeClient(proto.clientId, proto.clientState, proto.consensusState, Buffer.from(proto.proofUpgradeClient).toString('base64'), Buffer.from(proto.proofUpgradeConsensusState).toString('base64'), proto.signer);\n  };\n\n  MsgUpgradeClient.prototype.toProto = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        client_state = _a.client_state,\n        consensus_state = _a.consensus_state,\n        proof_upgrade_client = _a.proof_upgrade_client,\n        proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n        signer = _a.signer;\n\n    return tx_1.MsgUpgradeClient.fromPartial({\n      clientId: client_id,\n      clientState: client_state,\n      consensusState: consensus_state,\n      proofUpgradeClient: Buffer.from(proof_upgrade_client, 'base64'),\n      proofUpgradeConsensusState: Buffer.from(proof_upgrade_consensus_state, 'base64'),\n      signer: signer\n    });\n  };\n\n  MsgUpgradeClient.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.client.v1.MsgUpgradeClient',\n      value: tx_1.MsgUpgradeClient.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgUpgradeClient.unpackAny = function (msgAny) {\n    return MsgUpgradeClient.fromProto(tx_1.MsgUpgradeClient.decode(msgAny.value));\n  };\n\n  return MsgUpgradeClient;\n}(json_1.JSONSerializable);\n\nexports.MsgUpgradeClient = MsgUpgradeClient;","map":{"version":3,"sources":["../../../../../src/core/ibc/msgs/client/MsgUpgradeClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgUpgradeClient = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/client/v1/tx\");\n/**\n * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state\n */\nvar MsgUpgradeClient = /** @class */ (function (_super) {\n    __extends(MsgUpgradeClient, _super);\n    /**\n     * @param client_id client unique identifier\n     * @param client_state  upgraded client state\n     * @param consensus_state upgraded consensus state, only contains enough information to serve as a basis of trust in update logic\n     * @param proof_upgrade_client proof that old chain committed to new client\n     * @param proof_upgrade_consensus_state  proof that old chain committed to new consensus state\n     * @param signer signer address\n     */\n    function MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer) {\n        var _this = _super.call(this) || this;\n        _this.client_id = client_id;\n        _this.client_state = client_state;\n        _this.consensus_state = consensus_state;\n        _this.proof_upgrade_client = proof_upgrade_client;\n        _this.proof_upgrade_consensus_state = proof_upgrade_consensus_state;\n        _this.signer = signer;\n        return _this;\n    }\n    MsgUpgradeClient.fromAmino = function (_) {\n        _;\n        throw new Error('Amino not supported');\n    };\n    MsgUpgradeClient.prototype.toAmino = function () {\n        throw new Error('Amino not supported');\n    };\n    MsgUpgradeClient.fromData = function (data) {\n        var client_id = data.client_id, client_state = data.client_state, consensus_state = data.consensus_state, proof_upgrade_client = data.proof_upgrade_client, proof_upgrade_consensus_state = data.proof_upgrade_consensus_state, signer = data.signer;\n        return new MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer);\n    };\n    MsgUpgradeClient.prototype.toData = function () {\n        var _a = this, client_id = _a.client_id, client_state = _a.client_state, consensus_state = _a.consensus_state, proof_upgrade_client = _a.proof_upgrade_client, proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state, signer = _a.signer;\n        return {\n            '@type': '/ibc.core.client.v1.MsgUpgradeClient',\n            client_id: client_id,\n            client_state: client_state,\n            consensus_state: consensus_state,\n            proof_upgrade_client: proof_upgrade_client,\n            proof_upgrade_consensus_state: proof_upgrade_consensus_state,\n            signer: signer,\n        };\n    };\n    MsgUpgradeClient.fromProto = function (proto) {\n        return new MsgUpgradeClient(proto.clientId, proto.clientState, proto.consensusState, Buffer.from(proto.proofUpgradeClient).toString('base64'), Buffer.from(proto.proofUpgradeConsensusState).toString('base64'), proto.signer);\n    };\n    MsgUpgradeClient.prototype.toProto = function () {\n        var _a = this, client_id = _a.client_id, client_state = _a.client_state, consensus_state = _a.consensus_state, proof_upgrade_client = _a.proof_upgrade_client, proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state, signer = _a.signer;\n        return tx_1.MsgUpgradeClient.fromPartial({\n            clientId: client_id,\n            clientState: client_state,\n            consensusState: consensus_state,\n            proofUpgradeClient: Buffer.from(proof_upgrade_client, 'base64'),\n            proofUpgradeConsensusState: Buffer.from(proof_upgrade_consensus_state, 'base64'),\n            signer: signer,\n        });\n    };\n    MsgUpgradeClient.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/ibc.core.client.v1.MsgUpgradeClient',\n            value: tx_1.MsgUpgradeClient.encode(this.toProto()).finish(),\n        });\n    };\n    MsgUpgradeClient.unpackAny = function (msgAny) {\n        return MsgUpgradeClient.fromProto(tx_1.MsgUpgradeClient.decode(msgAny.value));\n    };\n    return MsgUpgradeClient;\n}(json_1.JSONSerializable));\nexports.MsgUpgradeClient = MsgUpgradeClient;\n//# sourceMappingURL=MsgUpgradeClient.js.map"]},"metadata":{},"sourceType":"script"}