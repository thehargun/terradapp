{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StakingAPI = void 0;\n\nvar core_1 = require(\"../../../core\");\n\nvar BaseAPI_1 = require(\"./BaseAPI\");\n\nvar Delegation_1 = require(\"../../../core/staking/Delegation\");\n\nvar Validator_1 = require(\"../../../core/staking/Validator\");\n\nvar Redelegation_1 = require(\"../../../core/staking/Redelegation\");\n\nvar StakingAPI =\n/** @class */\nfunction (_super) {\n  __extends(StakingAPI, _super);\n\n  function StakingAPI() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Queries all delegations, filtering by delegator, validator, or both.\n   *\n   * At least one of the parameters must be defined.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.delegations = function (delegator, validator, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (delegator !== undefined && validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations/\" + delegator, params).then(function (_a) {\n            var data = _a.delegation_response;\n            return [[Delegation_1.Delegation.fromData(data)], {\n              total: 1,\n              next_key: ''\n            }];\n          })];\n        } else if (delegator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/delegations/\" + delegator, params).then(function (data) {\n            return [data.delegation_responses.map(Delegation_1.Delegation.fromData), data.pagination];\n          })];\n        } else if (validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations\", params).then(function (data) {\n            return [data.delegation_responses.map(Delegation_1.Delegation.fromData), data.pagination];\n          })];\n        } else {\n          throw new TypeError('arguments delegator and validator cannot both be empty');\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Gets the delegation between a delegator and validator, if it exists.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.delegation = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.delegations(delegator, validator).then(function (delgs) {\n          return delgs[0][0];\n        })];\n      });\n    });\n  };\n  /**\n   * Queries all unbonding delegations, filtering by delegator, validator, or both.\n   *\n   * At least one of the parameters must be defined.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.unbondingDelegations = function (delegator, validator, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (delegator !== undefined && validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations/\" + delegator + \"/unbonding_delegation\", params).then(function (_a) {\n            var data = _a.unbond;\n            return [[core_1.UnbondingDelegation.fromData(data)], {\n              next_key: '',\n              total: 1\n            }];\n          })];\n        } else if (delegator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/unbonding_delegations\", params).then(function (data) {\n            return [data.unbonding_responses.map(core_1.UnbondingDelegation.fromData), data.pagination];\n          })];\n        } else if (validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/unbonding_delegations\", params).then(function (data) {\n            return [data.unbonding_responses.map(core_1.UnbondingDelegation.fromData), data.pagination];\n          })];\n        } else {\n          throw new TypeError('arguments delegator and validator cannot both be empty');\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Gets the unbonding delegation between a delegator and validator, if it exists.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.unbondingDelegation = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.unbondingDelegations(delegator, validator).then(function (udelgs) {\n          return udelgs[0][0];\n        })];\n      });\n    });\n  };\n  /**\n   * Queries all redelegations, filterable by delegator, source validator, and target validator.\n   * @param delegator delegator's account address\n   * @param validatorSrc source validator's operator address (from).\n   * @param validatorDst destination validator's operator address (to).\n   */\n\n\n  StakingAPI.prototype.redelegations = function (delegator, validatorSrc, validatorDst, _params) {\n    if (_params === void 0) {\n      _params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = __assign(__assign({}, _params), {\n          src_validator_addr: validatorSrc,\n          dst_validator_addr: validatorDst\n        });\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/redelegations\", params).then(function (d) {\n          return [d.redelegation_responses.map(Redelegation_1.Redelegation.fromData), d.pagination];\n        })];\n      });\n    });\n  };\n  /**\n   * Gets all bonded validators for a delegator given its address.\n   * @param delegator delegator's account address\n   */\n\n\n  StakingAPI.prototype.bondedValidators = function (delegator, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/validators\", params).then(function (d) {\n          return [d.validators.map(Validator_1.Validator.fromData), d.pagination];\n        })];\n      });\n    });\n  };\n  /**\n   * Get all current registered validators, including validators that are not currently in the validating set.\n   */\n\n\n  StakingAPI.prototype.validators = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/validators\", params).then(function (d) {\n          return [d.validators.map(Validator_1.Validator.fromData), d.pagination];\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the validator information for a specific validator.\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.validator = function (validator, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/validators/\" + validator, params).then(function (d) {\n          return Validator_1.Validator.fromData(d.validator);\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the current staking pool.\n   */\n\n\n  StakingAPI.prototype.pool = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/pool\", params).then(function (_a) {\n          var d = _a.pool;\n          return {\n            bonded_tokens: new core_1.Coin('uluna', d.bonded_tokens),\n            not_bonded_tokens: new core_1.Coin('uluna', d.not_bonded_tokens)\n          };\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the current Staking module's parameters.\n   */\n\n\n  StakingAPI.prototype.parameters = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/cosmos/staking/v1beta1/params\", params).then(function (_a) {\n          var d = _a.params;\n          return {\n            unbonding_time: Number.parseInt(d.unbonding_time),\n            max_validators: d.max_validators,\n            max_entries: d.max_entries,\n            historical_entries: d.historical_entries,\n            bond_denom: d.bond_denom\n          };\n        })];\n      });\n    });\n  };\n\n  return StakingAPI;\n}(BaseAPI_1.BaseAPI);\n\nexports.StakingAPI = StakingAPI;","map":{"version":3,"sources":["../../../../src/client/lcd/api/StakingAPI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAMA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;;AA6CA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,UAAA,GAAA;;AAgPC;AA/OC;;;;;;AAMG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAb,UACE,SADF,EAEE,SAFF,EAGE,MAHF,EAGqD;AAAnD,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAmD;;;;AAEnD,YAAI,SAAS,KAAK,SAAd,IAA2B,SAAS,KAAK,SAA7C,EAAwD;AACtD,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAEH,wCAAsC,SAAtC,GAA+C,eAA/C,GAA+D,SAF5D,EAGH,MAHG,EAKJ,IALI,CAKC,UAAC,EAAD,EAA8B;gBAAN,IAAI,GAAA,EAAA,CAAA,mB;AAAO,mBAAA,CACvC,CAAC,YAAA,CAAA,UAAA,CAAW,QAAX,CAAoB,IAApB,CAAD,CADuC,EAEvC;AAAE,cAAA,KAAK,EAAE,CAAT;AAAY,cAAA,QAAQ,EAAE;AAAtB,aAFuC,CAAA;AAGxC,WARI,CAAP,CAAA;AASD,SAVD,MAUO,IAAI,SAAS,KAAK,SAAlB,EAA6B;AAClC,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAIF,yCAAuC,SAJrC,EAIkD,MAJlD,EAKJ,IALI,CAKC,UAAA,IAAA,EAAI;AAAI,mBAAA,CACZ,IAAI,CAAC,oBAAL,CAA0B,GAA1B,CAA8B,YAAA,CAAA,UAAA,CAAW,QAAzC,CADY,EAEZ,IAAI,CAAC,UAFO,CAAA;AAGb,WARI,CAAP,CAAA;AASD,SAVM,MAUA,IAAI,SAAS,KAAK,SAAlB,EAA6B;AAClC,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAKH,wCAAsC,SAAtC,GAA+C,cAL5C,EAMH,MANG,EAQJ,IARI,CAQC,UAAA,IAAA,EAAI;AAAI,mBAAA,CACZ,IAAI,CAAC,oBAAL,CAA0B,GAA1B,CAA8B,YAAA,CAAA,UAAA,CAAW,QAAzC,CADY,EAEZ,IAAI,CAAC,UAFO,CAAA;AAGb,WAXI,CAAP,CAAA;AAYD,SAbM,MAaA;AACL,gBAAM,IAAI,SAAJ,CACJ,wDADI,CAAN;AAGD;;;;;;;AACF,GA3CY;AA6Cb;;;;AAIG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UACE,SADF,EAEE,SAFF,EAEuB;;;AAErB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,WAAL,CAAiB,SAAjB,EAA4B,SAA5B,EAAuC,IAAvC,CAA4C,UAAA,KAAA,EAAK;AAAI,iBAAA,KAAK,CAAC,CAAD,CAAL,CAAA,CAAA,CAAA;AAAW,SAAhE,CAAP,CAAA;;;AACD,GALY;AAOb;;;;;;AAMG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,oBAAA,GAAb,UACE,SADF,EAEE,SAFF,EAGE,MAHF,EAGqD;AAAnD,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAmD;;;;AAEnD,YAAI,SAAS,KAAK,SAAd,IAA2B,SAAS,KAAK,SAA7C,EAAwD;AACtD,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAEH,wCAAsC,SAAtC,GAA+C,eAA/C,GAA+D,SAA/D,GAAwE,uBAFrE,EAGH,MAHG,EAKJ,IALI,CAKC,UAAC,EAAD,EAAiB;gBAAN,IAAI,GAAA,EAAA,CAAA,M;AAAO,mBAAA,CAC1B,CAAC,MAAA,CAAA,mBAAA,CAAoB,QAApB,CAA6B,IAA7B,CAAD,CAD0B,EAE1B;AAAE,cAAA,QAAQ,EAAE,EAAZ;AAAgB,cAAA,KAAK,EAAE;AAAvB,aAF0B,CAAA;AAG3B,WARI,CAAP,CAAA;AASD,SAVD,MAUO,IAAI,SAAS,KAAK,SAAlB,EAA6B;AAClC,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAKH,wCAAsC,SAAtC,GAA+C,wBAL5C,EAMH,MANG,EAQJ,IARI,CAQC,UAAA,IAAA,EAAI;AAAI,mBAAA,CACZ,IAAI,CAAC,mBAAL,CAAyB,GAAzB,CAA6B,MAAA,CAAA,mBAAA,CAAoB,QAAjD,CADY,EAEZ,IAAI,CAAC,UAFO,CAAA;AAGb,WAXI,CAAP,CAAA;AAYD,SAbM,MAaA,IAAI,SAAS,KAAK,SAAlB,EAA6B;AAClC,iBAAA,CAAA;AAAA;AAAA,YAAO,KAAK,CAAL,CACJ,GADI,CAKH,wCAAsC,SAAtC,GAA+C,wBAL5C,EAMH,MANG,EAQJ,IARI,CAQC,UAAA,IAAA,EAAI;AAAI,mBAAA,CACZ,IAAI,CAAC,mBAAL,CAAyB,GAAzB,CAA6B,MAAA,CAAA,mBAAA,CAAoB,QAAjD,CADY,EAEZ,IAAI,CAAC,UAFO,CAAA;AAGb,WAXI,CAAP,CAAA;AAYD,SAbM,MAaA;AACL,gBAAM,IAAI,SAAJ,CACJ,wDADI,CAAN;AAGD;;;;;;;AACF,GA9CY;AAgDb;;;;AAIG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,GAAb,UACE,SADF,EAEE,SAFF,EAEwB;;;AAEtB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,oBAAL,CAA0B,SAA1B,EAAqC,SAArC,EAAgD,IAAhD,CACL,UAAA,MAAA,EAAM;AAAI,iBAAA,MAAM,CAAC,CAAD,CAAN,CAAA,CAAA,CAAA;AAAY,SADjB,CAAP,CAAA;;;AAGD,GAPY;AASb;;;;;AAKG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAb,UACE,SADF,EAEE,YAFF,EAGE,YAHF,EAIE,OAJF,EAIsD;AAApD,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAoD;;;;;AAE9C,QAAA,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACP,OADO,CAAA,EACA;AACV,UAAA,kBAAkB,EAAE,YADV;AAEV,UAAA,kBAAkB,EAAE;AAFV,SADA,CAAN;AAKN,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAKH,wCAAsC,SAAtC,GAA+C,gBAL5C,EAMH,MANG,EAQJ,IARI,CAQC,UAAA,CAAA,EAAC;AAAI,iBAAA,CACT,CAAC,CAAC,sBAAF,CAAyB,GAAzB,CAA6B,cAAA,CAAA,YAAA,CAAa,QAA1C,CADS,EAET,CAAC,CAAC,UAFO,CAAA;AAGV,SAXI,CAAP,CAAA;;;AAYD,GAvBY;AAyBb;;;AAGG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAb,UACE,SADF,EAEE,MAFF,EAEqD;AAAnD,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAmD;;;;AAEnD,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAEH,wCAAsC,SAAtC,GAA+C,aAF5C,EAGH,MAHG,EAKJ,IALI,CAKC,UAAA,CAAA,EAAC;AAAI,iBAAA,CAAC,CAAC,CAAC,UAAF,CAAa,GAAb,CAAiB,WAAA,CAAA,SAAA,CAAU,QAA3B,CAAD,EAAuC,CAAC,CAAxC,UAAA,CAAA;AAAoD,SAL1D,CAAP,CAAA;;;AAMD,GAVY;AAYb;;AAEG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UACE,MADF,EACqD;AAAnD,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAmD;;;;AAEnD,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAEH,oCAFG,EAGH,MAHG,EAKJ,IALI,CAKC,UAAA,CAAA,EAAC;AAAI,iBAAA,CAAC,CAAC,CAAC,UAAF,CAAa,GAAb,CAAiB,WAAA,CAAA,SAAA,CAAU,QAA3B,CAAD,EAAuC,CAAC,CAAxC,UAAA,CAAA;AAAoD,SAL1D,CAAP,CAAA;;;AAMD,GATY;AAWb;;;AAGG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAb,UACE,SADF,EAEE,MAFF,EAEwB;AAAtB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAsB;;;;AAEtB,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAEH,wCAAsC,SAFnC,EAGH,MAHG,EAKJ,IALI,CAKC,UAAA,CAAA,EAAC;AAAI,iBAAA,WAAA,CAAA,SAAA,CAAU,QAAV,CAAmB,CAAC,CAApB,SAAA,CAAA;AAA+B,SALrC,CAAP,CAAA;;;AAMD,GAVY;AAYb;;AAEG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UAAkB,MAAlB,EAAwC;AAAtB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAsB;;;;AACtC,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAC4B,8BAD5B,EAC4D,MAD5D,EAEJ,IAFI,CAEC,UAAC,EAAD,EAAY;cAAH,CAAC,GAAA,EAAA,CAAA,I;AAAO,iBAAC;AACtB,YAAA,aAAa,EAAE,IAAI,MAAA,CAAA,IAAJ,CAAS,OAAT,EAAkB,CAAC,CAAC,aAApB,CADO;AAEtB,YAAA,iBAAiB,EAAE,IAAI,MAAA,CAAA,IAAJ,CAAS,OAAT,EAAkB,CAAC,CAAC,iBAApB;AAFG,WAAD;AAGrB,SALG,CAAP,CAAA;;;AAMD,GAPY;AASb;;AAEG;;;AACU,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UAAwB,MAAxB,EAA8C;AAAtB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAsB;;;;AAC5C,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,CAAL,CACJ,GADI,CAEH,gCAFG,EAGH,MAHG,EAKJ,IALI,CAKC,UAAC,EAAD,EAAc;cAAH,CAAC,GAAA,EAAA,CAAA,M;AAAO,iBAAC;AACxB,YAAA,cAAc,EAAE,MAAM,CAAC,QAAP,CAAgB,CAAC,CAAC,cAAlB,CADQ;AAExB,YAAA,cAAc,EAAE,CAAC,CAAC,cAFM;AAGxB,YAAA,WAAW,EAAE,CAAC,CAAC,WAHS;AAIxB,YAAA,kBAAkB,EAAE,CAAC,CAAC,kBAJE;AAKxB,YAAA,UAAU,EAAE,CAAC,CAAC;AALU,WAAD;AAMvB,SAXG,CAAP,CAAA;;;AAYD,GAbY;;AAcf,SAAA,UAAA;AAAC,CAhPD,CAAgC,SAAA,CAAA,OAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StakingAPI = void 0;\nvar core_1 = require(\"../../../core\");\nvar BaseAPI_1 = require(\"./BaseAPI\");\nvar Delegation_1 = require(\"../../../core/staking/Delegation\");\nvar Validator_1 = require(\"../../../core/staking/Validator\");\nvar Redelegation_1 = require(\"../../../core/staking/Redelegation\");\nvar StakingAPI = /** @class */ (function (_super) {\n    __extends(StakingAPI, _super);\n    function StakingAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Queries all delegations, filtering by delegator, validator, or both.\n     *\n     * At least one of the parameters must be defined.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.delegations = function (delegator, validator, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (delegator !== undefined && validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations/\" + delegator, params)\n                            .then(function (_a) {\n                            var data = _a.delegation_response;\n                            return [\n                                [Delegation_1.Delegation.fromData(data)],\n                                { total: 1, next_key: '' },\n                            ];\n                        })];\n                }\n                else if (delegator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/delegations/\" + delegator, params)\n                            .then(function (data) { return [\n                            data.delegation_responses.map(Delegation_1.Delegation.fromData),\n                            data.pagination,\n                        ]; })];\n                }\n                else if (validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations\", params)\n                            .then(function (data) { return [\n                            data.delegation_responses.map(Delegation_1.Delegation.fromData),\n                            data.pagination,\n                        ]; })];\n                }\n                else {\n                    throw new TypeError('arguments delegator and validator cannot both be empty');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Gets the delegation between a delegator and validator, if it exists.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.delegation = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.delegations(delegator, validator).then(function (delgs) { return delgs[0][0]; })];\n            });\n        });\n    };\n    /**\n     * Queries all unbonding delegations, filtering by delegator, validator, or both.\n     *\n     * At least one of the parameters must be defined.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.unbondingDelegations = function (delegator, validator, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (delegator !== undefined && validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/delegations/\" + delegator + \"/unbonding_delegation\", params)\n                            .then(function (_a) {\n                            var data = _a.unbond;\n                            return [\n                                [core_1.UnbondingDelegation.fromData(data)],\n                                { next_key: '', total: 1 },\n                            ];\n                        })];\n                }\n                else if (delegator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/unbonding_delegations\", params)\n                            .then(function (data) { return [\n                            data.unbonding_responses.map(core_1.UnbondingDelegation.fromData),\n                            data.pagination,\n                        ]; })];\n                }\n                else if (validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/cosmos/staking/v1beta1/validators/\" + validator + \"/unbonding_delegations\", params)\n                            .then(function (data) { return [\n                            data.unbonding_responses.map(core_1.UnbondingDelegation.fromData),\n                            data.pagination,\n                        ]; })];\n                }\n                else {\n                    throw new TypeError('arguments delegator and validator cannot both be empty');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Gets the unbonding delegation between a delegator and validator, if it exists.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.unbondingDelegation = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.unbondingDelegations(delegator, validator).then(function (udelgs) { return udelgs[0][0]; })];\n            });\n        });\n    };\n    /**\n     * Queries all redelegations, filterable by delegator, source validator, and target validator.\n     * @param delegator delegator's account address\n     * @param validatorSrc source validator's operator address (from).\n     * @param validatorDst destination validator's operator address (to).\n     */\n    StakingAPI.prototype.redelegations = function (delegator, validatorSrc, validatorDst, _params) {\n        if (_params === void 0) { _params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = __assign(__assign({}, _params), { src_validator_addr: validatorSrc, dst_validator_addr: validatorDst });\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/redelegations\", params)\n                        .then(function (d) { return [\n                        d.redelegation_responses.map(Redelegation_1.Redelegation.fromData),\n                        d.pagination,\n                    ]; })];\n            });\n        });\n    };\n    /**\n     * Gets all bonded validators for a delegator given its address.\n     * @param delegator delegator's account address\n     */\n    StakingAPI.prototype.bondedValidators = function (delegator, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/delegators/\" + delegator + \"/validators\", params)\n                        .then(function (d) { return [d.validators.map(Validator_1.Validator.fromData), d.pagination]; })];\n            });\n        });\n    };\n    /**\n     * Get all current registered validators, including validators that are not currently in the validating set.\n     */\n    StakingAPI.prototype.validators = function (params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/validators\", params)\n                        .then(function (d) { return [d.validators.map(Validator_1.Validator.fromData), d.pagination]; })];\n            });\n        });\n    };\n    /**\n     * Gets the validator information for a specific validator.\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.validator = function (validator, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/validators/\" + validator, params)\n                        .then(function (d) { return Validator_1.Validator.fromData(d.validator); })];\n            });\n        });\n    };\n    /**\n     * Gets the current staking pool.\n     */\n    StakingAPI.prototype.pool = function (params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/pool\", params)\n                        .then(function (_a) {\n                        var d = _a.pool;\n                        return ({\n                            bonded_tokens: new core_1.Coin('uluna', d.bonded_tokens),\n                            not_bonded_tokens: new core_1.Coin('uluna', d.not_bonded_tokens),\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the current Staking module's parameters.\n     */\n    StakingAPI.prototype.parameters = function (params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/cosmos/staking/v1beta1/params\", params)\n                        .then(function (_a) {\n                        var d = _a.params;\n                        return ({\n                            unbonding_time: Number.parseInt(d.unbonding_time),\n                            max_validators: d.max_validators,\n                            max_entries: d.max_entries,\n                            historical_entries: d.historical_entries,\n                            bond_denom: d.bond_denom,\n                        });\n                    })];\n            });\n        });\n    };\n    return StakingAPI;\n}(BaseAPI_1.BaseAPI));\nexports.StakingAPI = StakingAPI;\n//# sourceMappingURL=StakingAPI.js.map"]},"metadata":{},"sourceType":"script"}