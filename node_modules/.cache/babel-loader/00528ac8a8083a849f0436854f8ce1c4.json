{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgChannelOpenTry = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar Channel_1 = require(\"./Channel\");\n\nvar Height_1 = require(\"../client/Height\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/tx\");\n/**\n * MsgChannelOpenTry defines a msg sent by a Relayer to try to open a channel on Chain B\n */\n\n\nvar MsgChannelOpenTry =\n/** @class */\nfunction (_super) {\n  __extends(MsgChannelOpenTry, _super);\n  /**\n   * @param port_id identifier of the port to use\n   * @param previous_channel_id\n   * @param channel channel info\n   * @param counterparty_version\n   * @param proof_init\n   * @param proof_height\n   * @param signer signer address\n   */\n\n\n  function MsgChannelOpenTry(port_id, previous_channel_id, channel, counterparty_version, proof_init, proof_height, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.port_id = port_id;\n    _this.previous_channel_id = previous_channel_id;\n    _this.channel = channel;\n    _this.counterparty_version = counterparty_version;\n    _this.proof_init = proof_init;\n    _this.proof_height = proof_height;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgChannelOpenTry.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgChannelOpenTry.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgChannelOpenTry.fromData = function (data) {\n    var port_id = data.port_id,\n        previous_channel_id = data.previous_channel_id,\n        channel = data.channel,\n        counterparty_version = data.counterparty_version,\n        proof_init = data.proof_init,\n        proof_height = data.proof_height,\n        signer = data.signer;\n    return new MsgChannelOpenTry(port_id, previous_channel_id, channel ? Channel_1.Channel.fromData(channel) : undefined, counterparty_version, proof_init, proof_height ? Height_1.Height.fromData(proof_height) : undefined, signer);\n  };\n\n  MsgChannelOpenTry.prototype.toData = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        previous_channel_id = _a.previous_channel_id,\n        channel = _a.channel,\n        counterparty_version = _a.counterparty_version,\n        proof_init = _a.proof_init,\n        proof_height = _a.proof_height,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.channel.v1.MsgChannelOpenTry',\n      port_id: port_id,\n      previous_channel_id: previous_channel_id,\n      channel: channel ? channel.toData() : undefined,\n      counterparty_version: counterparty_version,\n      proof_init: proof_init,\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      signer: signer\n    };\n  };\n\n  MsgChannelOpenTry.fromProto = function (proto) {\n    return new MsgChannelOpenTry(proto.portId, proto.previousChannelId, proto.channel ? Channel_1.Channel.fromProto(proto.channel) : undefined, proto.counterpartyVersion, Buffer.from(proto.proofInit).toString('base64'), proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, proto.signer);\n  };\n\n  MsgChannelOpenTry.prototype.toProto = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        previous_channel_id = _a.previous_channel_id,\n        channel = _a.channel,\n        counterparty_version = _a.counterparty_version,\n        proof_init = _a.proof_init,\n        proof_height = _a.proof_height,\n        signer = _a.signer;\n\n    return tx_1.MsgChannelOpenTry.fromPartial({\n      portId: port_id,\n      previousChannelId: previous_channel_id,\n      channel: channel ? channel.toProto() : undefined,\n      counterpartyVersion: counterparty_version,\n      proofInit: Buffer.from(proof_init, 'base64'),\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n\n  MsgChannelOpenTry.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.channel.v1.MsgChannelOpenTry',\n      value: tx_1.MsgChannelOpenTry.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgChannelOpenTry.unpackAny = function (msgAny) {\n    return MsgChannelOpenTry.fromProto(tx_1.MsgChannelOpenTry.decode(msgAny.value));\n  };\n\n  return MsgChannelOpenTry;\n}(json_1.JSONSerializable);\n\nexports.MsgChannelOpenTry = MsgChannelOpenTry;","map":{"version":3,"sources":["../../../../../src/core/ibc/msgs/channel/MsgChannelOpenTry.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgChannelOpenTry = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar Channel_1 = require(\"./Channel\");\nvar Height_1 = require(\"../client/Height\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/tx\");\n/**\n * MsgChannelOpenTry defines a msg sent by a Relayer to try to open a channel on Chain B\n */\nvar MsgChannelOpenTry = /** @class */ (function (_super) {\n    __extends(MsgChannelOpenTry, _super);\n    /**\n     * @param port_id identifier of the port to use\n     * @param previous_channel_id\n     * @param channel channel info\n     * @param counterparty_version\n     * @param proof_init\n     * @param proof_height\n     * @param signer signer address\n     */\n    function MsgChannelOpenTry(port_id, previous_channel_id, channel, counterparty_version, proof_init, proof_height, signer) {\n        var _this = _super.call(this) || this;\n        _this.port_id = port_id;\n        _this.previous_channel_id = previous_channel_id;\n        _this.channel = channel;\n        _this.counterparty_version = counterparty_version;\n        _this.proof_init = proof_init;\n        _this.proof_height = proof_height;\n        _this.signer = signer;\n        return _this;\n    }\n    MsgChannelOpenTry.fromAmino = function (_) {\n        _;\n        throw new Error('Amino not supported');\n    };\n    MsgChannelOpenTry.prototype.toAmino = function () {\n        throw new Error('Amino not supported');\n    };\n    MsgChannelOpenTry.fromData = function (data) {\n        var port_id = data.port_id, previous_channel_id = data.previous_channel_id, channel = data.channel, counterparty_version = data.counterparty_version, proof_init = data.proof_init, proof_height = data.proof_height, signer = data.signer;\n        return new MsgChannelOpenTry(port_id, previous_channel_id, channel ? Channel_1.Channel.fromData(channel) : undefined, counterparty_version, proof_init, proof_height ? Height_1.Height.fromData(proof_height) : undefined, signer);\n    };\n    MsgChannelOpenTry.prototype.toData = function () {\n        var _a = this, port_id = _a.port_id, previous_channel_id = _a.previous_channel_id, channel = _a.channel, counterparty_version = _a.counterparty_version, proof_init = _a.proof_init, proof_height = _a.proof_height, signer = _a.signer;\n        return {\n            '@type': '/ibc.core.channel.v1.MsgChannelOpenTry',\n            port_id: port_id,\n            previous_channel_id: previous_channel_id,\n            channel: channel ? channel.toData() : undefined,\n            counterparty_version: counterparty_version,\n            proof_init: proof_init,\n            proof_height: proof_height ? proof_height.toData() : undefined,\n            signer: signer,\n        };\n    };\n    MsgChannelOpenTry.fromProto = function (proto) {\n        return new MsgChannelOpenTry(proto.portId, proto.previousChannelId, proto.channel ? Channel_1.Channel.fromProto(proto.channel) : undefined, proto.counterpartyVersion, Buffer.from(proto.proofInit).toString('base64'), proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, proto.signer);\n    };\n    MsgChannelOpenTry.prototype.toProto = function () {\n        var _a = this, port_id = _a.port_id, previous_channel_id = _a.previous_channel_id, channel = _a.channel, counterparty_version = _a.counterparty_version, proof_init = _a.proof_init, proof_height = _a.proof_height, signer = _a.signer;\n        return tx_1.MsgChannelOpenTry.fromPartial({\n            portId: port_id,\n            previousChannelId: previous_channel_id,\n            channel: channel ? channel.toProto() : undefined,\n            counterpartyVersion: counterparty_version,\n            proofInit: Buffer.from(proof_init, 'base64'),\n            proofHeight: proof_height ? proof_height.toProto() : undefined,\n            signer: signer,\n        });\n    };\n    MsgChannelOpenTry.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/ibc.core.channel.v1.MsgChannelOpenTry',\n            value: tx_1.MsgChannelOpenTry.encode(this.toProto()).finish(),\n        });\n    };\n    MsgChannelOpenTry.unpackAny = function (msgAny) {\n        return MsgChannelOpenTry.fromProto(tx_1.MsgChannelOpenTry.decode(msgAny.value));\n    };\n    return MsgChannelOpenTry;\n}(json_1.JSONSerializable));\nexports.MsgChannelOpenTry = MsgChannelOpenTry;\n//# sourceMappingURL=MsgChannelOpenTry.js.map"]},"metadata":{},"sourceType":"script"}