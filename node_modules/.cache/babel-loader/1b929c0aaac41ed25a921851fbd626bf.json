{"ast":null,"code":"import { AccAddress } from '@terra-money/terra.js';\nconst STORAGE_KEY = '__terra-readonly-wallet-storage-key__';\nexport function getStoredSession() {\n  const storedSessionString = localStorage.getItem(STORAGE_KEY);\n  if (!storedSessionString) return undefined;\n\n  try {\n    const storedSession = JSON.parse(storedSessionString);\n\n    if ('terraAddress' in storedSession && 'network' in storedSession && typeof storedSession['terraAddress'] === 'string' && AccAddress.validate(storedSession.terraAddress)) {\n      return storedSession;\n    } else {\n      localStorage.removeItem(STORAGE_KEY);\n      return undefined;\n    }\n  } catch (_a) {\n    localStorage.removeItem(STORAGE_KEY);\n    return undefined;\n  }\n}\nexport function storeSession(session) {\n  if (!AccAddress.validate(session.terraAddress)) {\n    throw new Error(`${session.terraAddress} is not a terraAddress`);\n  }\n\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(session));\n}\nexport function clearStoredSession() {\n  localStorage.removeItem(STORAGE_KEY);\n}","map":{"version":3,"sources":["../../../../../src/@terra-money/wallet-provider/modules/readonly-wallet/storage.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,uBAA3B;AAGA,MAAM,WAAW,GAAG,uCAApB;AAEA,OAAM,SAAU,gBAAV,GAA0B;AAC9B,QAAM,mBAAmB,GAAG,YAAY,CAAC,OAAb,CAAqB,WAArB,CAA5B;AAEA,MAAI,CAAC,mBAAL,EAA0B,OAAO,SAAP;;AAE1B,MAAI;AACF,UAAM,aAAa,GAAG,IAAI,CAAC,KAAL,CAAW,mBAAX,CAAtB;;AAEA,QACE,kBAAkB,aAAlB,IACA,aAAa,aADb,IAEA,OAAO,aAAa,CAAC,cAAD,CAApB,KAAyC,QAFzC,IAGA,UAAU,CAAC,QAAX,CAAoB,aAAa,CAAC,YAAlC,CAJF,EAKE;AACA,aAAO,aAAP;AACD,KAPD,MAOO;AACL,MAAA,YAAY,CAAC,UAAb,CAAwB,WAAxB;AACA,aAAO,SAAP;AACD;AACF,GAdD,CAcE,OAAA,EAAA,EAAM;AACN,IAAA,YAAY,CAAC,UAAb,CAAwB,WAAxB;AACA,WAAO,SAAP;AACD;AACF;AAED,OAAM,SAAU,YAAV,CAAuB,OAAvB,EAAqD;AACzD,MAAI,CAAC,UAAU,CAAC,QAAX,CAAoB,OAAO,CAAC,YAA5B,CAAL,EAAgD;AAC9C,UAAM,IAAI,KAAJ,CAAU,GAAG,OAAO,CAAC,YAAY,wBAAjC,CAAN;AACD;;AACD,EAAA,YAAY,CAAC,OAAb,CAAqB,WAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,OAAf,CAAlC;AACD;AAED,OAAM,SAAU,kBAAV,GAA4B;AAChC,EAAA,YAAY,CAAC,UAAb,CAAwB,WAAxB;AACD","sourcesContent":["import { AccAddress } from '@terra-money/terra.js';\nimport { ReadonlyWalletSession } from './types';\n\nconst STORAGE_KEY = '__terra-readonly-wallet-storage-key__';\n\nexport function getStoredSession(): ReadonlyWalletSession | undefined {\n  const storedSessionString = localStorage.getItem(STORAGE_KEY);\n\n  if (!storedSessionString) return undefined;\n\n  try {\n    const storedSession = JSON.parse(storedSessionString);\n\n    if (\n      'terraAddress' in storedSession &&\n      'network' in storedSession &&\n      typeof storedSession['terraAddress'] === 'string' &&\n      AccAddress.validate(storedSession.terraAddress)\n    ) {\n      return storedSession;\n    } else {\n      localStorage.removeItem(STORAGE_KEY);\n      return undefined;\n    }\n  } catch {\n    localStorage.removeItem(STORAGE_KEY);\n    return undefined;\n  }\n}\n\nexport function storeSession(session: ReadonlyWalletSession) {\n  if (!AccAddress.validate(session.terraAddress)) {\n    throw new Error(`${session.terraAddress} is not a terraAddress`);\n  }\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(session));\n}\n\nexport function clearStoredSession() {\n  localStorage.removeItem(STORAGE_KEY);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}