{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExchangeRateTuple = exports.AggregateExchangeRateVote = exports.AggregateExchangeRatePrevote = exports.Denom = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"terra.oracle.v1beta1\";\nconst baseParams = {\n  votePeriod: long_1.default.UZERO,\n  voteThreshold: \"\",\n  rewardBand: \"\",\n  rewardDistributionWindow: long_1.default.UZERO,\n  slashFraction: \"\",\n  slashWindow: long_1.default.UZERO,\n  minValidPerWindow: \"\"\n};\nexports.Params = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.votePeriod.isZero()) {\n      writer.uint32(8).uint64(message.votePeriod);\n    }\n\n    if (message.voteThreshold !== \"\") {\n      writer.uint32(18).string(message.voteThreshold);\n    }\n\n    if (message.rewardBand !== \"\") {\n      writer.uint32(26).string(message.rewardBand);\n    }\n\n    if (!message.rewardDistributionWindow.isZero()) {\n      writer.uint32(32).uint64(message.rewardDistributionWindow);\n    }\n\n    for (const v of message.whitelist) {\n      exports.Denom.encode(v, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.slashFraction !== \"\") {\n      writer.uint32(50).string(message.slashFraction);\n    }\n\n    if (!message.slashWindow.isZero()) {\n      writer.uint32(56).uint64(message.slashWindow);\n    }\n\n    if (message.minValidPerWindow !== \"\") {\n      writer.uint32(66).string(message.minValidPerWindow);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseParams);\n    message.whitelist = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.votePeriod = reader.uint64();\n          break;\n\n        case 2:\n          message.voteThreshold = reader.string();\n          break;\n\n        case 3:\n          message.rewardBand = reader.string();\n          break;\n\n        case 4:\n          message.rewardDistributionWindow = reader.uint64();\n          break;\n\n        case 5:\n          message.whitelist.push(exports.Denom.decode(reader, reader.uint32()));\n          break;\n\n        case 6:\n          message.slashFraction = reader.string();\n          break;\n\n        case 7:\n          message.slashWindow = reader.uint64();\n          break;\n\n        case 8:\n          message.minValidPerWindow = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseParams);\n    message.whitelist = [];\n\n    if (object.votePeriod !== undefined && object.votePeriod !== null) {\n      message.votePeriod = long_1.default.fromString(object.votePeriod);\n    } else {\n      message.votePeriod = long_1.default.UZERO;\n    }\n\n    if (object.voteThreshold !== undefined && object.voteThreshold !== null) {\n      message.voteThreshold = String(object.voteThreshold);\n    } else {\n      message.voteThreshold = \"\";\n    }\n\n    if (object.rewardBand !== undefined && object.rewardBand !== null) {\n      message.rewardBand = String(object.rewardBand);\n    } else {\n      message.rewardBand = \"\";\n    }\n\n    if (object.rewardDistributionWindow !== undefined && object.rewardDistributionWindow !== null) {\n      message.rewardDistributionWindow = long_1.default.fromString(object.rewardDistributionWindow);\n    } else {\n      message.rewardDistributionWindow = long_1.default.UZERO;\n    }\n\n    if (object.whitelist !== undefined && object.whitelist !== null) {\n      for (const e of object.whitelist) {\n        message.whitelist.push(exports.Denom.fromJSON(e));\n      }\n    }\n\n    if (object.slashFraction !== undefined && object.slashFraction !== null) {\n      message.slashFraction = String(object.slashFraction);\n    } else {\n      message.slashFraction = \"\";\n    }\n\n    if (object.slashWindow !== undefined && object.slashWindow !== null) {\n      message.slashWindow = long_1.default.fromString(object.slashWindow);\n    } else {\n      message.slashWindow = long_1.default.UZERO;\n    }\n\n    if (object.minValidPerWindow !== undefined && object.minValidPerWindow !== null) {\n      message.minValidPerWindow = String(object.minValidPerWindow);\n    } else {\n      message.minValidPerWindow = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.votePeriod !== undefined && (obj.votePeriod = (message.votePeriod || long_1.default.UZERO).toString());\n    message.voteThreshold !== undefined && (obj.voteThreshold = message.voteThreshold);\n    message.rewardBand !== undefined && (obj.rewardBand = message.rewardBand);\n    message.rewardDistributionWindow !== undefined && (obj.rewardDistributionWindow = (message.rewardDistributionWindow || long_1.default.UZERO).toString());\n\n    if (message.whitelist) {\n      obj.whitelist = message.whitelist.map(e => e ? exports.Denom.toJSON(e) : undefined);\n    } else {\n      obj.whitelist = [];\n    }\n\n    message.slashFraction !== undefined && (obj.slashFraction = message.slashFraction);\n    message.slashWindow !== undefined && (obj.slashWindow = (message.slashWindow || long_1.default.UZERO).toString());\n    message.minValidPerWindow !== undefined && (obj.minValidPerWindow = message.minValidPerWindow);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseParams);\n    message.whitelist = [];\n\n    if (object.votePeriod !== undefined && object.votePeriod !== null) {\n      message.votePeriod = object.votePeriod;\n    } else {\n      message.votePeriod = long_1.default.UZERO;\n    }\n\n    if (object.voteThreshold !== undefined && object.voteThreshold !== null) {\n      message.voteThreshold = object.voteThreshold;\n    } else {\n      message.voteThreshold = \"\";\n    }\n\n    if (object.rewardBand !== undefined && object.rewardBand !== null) {\n      message.rewardBand = object.rewardBand;\n    } else {\n      message.rewardBand = \"\";\n    }\n\n    if (object.rewardDistributionWindow !== undefined && object.rewardDistributionWindow !== null) {\n      message.rewardDistributionWindow = object.rewardDistributionWindow;\n    } else {\n      message.rewardDistributionWindow = long_1.default.UZERO;\n    }\n\n    if (object.whitelist !== undefined && object.whitelist !== null) {\n      for (const e of object.whitelist) {\n        message.whitelist.push(exports.Denom.fromPartial(e));\n      }\n    }\n\n    if (object.slashFraction !== undefined && object.slashFraction !== null) {\n      message.slashFraction = object.slashFraction;\n    } else {\n      message.slashFraction = \"\";\n    }\n\n    if (object.slashWindow !== undefined && object.slashWindow !== null) {\n      message.slashWindow = object.slashWindow;\n    } else {\n      message.slashWindow = long_1.default.UZERO;\n    }\n\n    if (object.minValidPerWindow !== undefined && object.minValidPerWindow !== null) {\n      message.minValidPerWindow = object.minValidPerWindow;\n    } else {\n      message.minValidPerWindow = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseDenom = {\n  name: \"\",\n  tobinTax: \"\"\n};\nexports.Denom = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n\n    if (message.tobinTax !== \"\") {\n      writer.uint32(18).string(message.tobinTax);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDenom);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n\n        case 2:\n          message.tobinTax = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDenom);\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = String(object.name);\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.tobinTax !== undefined && object.tobinTax !== null) {\n      message.tobinTax = String(object.tobinTax);\n    } else {\n      message.tobinTax = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.name !== undefined && (obj.name = message.name);\n    message.tobinTax !== undefined && (obj.tobinTax = message.tobinTax);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDenom);\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.tobinTax !== undefined && object.tobinTax !== null) {\n      message.tobinTax = object.tobinTax;\n    } else {\n      message.tobinTax = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseAggregateExchangeRatePrevote = {\n  hash: \"\",\n  voter: \"\",\n  submitBlock: long_1.default.UZERO\n};\nexports.AggregateExchangeRatePrevote = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== \"\") {\n      writer.uint32(10).string(message.hash);\n    }\n\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n\n    if (!message.submitBlock.isZero()) {\n      writer.uint32(24).uint64(message.submitBlock);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.string();\n          break;\n\n        case 2:\n          message.voter = reader.string();\n          break;\n\n        case 3:\n          message.submitBlock = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = String(object.hash);\n    } else {\n      message.hash = \"\";\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = String(object.voter);\n    } else {\n      message.voter = \"\";\n    }\n\n    if (object.submitBlock !== undefined && object.submitBlock !== null) {\n      message.submitBlock = long_1.default.fromString(object.submitBlock);\n    } else {\n      message.submitBlock = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = message.hash);\n    message.voter !== undefined && (obj.voter = message.voter);\n    message.submitBlock !== undefined && (obj.submitBlock = (message.submitBlock || long_1.default.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = \"\";\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = object.voter;\n    } else {\n      message.voter = \"\";\n    }\n\n    if (object.submitBlock !== undefined && object.submitBlock !== null) {\n      message.submitBlock = object.submitBlock;\n    } else {\n      message.submitBlock = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseAggregateExchangeRateVote = {\n  voter: \"\"\n};\nexports.AggregateExchangeRateVote = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.exchangeRateTuples) {\n      exports.ExchangeRateTuple.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.voter !== \"\") {\n      writer.uint32(18).string(message.voter);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseAggregateExchangeRateVote);\n    message.exchangeRateTuples = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.exchangeRateTuples.push(exports.ExchangeRateTuple.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.voter = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseAggregateExchangeRateVote);\n    message.exchangeRateTuples = [];\n\n    if (object.exchangeRateTuples !== undefined && object.exchangeRateTuples !== null) {\n      for (const e of object.exchangeRateTuples) {\n        message.exchangeRateTuples.push(exports.ExchangeRateTuple.fromJSON(e));\n      }\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = String(object.voter);\n    } else {\n      message.voter = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.exchangeRateTuples) {\n      obj.exchangeRateTuples = message.exchangeRateTuples.map(e => e ? exports.ExchangeRateTuple.toJSON(e) : undefined);\n    } else {\n      obj.exchangeRateTuples = [];\n    }\n\n    message.voter !== undefined && (obj.voter = message.voter);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseAggregateExchangeRateVote);\n    message.exchangeRateTuples = [];\n\n    if (object.exchangeRateTuples !== undefined && object.exchangeRateTuples !== null) {\n      for (const e of object.exchangeRateTuples) {\n        message.exchangeRateTuples.push(exports.ExchangeRateTuple.fromPartial(e));\n      }\n    }\n\n    if (object.voter !== undefined && object.voter !== null) {\n      message.voter = object.voter;\n    } else {\n      message.voter = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseExchangeRateTuple = {\n  denom: \"\",\n  exchangeRate: \"\"\n};\nexports.ExchangeRateTuple = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n\n    if (message.exchangeRate !== \"\") {\n      writer.uint32(18).string(message.exchangeRate);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseExchangeRateTuple);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n\n        case 2:\n          message.exchangeRate = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseExchangeRateTuple);\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.exchangeRate !== undefined && object.exchangeRate !== null) {\n      message.exchangeRate = String(object.exchangeRate);\n    } else {\n      message.exchangeRate = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.exchangeRate !== undefined && (obj.exchangeRate = message.exchangeRate);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseExchangeRateTuple);\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = object.denom;\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.exchangeRate !== undefined && object.exchangeRate !== null) {\n      message.exchangeRate = object.exchangeRate;\n    } else {\n      message.exchangeRate = \"\";\n    }\n\n    return message;\n  }\n\n};\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/terra/oracle/v1beta1/oracle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExchangeRateTuple = exports.AggregateExchangeRateVote = exports.AggregateExchangeRatePrevote = exports.Denom = exports.Params = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"terra.oracle.v1beta1\";\nconst baseParams = {\n    votePeriod: long_1.default.UZERO,\n    voteThreshold: \"\",\n    rewardBand: \"\",\n    rewardDistributionWindow: long_1.default.UZERO,\n    slashFraction: \"\",\n    slashWindow: long_1.default.UZERO,\n    minValidPerWindow: \"\",\n};\nexports.Params = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.votePeriod.isZero()) {\n            writer.uint32(8).uint64(message.votePeriod);\n        }\n        if (message.voteThreshold !== \"\") {\n            writer.uint32(18).string(message.voteThreshold);\n        }\n        if (message.rewardBand !== \"\") {\n            writer.uint32(26).string(message.rewardBand);\n        }\n        if (!message.rewardDistributionWindow.isZero()) {\n            writer.uint32(32).uint64(message.rewardDistributionWindow);\n        }\n        for (const v of message.whitelist) {\n            exports.Denom.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.slashFraction !== \"\") {\n            writer.uint32(50).string(message.slashFraction);\n        }\n        if (!message.slashWindow.isZero()) {\n            writer.uint32(56).uint64(message.slashWindow);\n        }\n        if (message.minValidPerWindow !== \"\") {\n            writer.uint32(66).string(message.minValidPerWindow);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseParams);\n        message.whitelist = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votePeriod = reader.uint64();\n                    break;\n                case 2:\n                    message.voteThreshold = reader.string();\n                    break;\n                case 3:\n                    message.rewardBand = reader.string();\n                    break;\n                case 4:\n                    message.rewardDistributionWindow = reader.uint64();\n                    break;\n                case 5:\n                    message.whitelist.push(exports.Denom.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.slashFraction = reader.string();\n                    break;\n                case 7:\n                    message.slashWindow = reader.uint64();\n                    break;\n                case 8:\n                    message.minValidPerWindow = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseParams);\n        message.whitelist = [];\n        if (object.votePeriod !== undefined && object.votePeriod !== null) {\n            message.votePeriod = long_1.default.fromString(object.votePeriod);\n        }\n        else {\n            message.votePeriod = long_1.default.UZERO;\n        }\n        if (object.voteThreshold !== undefined && object.voteThreshold !== null) {\n            message.voteThreshold = String(object.voteThreshold);\n        }\n        else {\n            message.voteThreshold = \"\";\n        }\n        if (object.rewardBand !== undefined && object.rewardBand !== null) {\n            message.rewardBand = String(object.rewardBand);\n        }\n        else {\n            message.rewardBand = \"\";\n        }\n        if (object.rewardDistributionWindow !== undefined && object.rewardDistributionWindow !== null) {\n            message.rewardDistributionWindow = long_1.default.fromString(object.rewardDistributionWindow);\n        }\n        else {\n            message.rewardDistributionWindow = long_1.default.UZERO;\n        }\n        if (object.whitelist !== undefined && object.whitelist !== null) {\n            for (const e of object.whitelist) {\n                message.whitelist.push(exports.Denom.fromJSON(e));\n            }\n        }\n        if (object.slashFraction !== undefined && object.slashFraction !== null) {\n            message.slashFraction = String(object.slashFraction);\n        }\n        else {\n            message.slashFraction = \"\";\n        }\n        if (object.slashWindow !== undefined && object.slashWindow !== null) {\n            message.slashWindow = long_1.default.fromString(object.slashWindow);\n        }\n        else {\n            message.slashWindow = long_1.default.UZERO;\n        }\n        if (object.minValidPerWindow !== undefined && object.minValidPerWindow !== null) {\n            message.minValidPerWindow = String(object.minValidPerWindow);\n        }\n        else {\n            message.minValidPerWindow = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votePeriod !== undefined && (obj.votePeriod = (message.votePeriod || long_1.default.UZERO).toString());\n        message.voteThreshold !== undefined && (obj.voteThreshold = message.voteThreshold);\n        message.rewardBand !== undefined && (obj.rewardBand = message.rewardBand);\n        message.rewardDistributionWindow !== undefined &&\n            (obj.rewardDistributionWindow = (message.rewardDistributionWindow || long_1.default.UZERO).toString());\n        if (message.whitelist) {\n            obj.whitelist = message.whitelist.map((e) => (e ? exports.Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.whitelist = [];\n        }\n        message.slashFraction !== undefined && (obj.slashFraction = message.slashFraction);\n        message.slashWindow !== undefined && (obj.slashWindow = (message.slashWindow || long_1.default.UZERO).toString());\n        message.minValidPerWindow !== undefined && (obj.minValidPerWindow = message.minValidPerWindow);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseParams);\n        message.whitelist = [];\n        if (object.votePeriod !== undefined && object.votePeriod !== null) {\n            message.votePeriod = object.votePeriod;\n        }\n        else {\n            message.votePeriod = long_1.default.UZERO;\n        }\n        if (object.voteThreshold !== undefined && object.voteThreshold !== null) {\n            message.voteThreshold = object.voteThreshold;\n        }\n        else {\n            message.voteThreshold = \"\";\n        }\n        if (object.rewardBand !== undefined && object.rewardBand !== null) {\n            message.rewardBand = object.rewardBand;\n        }\n        else {\n            message.rewardBand = \"\";\n        }\n        if (object.rewardDistributionWindow !== undefined && object.rewardDistributionWindow !== null) {\n            message.rewardDistributionWindow = object.rewardDistributionWindow;\n        }\n        else {\n            message.rewardDistributionWindow = long_1.default.UZERO;\n        }\n        if (object.whitelist !== undefined && object.whitelist !== null) {\n            for (const e of object.whitelist) {\n                message.whitelist.push(exports.Denom.fromPartial(e));\n            }\n        }\n        if (object.slashFraction !== undefined && object.slashFraction !== null) {\n            message.slashFraction = object.slashFraction;\n        }\n        else {\n            message.slashFraction = \"\";\n        }\n        if (object.slashWindow !== undefined && object.slashWindow !== null) {\n            message.slashWindow = object.slashWindow;\n        }\n        else {\n            message.slashWindow = long_1.default.UZERO;\n        }\n        if (object.minValidPerWindow !== undefined && object.minValidPerWindow !== null) {\n            message.minValidPerWindow = object.minValidPerWindow;\n        }\n        else {\n            message.minValidPerWindow = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenom = { name: \"\", tobinTax: \"\" };\nexports.Denom = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.tobinTax !== \"\") {\n            writer.uint32(18).string(message.tobinTax);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDenom);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.tobinTax = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDenom);\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.tobinTax !== undefined && object.tobinTax !== null) {\n            message.tobinTax = String(object.tobinTax);\n        }\n        else {\n            message.tobinTax = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.tobinTax !== undefined && (obj.tobinTax = message.tobinTax);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDenom);\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.tobinTax !== undefined && object.tobinTax !== null) {\n            message.tobinTax = object.tobinTax;\n        }\n        else {\n            message.tobinTax = \"\";\n        }\n        return message;\n    },\n};\nconst baseAggregateExchangeRatePrevote = { hash: \"\", voter: \"\", submitBlock: long_1.default.UZERO };\nexports.AggregateExchangeRatePrevote = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.hash !== \"\") {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (!message.submitBlock.isZero()) {\n            writer.uint32(24).uint64(message.submitBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.submitBlock = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.submitBlock !== undefined && object.submitBlock !== null) {\n            message.submitBlock = long_1.default.fromString(object.submitBlock);\n        }\n        else {\n            message.submitBlock = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.submitBlock !== undefined && (obj.submitBlock = (message.submitBlock || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseAggregateExchangeRatePrevote);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.submitBlock !== undefined && object.submitBlock !== null) {\n            message.submitBlock = object.submitBlock;\n        }\n        else {\n            message.submitBlock = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nconst baseAggregateExchangeRateVote = { voter: \"\" };\nexports.AggregateExchangeRateVote = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.exchangeRateTuples) {\n            exports.ExchangeRateTuple.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseAggregateExchangeRateVote);\n        message.exchangeRateTuples = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exchangeRateTuples.push(exports.ExchangeRateTuple.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseAggregateExchangeRateVote);\n        message.exchangeRateTuples = [];\n        if (object.exchangeRateTuples !== undefined && object.exchangeRateTuples !== null) {\n            for (const e of object.exchangeRateTuples) {\n                message.exchangeRateTuples.push(exports.ExchangeRateTuple.fromJSON(e));\n            }\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.exchangeRateTuples) {\n            obj.exchangeRateTuples = message.exchangeRateTuples.map((e) => e ? exports.ExchangeRateTuple.toJSON(e) : undefined);\n        }\n        else {\n            obj.exchangeRateTuples = [];\n        }\n        message.voter !== undefined && (obj.voter = message.voter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseAggregateExchangeRateVote);\n        message.exchangeRateTuples = [];\n        if (object.exchangeRateTuples !== undefined && object.exchangeRateTuples !== null) {\n            for (const e of object.exchangeRateTuples) {\n                message.exchangeRateTuples.push(exports.ExchangeRateTuple.fromPartial(e));\n            }\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        return message;\n    },\n};\nconst baseExchangeRateTuple = { denom: \"\", exchangeRate: \"\" };\nexports.ExchangeRateTuple = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exchangeRate !== \"\") {\n            writer.uint32(18).string(message.exchangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseExchangeRateTuple);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exchangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseExchangeRateTuple);\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exchangeRate !== undefined && object.exchangeRate !== null) {\n            message.exchangeRate = String(object.exchangeRate);\n        }\n        else {\n            message.exchangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exchangeRate !== undefined && (obj.exchangeRate = message.exchangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseExchangeRateTuple);\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exchangeRate !== undefined && object.exchangeRate !== null) {\n            message.exchangeRate = object.exchangeRate;\n        }\n        else {\n            message.exchangeRate = \"\";\n        }\n        return message;\n    },\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=oracle.js.map"]},"metadata":{},"sourceType":"script"}