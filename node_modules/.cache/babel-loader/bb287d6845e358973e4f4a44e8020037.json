{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgDelegateFeedConsentResponse = exports.MsgDelegateFeedConsent = exports.MsgAggregateExchangeRateVoteResponse = exports.MsgAggregateExchangeRateVote = exports.MsgAggregateExchangeRatePrevoteResponse = exports.MsgAggregateExchangeRatePrevote = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"terra.oracle.v1beta1\";\nconst baseMsgAggregateExchangeRatePrevote = {\n  hash: \"\",\n  feeder: \"\",\n  validator: \"\"\n};\nexports.MsgAggregateExchangeRatePrevote = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.hash !== \"\") {\n      writer.uint32(10).string(message.hash);\n    }\n\n    if (message.feeder !== \"\") {\n      writer.uint32(18).string(message.feeder);\n    }\n\n    if (message.validator !== \"\") {\n      writer.uint32(26).string(message.validator);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.string();\n          break;\n\n        case 2:\n          message.feeder = reader.string();\n          break;\n\n        case 3:\n          message.validator = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = String(object.hash);\n    } else {\n      message.hash = \"\";\n    }\n\n    if (object.feeder !== undefined && object.feeder !== null) {\n      message.feeder = String(object.feeder);\n    } else {\n      message.feeder = \"\";\n    }\n\n    if (object.validator !== undefined && object.validator !== null) {\n      message.validator = String(object.validator);\n    } else {\n      message.validator = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = message.hash);\n    message.feeder !== undefined && (obj.feeder = message.feeder);\n    message.validator !== undefined && (obj.validator = message.validator);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = \"\";\n    }\n\n    if (object.feeder !== undefined && object.feeder !== null) {\n      message.feeder = object.feeder;\n    } else {\n      message.feeder = \"\";\n    }\n\n    if (object.validator !== undefined && object.validator !== null) {\n      message.validator = object.validator;\n    } else {\n      message.validator = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgAggregateExchangeRatePrevoteResponse = {};\nexports.MsgAggregateExchangeRatePrevoteResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n    return message;\n  }\n\n};\nconst baseMsgAggregateExchangeRateVote = {\n  salt: \"\",\n  exchangeRates: \"\",\n  feeder: \"\",\n  validator: \"\"\n};\nexports.MsgAggregateExchangeRateVote = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.salt !== \"\") {\n      writer.uint32(10).string(message.salt);\n    }\n\n    if (message.exchangeRates !== \"\") {\n      writer.uint32(18).string(message.exchangeRates);\n    }\n\n    if (message.feeder !== \"\") {\n      writer.uint32(26).string(message.feeder);\n    }\n\n    if (message.validator !== \"\") {\n      writer.uint32(34).string(message.validator);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.salt = reader.string();\n          break;\n\n        case 2:\n          message.exchangeRates = reader.string();\n          break;\n\n        case 3:\n          message.feeder = reader.string();\n          break;\n\n        case 4:\n          message.validator = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n\n    if (object.salt !== undefined && object.salt !== null) {\n      message.salt = String(object.salt);\n    } else {\n      message.salt = \"\";\n    }\n\n    if (object.exchangeRates !== undefined && object.exchangeRates !== null) {\n      message.exchangeRates = String(object.exchangeRates);\n    } else {\n      message.exchangeRates = \"\";\n    }\n\n    if (object.feeder !== undefined && object.feeder !== null) {\n      message.feeder = String(object.feeder);\n    } else {\n      message.feeder = \"\";\n    }\n\n    if (object.validator !== undefined && object.validator !== null) {\n      message.validator = String(object.validator);\n    } else {\n      message.validator = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.salt !== undefined && (obj.salt = message.salt);\n    message.exchangeRates !== undefined && (obj.exchangeRates = message.exchangeRates);\n    message.feeder !== undefined && (obj.feeder = message.feeder);\n    message.validator !== undefined && (obj.validator = message.validator);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n\n    if (object.salt !== undefined && object.salt !== null) {\n      message.salt = object.salt;\n    } else {\n      message.salt = \"\";\n    }\n\n    if (object.exchangeRates !== undefined && object.exchangeRates !== null) {\n      message.exchangeRates = object.exchangeRates;\n    } else {\n      message.exchangeRates = \"\";\n    }\n\n    if (object.feeder !== undefined && object.feeder !== null) {\n      message.feeder = object.feeder;\n    } else {\n      message.feeder = \"\";\n    }\n\n    if (object.validator !== undefined && object.validator !== null) {\n      message.validator = object.validator;\n    } else {\n      message.validator = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgAggregateExchangeRateVoteResponse = {};\nexports.MsgAggregateExchangeRateVoteResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n    return message;\n  }\n\n};\nconst baseMsgDelegateFeedConsent = {\n  operator: \"\",\n  delegate: \"\"\n};\nexports.MsgDelegateFeedConsent = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.operator !== \"\") {\n      writer.uint32(10).string(message.operator);\n    }\n\n    if (message.delegate !== \"\") {\n      writer.uint32(18).string(message.delegate);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgDelegateFeedConsent);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.operator = reader.string();\n          break;\n\n        case 2:\n          message.delegate = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgDelegateFeedConsent);\n\n    if (object.operator !== undefined && object.operator !== null) {\n      message.operator = String(object.operator);\n    } else {\n      message.operator = \"\";\n    }\n\n    if (object.delegate !== undefined && object.delegate !== null) {\n      message.delegate = String(object.delegate);\n    } else {\n      message.delegate = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.operator !== undefined && (obj.operator = message.operator);\n    message.delegate !== undefined && (obj.delegate = message.delegate);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgDelegateFeedConsent);\n\n    if (object.operator !== undefined && object.operator !== null) {\n      message.operator = object.operator;\n    } else {\n      message.operator = \"\";\n    }\n\n    if (object.delegate !== undefined && object.delegate !== null) {\n      message.delegate = object.delegate;\n    } else {\n      message.delegate = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgDelegateFeedConsentResponse = {};\nexports.MsgDelegateFeedConsentResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n    return message;\n  }\n\n};\n\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.AggregateExchangeRatePrevote = this.AggregateExchangeRatePrevote.bind(this);\n    this.AggregateExchangeRateVote = this.AggregateExchangeRateVote.bind(this);\n    this.DelegateFeedConsent = this.DelegateFeedConsent.bind(this);\n  }\n\n  AggregateExchangeRatePrevote(request) {\n    const data = exports.MsgAggregateExchangeRatePrevote.encode(request).finish();\n    const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"AggregateExchangeRatePrevote\", data);\n    return promise.then(data => exports.MsgAggregateExchangeRatePrevoteResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  AggregateExchangeRateVote(request) {\n    const data = exports.MsgAggregateExchangeRateVote.encode(request).finish();\n    const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"AggregateExchangeRateVote\", data);\n    return promise.then(data => exports.MsgAggregateExchangeRateVoteResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  DelegateFeedConsent(request) {\n    const data = exports.MsgDelegateFeedConsent.encode(request).finish();\n    const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"DelegateFeedConsent\", data);\n    return promise.then(data => exports.MsgDelegateFeedConsentResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n}\n\nexports.MsgClientImpl = MsgClientImpl;\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/terra/oracle/v1beta1/tx.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgDelegateFeedConsentResponse = exports.MsgDelegateFeedConsent = exports.MsgAggregateExchangeRateVoteResponse = exports.MsgAggregateExchangeRateVote = exports.MsgAggregateExchangeRatePrevoteResponse = exports.MsgAggregateExchangeRatePrevote = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"terra.oracle.v1beta1\";\nconst baseMsgAggregateExchangeRatePrevote = { hash: \"\", feeder: \"\", validator: \"\" };\nexports.MsgAggregateExchangeRatePrevote = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.hash !== \"\") {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.feeder !== \"\") {\n            writer.uint32(18).string(message.feeder);\n        }\n        if (message.validator !== \"\") {\n            writer.uint32(26).string(message.validator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.feeder = reader.string();\n                    break;\n                case 3:\n                    message.validator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.feeder !== undefined && object.feeder !== null) {\n            message.feeder = String(object.feeder);\n        }\n        else {\n            message.feeder = \"\";\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = String(object.validator);\n        }\n        else {\n            message.validator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.feeder !== undefined && (obj.feeder = message.feeder);\n        message.validator !== undefined && (obj.validator = message.validator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevote);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.feeder !== undefined && object.feeder !== null) {\n            message.feeder = object.feeder;\n        }\n        else {\n            message.feeder = \"\";\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = object.validator;\n        }\n        else {\n            message.validator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAggregateExchangeRatePrevoteResponse = {};\nexports.MsgAggregateExchangeRatePrevoteResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRatePrevoteResponse);\n        return message;\n    },\n};\nconst baseMsgAggregateExchangeRateVote = { salt: \"\", exchangeRates: \"\", feeder: \"\", validator: \"\" };\nexports.MsgAggregateExchangeRateVote = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.salt !== \"\") {\n            writer.uint32(10).string(message.salt);\n        }\n        if (message.exchangeRates !== \"\") {\n            writer.uint32(18).string(message.exchangeRates);\n        }\n        if (message.feeder !== \"\") {\n            writer.uint32(26).string(message.feeder);\n        }\n        if (message.validator !== \"\") {\n            writer.uint32(34).string(message.validator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.salt = reader.string();\n                    break;\n                case 2:\n                    message.exchangeRates = reader.string();\n                    break;\n                case 3:\n                    message.feeder = reader.string();\n                    break;\n                case 4:\n                    message.validator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = String(object.salt);\n        }\n        else {\n            message.salt = \"\";\n        }\n        if (object.exchangeRates !== undefined && object.exchangeRates !== null) {\n            message.exchangeRates = String(object.exchangeRates);\n        }\n        else {\n            message.exchangeRates = \"\";\n        }\n        if (object.feeder !== undefined && object.feeder !== null) {\n            message.feeder = String(object.feeder);\n        }\n        else {\n            message.feeder = \"\";\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = String(object.validator);\n        }\n        else {\n            message.validator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.salt !== undefined && (obj.salt = message.salt);\n        message.exchangeRates !== undefined && (obj.exchangeRates = message.exchangeRates);\n        message.feeder !== undefined && (obj.feeder = message.feeder);\n        message.validator !== undefined && (obj.validator = message.validator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVote);\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = object.salt;\n        }\n        else {\n            message.salt = \"\";\n        }\n        if (object.exchangeRates !== undefined && object.exchangeRates !== null) {\n            message.exchangeRates = object.exchangeRates;\n        }\n        else {\n            message.exchangeRates = \"\";\n        }\n        if (object.feeder !== undefined && object.feeder !== null) {\n            message.feeder = object.feeder;\n        }\n        else {\n            message.feeder = \"\";\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = object.validator;\n        }\n        else {\n            message.validator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAggregateExchangeRateVoteResponse = {};\nexports.MsgAggregateExchangeRateVoteResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgAggregateExchangeRateVoteResponse);\n        return message;\n    },\n};\nconst baseMsgDelegateFeedConsent = { operator: \"\", delegate: \"\" };\nexports.MsgDelegateFeedConsent = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.operator !== \"\") {\n            writer.uint32(10).string(message.operator);\n        }\n        if (message.delegate !== \"\") {\n            writer.uint32(18).string(message.delegate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDelegateFeedConsent);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operator = reader.string();\n                    break;\n                case 2:\n                    message.delegate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgDelegateFeedConsent);\n        if (object.operator !== undefined && object.operator !== null) {\n            message.operator = String(object.operator);\n        }\n        else {\n            message.operator = \"\";\n        }\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operator !== undefined && (obj.operator = message.operator);\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgDelegateFeedConsent);\n        if (object.operator !== undefined && object.operator !== null) {\n            message.operator = object.operator;\n        }\n        else {\n            message.operator = \"\";\n        }\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateFeedConsentResponse = {};\nexports.MsgDelegateFeedConsentResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgDelegateFeedConsentResponse);\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.AggregateExchangeRatePrevote = this.AggregateExchangeRatePrevote.bind(this);\n        this.AggregateExchangeRateVote = this.AggregateExchangeRateVote.bind(this);\n        this.DelegateFeedConsent = this.DelegateFeedConsent.bind(this);\n    }\n    AggregateExchangeRatePrevote(request) {\n        const data = exports.MsgAggregateExchangeRatePrevote.encode(request).finish();\n        const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"AggregateExchangeRatePrevote\", data);\n        return promise.then((data) => exports.MsgAggregateExchangeRatePrevoteResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    AggregateExchangeRateVote(request) {\n        const data = exports.MsgAggregateExchangeRateVote.encode(request).finish();\n        const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"AggregateExchangeRateVote\", data);\n        return promise.then((data) => exports.MsgAggregateExchangeRateVoteResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    DelegateFeedConsent(request) {\n        const data = exports.MsgDelegateFeedConsent.encode(request).finish();\n        const promise = this.rpc.request(\"terra.oracle.v1beta1.Msg\", \"DelegateFeedConsent\", data);\n        return promise.then((data) => exports.MsgDelegateFeedConsentResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=tx.js.map"]},"metadata":{},"sourceType":"script"}