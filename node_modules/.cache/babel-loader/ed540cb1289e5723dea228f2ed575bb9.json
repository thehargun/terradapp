{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hargu\\\\Desktop\\\\Luna Classic\\\\LunaClassic\\\\src\\\\components\\\\ConnectSample.tsx\",\n    _s = $RefreshSig$();\n\nimport { useWallet, WalletStatus } from '@terra-money/wallet-provider';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ConnectSample() {\n  _s();\n\n  const {\n    status,\n    network,\n    wallets,\n    availableConnectTypes,\n    availableInstallTypes,\n    availableConnections,\n    supportFeatures,\n    connect,\n    install,\n    disconnect\n  } = useWallet();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify({\n          status\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [status === WalletStatus.WALLET_NOT_CONNECTED && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [availableInstallTypes.map(connectType => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => install(connectType),\n          children: [\"Install \", connectType]\n        }, 'install-' + connectType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)), availableConnectTypes.map(connectType => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => connect(connectType),\n          children: [\"Connect \", connectType]\n        }, 'connect-' + connectType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), availableConnections.map(_ref => {\n          let {\n            type,\n            name,\n            icon,\n            identifier = ''\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => connect(type, identifier),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: icon,\n              alt: name,\n              style: {\n                width: '1em',\n                height: '1em'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), name, \" [\", identifier, \"]\"]\n          }, 'connection-' + type + identifier, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true), status === WalletStatus.WALLET_CONNECTED && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => disconnect(),\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConnectSample, \"rW/Vakh+nWlYN3iFrYvlaoNpXZo=\", false, function () {\n  return [useWallet];\n});\n\n_c = ConnectSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectSample\");","map":{"version":3,"sources":["C:/Users/hargu/Desktop/Luna Classic/LunaClassic/src/components/ConnectSample.tsx"],"names":["useWallet","WalletStatus","React","ConnectSample","status","network","wallets","availableConnectTypes","availableInstallTypes","availableConnections","supportFeatures","connect","install","disconnect","JSON","stringify","WALLET_NOT_CONNECTED","map","connectType","type","name","icon","identifier","width","height","WALLET_CONNECTED"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,8BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,qBAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA,oBANI;AAOJC,IAAAA,eAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA,OATI;AAUJC,IAAAA;AAVI,MAWFb,SAAS,EAXb;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,kBAEEc,IAAI,CAACC,SAAL,CACE;AACEX,UAAAA;AADF,SADF;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA,iBACGA,MAAM,KAAKH,YAAY,CAACe,oBAAxB,iBACC;AAAA,mBACGR,qBAAqB,CAACS,GAAtB,CAA2BC,WAAD,iBACzB;AAEE,UAAA,OAAO,EAAE,MAAMN,OAAO,CAACM,WAAD,CAFxB;AAAA,iCAIWA,WAJX;AAAA,WACO,aAAaA,WADpB;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,EASGX,qBAAqB,CAACU,GAAtB,CAA2BC,WAAD,iBACzB;AAEE,UAAA,OAAO,EAAE,MAAMP,OAAO,CAACO,WAAD,CAFxB;AAAA,iCAIWA,WAJX;AAAA,WACO,aAAaA,WADpB;AAAA;AAAA;AAAA;AAAA,gBADD,CATH,eAiBE;AAAA;AAAA;AAAA;AAAA,gBAjBF,EAkBGT,oBAAoB,CAACQ,GAArB,CACC;AAAA,cAAC;AAAEE,YAAAA,IAAF;AAAQC,YAAAA,IAAR;AAAcC,YAAAA,IAAd;AAAoBC,YAAAA,UAAU,GAAG;AAAjC,WAAD;AAAA,8BACE;AAEE,YAAA,OAAO,EAAE,MAAMX,OAAO,CAACQ,IAAD,EAAOG,UAAP,CAFxB;AAAA,oCAIE;AACE,cAAA,GAAG,EAAED,IADP;AAEE,cAAA,GAAG,EAAED,IAFP;AAGE,cAAA,KAAK,EAAE;AAAEG,gBAAAA,KAAK,EAAE,KAAT;AAAgBC,gBAAAA,MAAM,EAAE;AAAxB;AAHT;AAAA;AAAA;AAAA;AAAA,oBAJF,EASGJ,IATH,QASWE,UATX;AAAA,aACO,gBAAgBH,IAAhB,GAAuBG,UAD9B;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,SADD,CAlBH;AAAA,sBAFJ,EAqCGlB,MAAM,KAAKH,YAAY,CAACwB,gBAAxB,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMZ,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD;;GAvEeV,a;UAYVH,S;;;KAZUG,a","sourcesContent":["import { useWallet, WalletStatus } from '@terra-money/wallet-provider';\nimport React from 'react';\n\nexport function ConnectSample() {\n  const {\n    status,\n    network,\n    wallets,\n    availableConnectTypes,\n    availableInstallTypes,\n    availableConnections,\n    supportFeatures,\n    connect,\n    install,\n    disconnect,\n  } = useWallet();\n\n  return (\n    <div>\n      <h1>Connect Wallet</h1>\n      <section>\n        <pre>\n          {\n          JSON.stringify(\n            {\n              status\n            }\n          )}\n        </pre>\n      </section>\n\n      <footer>\n        {status === WalletStatus.WALLET_NOT_CONNECTED && (\n          <>\n            {availableInstallTypes.map((connectType) => (\n              <button\n                key={'install-' + connectType}\n                onClick={() => install(connectType)}\n              >\n                Install {connectType}\n              </button>\n            ))}\n            {availableConnectTypes.map((connectType) => (\n              <button\n                key={'connect-' + connectType}\n                onClick={() => connect(connectType)}\n              >\n                Connect {connectType}\n              </button>\n            ))}\n            <br />\n            {availableConnections.map(\n              ({ type, name, icon, identifier = '' }) => (\n                <button\n                  key={'connection-' + type + identifier}\n                  onClick={() => connect(type, identifier)}\n                >\n                  <img\n                    src={icon}\n                    alt={name}\n                    style={{ width: '1em', height: '1em' }}\n                  />\n                  {name} [{identifier}]\n                </button>\n              ),\n            )}\n          </>\n        )}\n        {status === WalletStatus.WALLET_CONNECTED && (\n          <button onClick={() => disconnect()}>Disconnect</button>\n        )}\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}