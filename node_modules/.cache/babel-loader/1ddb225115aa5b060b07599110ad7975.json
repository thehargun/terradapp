{"ast":null,"code":"const FALLBACK_MAINNET = {\n  name: 'mainnet',\n  chainID: 'columbus-5',\n  lcd: 'https://lcd.terra.dev'\n};\nconst FALLBACK = {\n  defaultNetwork: FALLBACK_MAINNET,\n  walletConnectChainIds: {\n    1: FALLBACK_MAINNET,\n    0: {\n      name: 'testnet',\n      chainID: 'bombay-12',\n      lcd: 'https://bombay-lcd.terra.dev'\n    }\n  }\n};\nlet cache;\nexport async function getChainOptions() {\n  return fetch('https://assets.terra.money/chains.json').then(res => res.json()).then(data => {\n    const chains = Object.values(data);\n    const walletConnectChainIds = chains.reduce((result, network) => {\n      if (typeof network.walletconnectID === 'number') {\n        result[network.walletconnectID] = network;\n      } else if (!result[1] && network.name === 'mainnet') {\n        result[1] = network;\n      } else if (!result[0] && network.name === 'testnet') {\n        result[0] = network;\n      }\n\n      return result;\n    }, {});\n    const chainOptions = {\n      defaultNetwork: walletConnectChainIds[1],\n      walletConnectChainIds\n    };\n    cache = chainOptions;\n    return chainOptions;\n  }).catch(error => {\n    console.error('Failed to fetch chains.json', error);\n    return cache !== null && cache !== void 0 ? cache : FALLBACK;\n  });\n}","map":{"version":3,"sources":["../../../src/@terra-money/wallet-provider/getChainOptions.ts"],"names":[],"mappings":"AAeA,MAAM,gBAAgB,GAAG;AACvB,EAAA,IAAI,EAAE,SADiB;AAEvB,EAAA,OAAO,EAAE,YAFc;AAGvB,EAAA,GAAG,EAAE;AAHkB,CAAzB;AAMA,MAAM,QAAQ,GAAiC;AAC7C,EAAA,cAAc,EAAE,gBAD6B;AAE7C,EAAA,qBAAqB,EAAE;AACrB,OAAG,gBADkB;AAErB,OAAG;AACD,MAAA,IAAI,EAAE,SADL;AAED,MAAA,OAAO,EAAE,WAFR;AAGD,MAAA,GAAG,EAAE;AAHJ;AAFkB;AAFsB,CAA/C;AAYA,IAAI,KAAJ;AAEA,OAAO,eAAe,eAAf,GAA8B;AACnC,SAAO,KAAK,CAAC,wCAAD,CAAL,CACJ,IADI,CACE,GAAD,IAAS,GAAG,CAAC,IAAJ,EADV,EAEJ,IAFI,CAEE,IAAD,IAAoC;AACxC,UAAM,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,IAAd,CAAf;AACA,UAAM,qBAAqB,GAAG,MAAM,CAAC,MAAP,CAAc,CAAC,MAAD,EAAS,OAAT,KAAoB;AAC9D,UAAI,OAAO,OAAO,CAAC,eAAf,KAAmC,QAAvC,EAAiD;AAC/C,QAAA,MAAM,CAAC,OAAO,CAAC,eAAT,CAAN,GAAkC,OAAlC;AACD,OAFD,MAEO,IAAI,CAAC,MAAM,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,IAAR,KAAiB,SAAnC,EAA8C;AACnD,QAAA,MAAM,CAAC,CAAD,CAAN,GAAY,OAAZ;AACD,OAFM,MAEA,IAAI,CAAC,MAAM,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,IAAR,KAAiB,SAAnC,EAA8C;AACnD,QAAA,MAAM,CAAC,CAAD,CAAN,GAAY,OAAZ;AACD;;AACD,aAAO,MAAP;AACD,KAT6B,EAS3B,EAT2B,CAA9B;AAUA,UAAM,YAAY,GAAiC;AACjD,MAAA,cAAc,EAAE,qBAAqB,CAAC,CAAD,CADY;AAEjD,MAAA;AAFiD,KAAnD;AAIA,IAAA,KAAK,GAAG,YAAR;AACA,WAAO,YAAP;AACD,GApBI,EAqBJ,KArBI,CAqBG,KAAD,IAAU;AACf,IAAA,OAAO,CAAC,KAAR,CAAc,6BAAd,EAA6C,KAA7C;AACA,WAAO,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,QAAhB;AACD,GAxBI,CAAP;AAyBD","sourcesContent":["import { NetworkInfo } from '@terra-money/use-wallet';\nimport { WalletControllerOptions } from './controller';\n\ninterface ChainInfo {\n  name: string;\n  chainID: string;\n  lcd: string;\n  walletconnectID?: number;\n}\n\nexport type WalletControllerChainOptions = Pick<\n  WalletControllerOptions,\n  'defaultNetwork' | 'walletConnectChainIds'\n>;\n\nconst FALLBACK_MAINNET = {\n  name: 'mainnet',\n  chainID: 'columbus-5',\n  lcd: 'https://lcd.terra.dev',\n};\n\nconst FALLBACK: WalletControllerChainOptions = {\n  defaultNetwork: FALLBACK_MAINNET,\n  walletConnectChainIds: {\n    1: FALLBACK_MAINNET,\n    0: {\n      name: 'testnet',\n      chainID: 'bombay-12',\n      lcd: 'https://bombay-lcd.terra.dev',\n    },\n  },\n};\n\nlet cache: WalletControllerChainOptions;\n\nexport async function getChainOptions(): Promise<WalletControllerChainOptions> {\n  return fetch('https://assets.terra.money/chains.json')\n    .then((res) => res.json())\n    .then((data: Record<string, ChainInfo>) => {\n      const chains = Object.values(data);\n      const walletConnectChainIds = chains.reduce((result, network) => {\n        if (typeof network.walletconnectID === 'number') {\n          result[network.walletconnectID] = network;\n        } else if (!result[1] && network.name === 'mainnet') {\n          result[1] = network;\n        } else if (!result[0] && network.name === 'testnet') {\n          result[0] = network;\n        }\n        return result;\n      }, {} as Record<number, NetworkInfo>);\n      const chainOptions: WalletControllerChainOptions = {\n        defaultNetwork: walletConnectChainIds[1],\n        walletConnectChainIds,\n      };\n      cache = chainOptions;\n      return chainOptions;\n    })\n    .catch((error) => {\n      console.error('Failed to fetch chains.json', error);\n      return cache ?? FALLBACK;\n    });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}