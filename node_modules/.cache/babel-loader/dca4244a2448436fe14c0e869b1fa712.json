{"ast":null,"code":"import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString } from '@walletconnect/utils';\nimport NetworkMonitor from './network'; // @ts-ignore\n\nconst WS = typeof global.WebSocket !== 'undefined' ? global.WebSocket : require('ws'); // -- SocketTransport ------------------------------------------------------ //\n\nclass SocketTransport {\n  // -- constructor ----------------------------------------------------- //\n  constructor(opts) {\n    this.opts = opts;\n    this._queue = [];\n    this._events = [];\n    this._subscriptions = []; // -- public ---------------------------------------------------------- //\n\n    this.open = () => {\n      this._socketCreate();\n    };\n\n    this.close = () => {\n      this._socketClose();\n    };\n\n    this.send = (message, topic, silent) => {\n      if (!topic || typeof topic !== 'string') {\n        throw new Error('Missing or invalid topic field');\n      }\n\n      this._socketSend({\n        topic: topic,\n        type: 'pub',\n        payload: message,\n        silent: !!silent\n      });\n    };\n\n    this.subscribe = topic => {\n      this._socketSend({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true\n      });\n    };\n\n    this.on = (event, callback) => {\n      this._events.push({\n        event,\n        callback\n      });\n    }; // -- private ---------------------------------------------------------- //\n\n\n    this._socketCreate = () => {\n      if (this._nextSocket) {\n        return;\n      }\n\n      const url = getWebSocketUrl(this._url, this._protocol, this._version);\n      this._nextSocket = new WS(url);\n\n      if (!this._nextSocket) {\n        throw new Error('Failed to create socket');\n      }\n\n      this._nextSocket.onmessage = event => this._socketReceive(event);\n\n      this._nextSocket.onopen = () => this._socketOpen();\n\n      this._nextSocket.onerror = event => this._socketError(event);\n\n      this._nextSocket.onclose = () => {\n        this._nextSocket = null;\n        setTimeout(this._socketCreate, 500);\n      };\n    };\n\n    this._socketOpen = () => {\n      this._socketClose();\n\n      this._socket = this._nextSocket;\n      this._nextSocket = null;\n\n      this._queueSubscriptions();\n\n      this._pushQueue();\n    };\n\n    this._socketClose = () => {\n      if (this._socket) {\n        this._socket.onclose = () => {// empty\n        };\n\n        this._socket.close();\n      }\n    };\n\n    this._socketSend = socketMessage => {\n      const message = JSON.stringify(socketMessage);\n\n      if (this._socket && this._socket.readyState === 1) {\n        this._socket.send(message);\n      } else {\n        this._setToQueue(socketMessage);\n\n        this._socketCreate();\n      }\n    };\n\n    this._socketReceive = async event => {\n      let socketMessage;\n\n      try {\n        socketMessage = JSON.parse(event.data);\n      } catch (error) {\n        return;\n      }\n\n      this._socketSend({\n        topic: socketMessage.topic,\n        type: 'ack',\n        payload: '',\n        silent: true\n      });\n\n      if (this._socket && this._socket.readyState === 1) {\n        const events = this._events.filter(itemEvent => itemEvent.event === 'message');\n\n        if (events && events.length) {\n          events.forEach(itemEvent => itemEvent.callback(socketMessage));\n        }\n      }\n    };\n\n    this._socketError = e => {\n      const events = this._events.filter(event => event.event === 'error');\n\n      if (events && events.length) {\n        events.forEach(event => event.callback(e));\n      }\n    };\n\n    this._queueSubscriptions = () => {\n      const subscriptions = this._subscriptions;\n      subscriptions.forEach(topic => this._queue.push({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true\n      }));\n      this._subscriptions = this.opts.subscriptions || [];\n    };\n\n    this._setToQueue = socketMessage => {\n      this._queue.push(socketMessage);\n    };\n\n    this._pushQueue = () => {\n      const queue = this._queue;\n      queue.forEach(socketMessage => this._socketSend(socketMessage));\n      this._queue = [];\n    };\n\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = '';\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n\n    if (!opts.url || typeof opts.url !== 'string') {\n      throw new Error('Missing or invalid WebSocket url');\n    }\n\n    this._url = opts.url;\n\n    this._netMonitor.on('online', () => this._socketCreate());\n  }\n\n  set readyState(value) {// empty\n  }\n\n  get readyState() {\n    return this._socket ? this._socket.readyState : -1;\n  }\n\n  set connecting(value) {// empty\n  }\n\n  get connecting() {\n    return this.readyState === 0;\n  }\n\n  set connected(value) {// empty\n  }\n\n  get connected() {\n    return this.readyState === 1;\n  }\n\n  set closing(value) {// empty\n  }\n\n  get closing() {\n    return this.readyState === 2;\n  }\n\n  set closed(value) {// empty\n  }\n\n  get closed() {\n    return this.readyState === 3;\n  }\n\n}\n\nfunction getWebSocketUrl(webUrl, protocol, version) {\n  var _a, _b;\n\n  const url = webUrl.startsWith('https') ? webUrl.replace('https', 'wss') : webUrl.startsWith('http') ? webUrl.replace('http', 'ws') : webUrl;\n  const splitUrl = url.split('?');\n  const params = isBrowser() ? {\n    protocol,\n    version,\n    env: 'browser',\n    host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || ''\n  } : {\n    protocol,\n    version,\n    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || ''\n  };\n  const queryString = appendToQueryString(getQueryString(splitUrl[1] || ''), params);\n  return splitUrl[0] + '?' + queryString;\n}\n\nexport default SocketTransport;","map":{"version":3,"sources":["../../../../../../../src/@terra-money/wallet-provider/modules/walletconnect/impl/socket-transport/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ISocketMessage,\n  ITransportEvent,\n  INetworkMonitor,\n  ITransportLib,\n  ISocketTransportOptions,\n} from '@walletconnect/types';\nimport {\n  isBrowser,\n  getLocation,\n  getQueryString,\n  detectEnv,\n  appendToQueryString,\n} from '@walletconnect/utils';\n\nimport NetworkMonitor from './network';\n\n// @ts-ignore\nconst WS =\n  typeof global.WebSocket !== 'undefined' ? global.WebSocket : require('ws');\n\n// -- SocketTransport ------------------------------------------------------ //\n\nclass SocketTransport implements ITransportLib {\n  private _protocol: string;\n  private _version: number;\n  private _url: string;\n  private _netMonitor: INetworkMonitor | null;\n  private _socket: WebSocket | null;\n  private _nextSocket: WebSocket | null;\n  private _queue: ISocketMessage[] = [];\n  private _events: ITransportEvent[] = [];\n  private _subscriptions: string[] = [];\n\n  // -- constructor ----------------------------------------------------- //\n\n  constructor(private opts: ISocketTransportOptions) {\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = '';\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n\n    if (!opts.url || typeof opts.url !== 'string') {\n      throw new Error('Missing or invalid WebSocket url');\n    }\n\n    this._url = opts.url;\n\n    this._netMonitor.on('online', () => this._socketCreate());\n  }\n\n  set readyState(value) {\n    // empty\n  }\n\n  get readyState(): number {\n    return this._socket ? this._socket.readyState : -1;\n  }\n\n  set connecting(value) {\n    // empty\n  }\n\n  get connecting(): boolean {\n    return this.readyState === 0;\n  }\n\n  set connected(value) {\n    // empty\n  }\n\n  get connected(): boolean {\n    return this.readyState === 1;\n  }\n\n  set closing(value) {\n    // empty\n  }\n\n  get closing(): boolean {\n    return this.readyState === 2;\n  }\n\n  set closed(value) {\n    // empty\n  }\n\n  get closed(): boolean {\n    return this.readyState === 3;\n  }\n\n  // -- public ---------------------------------------------------------- //\n\n  public open = () => {\n    this._socketCreate();\n  };\n\n  public close = () => {\n    this._socketClose();\n  };\n\n  public send = (message: string, topic?: string, silent?: boolean): void => {\n    if (!topic || typeof topic !== 'string') {\n      throw new Error('Missing or invalid topic field');\n    }\n\n    this._socketSend({\n      topic: topic,\n      type: 'pub',\n      payload: message,\n      silent: !!silent,\n    });\n  };\n\n  public subscribe = (topic: string) => {\n    this._socketSend({\n      topic: topic,\n      type: 'sub',\n      payload: '',\n      silent: true,\n    });\n  };\n\n  public on = (event: string, callback: (payload: any) => void) => {\n    this._events.push({ event, callback });\n  };\n\n  // -- private ---------------------------------------------------------- //\n\n  private _socketCreate = () => {\n    if (this._nextSocket) {\n      return;\n    }\n\n    const url = getWebSocketUrl(this._url, this._protocol, this._version);\n\n    this._nextSocket = new WS(url);\n\n    if (!this._nextSocket) {\n      throw new Error('Failed to create socket');\n    }\n\n    this._nextSocket.onmessage = (event: MessageEvent) =>\n      this._socketReceive(event);\n\n    this._nextSocket.onopen = () => this._socketOpen();\n\n    this._nextSocket.onerror = (event: Event) => this._socketError(event);\n\n    this._nextSocket.onclose = () => {\n      this._nextSocket = null;\n      setTimeout(this._socketCreate, 500);\n    };\n  };\n\n  private _socketOpen = () => {\n    this._socketClose();\n    this._socket = this._nextSocket;\n    this._nextSocket = null;\n    this._queueSubscriptions();\n    this._pushQueue();\n  };\n\n  private _socketClose = () => {\n    if (this._socket) {\n      this._socket.onclose = () => {\n        // empty\n      };\n      this._socket.close();\n    }\n  };\n\n  private _socketSend = (socketMessage: ISocketMessage) => {\n    const message: string = JSON.stringify(socketMessage);\n\n    if (this._socket && this._socket.readyState === 1) {\n      this._socket.send(message);\n    } else {\n      this._setToQueue(socketMessage);\n      this._socketCreate();\n    }\n  };\n\n  private _socketReceive = async (event: MessageEvent) => {\n    let socketMessage: ISocketMessage;\n\n    try {\n      socketMessage = JSON.parse(event.data);\n    } catch (error) {\n      return;\n    }\n\n    this._socketSend({\n      topic: socketMessage.topic,\n      type: 'ack',\n      payload: '',\n      silent: true,\n    });\n\n    if (this._socket && this._socket.readyState === 1) {\n      const events = this._events.filter(\n        (itemEvent) => itemEvent.event === 'message',\n      );\n      if (events && events.length) {\n        events.forEach((itemEvent) => itemEvent.callback(socketMessage));\n      }\n    }\n  };\n\n  private _socketError = (e: Event) => {\n    const events = this._events.filter((event) => event.event === 'error');\n    if (events && events.length) {\n      events.forEach((event) => event.callback(e));\n    }\n  };\n\n  private _queueSubscriptions = () => {\n    const subscriptions = this._subscriptions;\n\n    subscriptions.forEach((topic: string) =>\n      this._queue.push({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true,\n      }),\n    );\n\n    this._subscriptions = this.opts.subscriptions || [];\n  };\n\n  private _setToQueue = (socketMessage: ISocketMessage) => {\n    this._queue.push(socketMessage);\n  };\n\n  private _pushQueue = () => {\n    const queue = this._queue;\n\n    queue.forEach((socketMessage: ISocketMessage) =>\n      this._socketSend(socketMessage),\n    );\n\n    this._queue = [];\n  };\n}\n\nfunction getWebSocketUrl(\n  webUrl: string,\n  protocol: string,\n  version: number,\n): string {\n  const url = webUrl.startsWith('https')\n    ? webUrl.replace('https', 'wss')\n    : webUrl.startsWith('http')\n    ? webUrl.replace('http', 'ws')\n    : webUrl;\n  const splitUrl = url.split('?');\n  const params = isBrowser()\n    ? {\n        protocol,\n        version,\n        env: 'browser',\n        host: getLocation()?.host || '',\n      }\n    : {\n        protocol,\n        version,\n        env: detectEnv()?.name || '',\n      };\n  const queryString = appendToQueryString(\n    getQueryString(splitUrl[1] || ''),\n    params,\n  );\n  return splitUrl[0] + '?' + queryString;\n}\n\nexport default SocketTransport;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}