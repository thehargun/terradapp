{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgSwapSendResponse = exports.MsgSwapSend = exports.MsgSwapResponse = exports.MsgSwap = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"terra.market.v1beta1\";\nconst baseMsgSwap = {\n  trader: \"\",\n  askDenom: \"\"\n};\nexports.MsgSwap = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.trader !== \"\") {\n      writer.uint32(10).string(message.trader);\n    }\n\n    if (message.offerCoin !== undefined) {\n      coin_1.Coin.encode(message.offerCoin, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.askDenom !== \"\") {\n      writer.uint32(26).string(message.askDenom);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgSwap);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.trader = reader.string();\n          break;\n\n        case 2:\n          message.offerCoin = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.askDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgSwap);\n\n    if (object.trader !== undefined && object.trader !== null) {\n      message.trader = String(object.trader);\n    } else {\n      message.trader = \"\";\n    }\n\n    if (object.offerCoin !== undefined && object.offerCoin !== null) {\n      message.offerCoin = coin_1.Coin.fromJSON(object.offerCoin);\n    } else {\n      message.offerCoin = undefined;\n    }\n\n    if (object.askDenom !== undefined && object.askDenom !== null) {\n      message.askDenom = String(object.askDenom);\n    } else {\n      message.askDenom = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.trader !== undefined && (obj.trader = message.trader);\n    message.offerCoin !== undefined && (obj.offerCoin = message.offerCoin ? coin_1.Coin.toJSON(message.offerCoin) : undefined);\n    message.askDenom !== undefined && (obj.askDenom = message.askDenom);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgSwap);\n\n    if (object.trader !== undefined && object.trader !== null) {\n      message.trader = object.trader;\n    } else {\n      message.trader = \"\";\n    }\n\n    if (object.offerCoin !== undefined && object.offerCoin !== null) {\n      message.offerCoin = coin_1.Coin.fromPartial(object.offerCoin);\n    } else {\n      message.offerCoin = undefined;\n    }\n\n    if (object.askDenom !== undefined && object.askDenom !== null) {\n      message.askDenom = object.askDenom;\n    } else {\n      message.askDenom = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSwapResponse = {};\nexports.MsgSwapResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.swapCoin !== undefined) {\n      coin_1.Coin.encode(message.swapCoin, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.swapFee !== undefined) {\n      coin_1.Coin.encode(message.swapFee, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgSwapResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.swapCoin = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.swapFee = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgSwapResponse);\n\n    if (object.swapCoin !== undefined && object.swapCoin !== null) {\n      message.swapCoin = coin_1.Coin.fromJSON(object.swapCoin);\n    } else {\n      message.swapCoin = undefined;\n    }\n\n    if (object.swapFee !== undefined && object.swapFee !== null) {\n      message.swapFee = coin_1.Coin.fromJSON(object.swapFee);\n    } else {\n      message.swapFee = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.swapCoin !== undefined && (obj.swapCoin = message.swapCoin ? coin_1.Coin.toJSON(message.swapCoin) : undefined);\n    message.swapFee !== undefined && (obj.swapFee = message.swapFee ? coin_1.Coin.toJSON(message.swapFee) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgSwapResponse);\n\n    if (object.swapCoin !== undefined && object.swapCoin !== null) {\n      message.swapCoin = coin_1.Coin.fromPartial(object.swapCoin);\n    } else {\n      message.swapCoin = undefined;\n    }\n\n    if (object.swapFee !== undefined && object.swapFee !== null) {\n      message.swapFee = coin_1.Coin.fromPartial(object.swapFee);\n    } else {\n      message.swapFee = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSwapSend = {\n  fromAddress: \"\",\n  toAddress: \"\",\n  askDenom: \"\"\n};\nexports.MsgSwapSend = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.fromAddress !== \"\") {\n      writer.uint32(10).string(message.fromAddress);\n    }\n\n    if (message.toAddress !== \"\") {\n      writer.uint32(18).string(message.toAddress);\n    }\n\n    if (message.offerCoin !== undefined) {\n      coin_1.Coin.encode(message.offerCoin, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.askDenom !== \"\") {\n      writer.uint32(34).string(message.askDenom);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgSwapSend);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.fromAddress = reader.string();\n          break;\n\n        case 2:\n          message.toAddress = reader.string();\n          break;\n\n        case 3:\n          message.offerCoin = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.askDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgSwapSend);\n\n    if (object.fromAddress !== undefined && object.fromAddress !== null) {\n      message.fromAddress = String(object.fromAddress);\n    } else {\n      message.fromAddress = \"\";\n    }\n\n    if (object.toAddress !== undefined && object.toAddress !== null) {\n      message.toAddress = String(object.toAddress);\n    } else {\n      message.toAddress = \"\";\n    }\n\n    if (object.offerCoin !== undefined && object.offerCoin !== null) {\n      message.offerCoin = coin_1.Coin.fromJSON(object.offerCoin);\n    } else {\n      message.offerCoin = undefined;\n    }\n\n    if (object.askDenom !== undefined && object.askDenom !== null) {\n      message.askDenom = String(object.askDenom);\n    } else {\n      message.askDenom = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n    message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n    message.offerCoin !== undefined && (obj.offerCoin = message.offerCoin ? coin_1.Coin.toJSON(message.offerCoin) : undefined);\n    message.askDenom !== undefined && (obj.askDenom = message.askDenom);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgSwapSend);\n\n    if (object.fromAddress !== undefined && object.fromAddress !== null) {\n      message.fromAddress = object.fromAddress;\n    } else {\n      message.fromAddress = \"\";\n    }\n\n    if (object.toAddress !== undefined && object.toAddress !== null) {\n      message.toAddress = object.toAddress;\n    } else {\n      message.toAddress = \"\";\n    }\n\n    if (object.offerCoin !== undefined && object.offerCoin !== null) {\n      message.offerCoin = coin_1.Coin.fromPartial(object.offerCoin);\n    } else {\n      message.offerCoin = undefined;\n    }\n\n    if (object.askDenom !== undefined && object.askDenom !== null) {\n      message.askDenom = object.askDenom;\n    } else {\n      message.askDenom = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSwapSendResponse = {};\nexports.MsgSwapSendResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.swapCoin !== undefined) {\n      coin_1.Coin.encode(message.swapCoin, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.swapFee !== undefined) {\n      coin_1.Coin.encode(message.swapFee, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgSwapSendResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.swapCoin = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.swapFee = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgSwapSendResponse);\n\n    if (object.swapCoin !== undefined && object.swapCoin !== null) {\n      message.swapCoin = coin_1.Coin.fromJSON(object.swapCoin);\n    } else {\n      message.swapCoin = undefined;\n    }\n\n    if (object.swapFee !== undefined && object.swapFee !== null) {\n      message.swapFee = coin_1.Coin.fromJSON(object.swapFee);\n    } else {\n      message.swapFee = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.swapCoin !== undefined && (obj.swapCoin = message.swapCoin ? coin_1.Coin.toJSON(message.swapCoin) : undefined);\n    message.swapFee !== undefined && (obj.swapFee = message.swapFee ? coin_1.Coin.toJSON(message.swapFee) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgSwapSendResponse);\n\n    if (object.swapCoin !== undefined && object.swapCoin !== null) {\n      message.swapCoin = coin_1.Coin.fromPartial(object.swapCoin);\n    } else {\n      message.swapCoin = undefined;\n    }\n\n    if (object.swapFee !== undefined && object.swapFee !== null) {\n      message.swapFee = coin_1.Coin.fromPartial(object.swapFee);\n    } else {\n      message.swapFee = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Swap = this.Swap.bind(this);\n    this.SwapSend = this.SwapSend.bind(this);\n  }\n\n  Swap(request) {\n    const data = exports.MsgSwap.encode(request).finish();\n    const promise = this.rpc.request(\"terra.market.v1beta1.Msg\", \"Swap\", data);\n    return promise.then(data => exports.MsgSwapResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  SwapSend(request) {\n    const data = exports.MsgSwapSend.encode(request).finish();\n    const promise = this.rpc.request(\"terra.market.v1beta1.Msg\", \"SwapSend\", data);\n    return promise.then(data => exports.MsgSwapSendResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n}\n\nexports.MsgClientImpl = MsgClientImpl;\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/terra/market/v1beta1/tx.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,MAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAEa,OAAA,CAAA,eAAA,GAAkB,sBAAlB;AA6Bb,MAAM,WAAW,GAAW;AAAE,EAAA,MAAM,EAAE,EAAV;AAAc,EAAA,QAAQ,EAAE;AAAxB,CAA5B;AAEa,OAAA,CAAA,OAAA,GAAU;AACrB,EAAA,MAAM,CAAC,OAAD,EAA2D;AAAA,QAAxC,MAAwC,uEAAnB,SAAA,CAAA,OAAA,CAAI,MAAJ,CAAW,MAAX,EAAmB;;AAC/D,QAAI,OAAO,CAAC,MAAR,KAAmB,EAAvB,EAA2B;AACzB,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAyB,OAAO,CAAC,MAAjC;AACD;;AACD,QAAI,OAAO,CAAC,SAAR,KAAsB,SAA1B,EAAqC;AACnC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,SAApB,EAA+B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA/B,EAAyD,MAAzD;AACD;;AACD,QAAI,OAAO,CAAC,QAAR,KAAqB,EAAzB,EAA6B;AAC3B,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAyB,OAAO,CAAC,QAAjC;AACD;;AACD,WAAO,MAAP;AACD,GAZoB;;AAcrB,EAAA,MAAM,CAAC,KAAD,EAAiC,MAAjC,EAAgD;AACpD,UAAM,MAAM,GAAG,KAAK,YAAY,SAAA,CAAA,OAAA,CAAI,MAArB,GAA8B,KAA9B,GAAsC,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,KAAf,CAArD;AACA,QAAI,GAAG,GAAG,MAAM,KAAK,SAAX,GAAuB,MAAM,CAAC,GAA9B,GAAoC,MAAM,CAAC,GAAP,GAAa,MAA3D;AACA,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,WAAL,CAAhB;;AACA,WAAO,MAAM,CAAC,GAAP,GAAa,GAApB,EAAyB;AACvB,YAAM,GAAG,GAAG,MAAM,CAAC,MAAP,EAAZ;;AACA,cAAQ,GAAG,KAAK,CAAhB;AACE,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,MAAR,GAAiB,MAAM,CAAC,MAAP,EAAjB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAApB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,MAAP,EAAnB;AACA;;AACF;AACE,UAAA,MAAM,CAAC,QAAP,CAAgB,GAAG,GAAG,CAAtB;AACA;AAZJ;AAcD;;AACD,WAAO,OAAP;AACD,GApCoB;;AAsCrB,EAAA,QAAQ,CAAC,MAAD,EAAY;AAClB,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,WAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,MAAA,OAAO,CAAC,MAAR,GAAiB,MAAM,CAAC,MAAM,CAAC,MAAR,CAAvB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,MAAR,GAAiB,EAAjB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,SAArB,CAApB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,SAApB;AACD;;AACD,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,MAAM,CAAC,QAAR,CAAzB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,EAAnB;AACD;;AACD,WAAO,OAAP;AACD,GAxDoB;;AA0DrB,EAAA,MAAM,CAAC,OAAD,EAAiB;AACrB,UAAM,GAAG,GAAQ,EAAjB;AACA,IAAA,OAAO,CAAC,MAAR,KAAmB,SAAnB,KAAiC,GAAG,CAAC,MAAJ,GAAa,OAAO,CAAC,MAAtD;AACA,IAAA,OAAO,CAAC,SAAR,KAAsB,SAAtB,KACG,GAAG,CAAC,SAAJ,GAAgB,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,SAApB,CAApB,GAAqD,SADxE;AAEA,IAAA,OAAO,CAAC,QAAR,KAAqB,SAArB,KAAmC,GAAG,CAAC,QAAJ,GAAe,OAAO,CAAC,QAA1D;AACA,WAAO,GAAP;AACD,GAjEoB;;AAmErB,EAAA,WAAW,CAAC,MAAD,EAA6B;AACtC,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,WAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,MAAP,KAAkB,SAAlB,IAA+B,MAAM,CAAC,MAAP,KAAkB,IAArD,EAA2D;AACzD,MAAA,OAAO,CAAC,MAAR,GAAiB,MAAM,CAAC,MAAxB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,MAAR,GAAiB,EAAjB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,SAAxB,CAApB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,SAApB;AACD;;AACD,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,QAA1B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,EAAnB;AACD;;AACD,WAAO,OAAP;AACD;;AArFoB,CAAV;AAwFb,MAAM,mBAAmB,GAAW,EAApC;AAEa,OAAA,CAAA,eAAA,GAAkB;AAC7B,EAAA,MAAM,CAAC,OAAD,EAAmE;AAAA,QAAxC,MAAwC,uEAAnB,SAAA,CAAA,OAAA,CAAI,MAAJ,CAAW,MAAX,EAAmB;;AACvE,QAAI,OAAO,CAAC,QAAR,KAAqB,SAAzB,EAAoC;AAClC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,QAApB,EAA8B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA9B,EAAwD,MAAxD;AACD;;AACD,QAAI,OAAO,CAAC,OAAR,KAAoB,SAAxB,EAAmC;AACjC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,OAApB,EAA6B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA7B,EAAuD,MAAvD;AACD;;AACD,WAAO,MAAP;AACD,GAT4B;;AAW7B,EAAA,MAAM,CAAC,KAAD,EAAiC,MAAjC,EAAgD;AACpD,UAAM,MAAM,GAAG,KAAK,YAAY,SAAA,CAAA,OAAA,CAAI,MAArB,GAA8B,KAA9B,GAAsC,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,KAAf,CAArD;AACA,QAAI,GAAG,GAAG,MAAM,KAAK,SAAX,GAAuB,MAAM,CAAC,GAA9B,GAAoC,MAAM,CAAC,GAAP,GAAa,MAA3D;AACA,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,mBAAL,CAAhB;;AACA,WAAO,MAAM,CAAC,GAAP,GAAa,GAApB,EAAyB;AACvB,YAAM,GAAG,GAAG,MAAM,CAAC,MAAP,EAAZ;;AACA,cAAQ,GAAG,KAAK,CAAhB;AACE,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAAnB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAAlB;AACA;;AACF;AACE,UAAA,MAAM,CAAC,QAAP,CAAgB,GAAG,GAAG,CAAtB;AACA;AATJ;AAWD;;AACD,WAAO,OAAP;AACD,GA9B4B;;AAgC7B,EAAA,QAAQ,CAAC,MAAD,EAAY;AAClB,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,mBAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,QAArB,CAAnB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,SAAnB;AACD;;AACD,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,MAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,OAArB,CAAlB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,OAAR,GAAkB,SAAlB;AACD;;AACD,WAAO,OAAP;AACD,GA7C4B;;AA+C7B,EAAA,MAAM,CAAC,OAAD,EAAyB;AAC7B,UAAM,GAAG,GAAQ,EAAjB;AACA,IAAA,OAAO,CAAC,QAAR,KAAqB,SAArB,KACG,GAAG,CAAC,QAAJ,GAAe,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,QAApB,CAAnB,GAAmD,SADrE;AAEA,IAAA,OAAO,CAAC,OAAR,KAAoB,SAApB,KACG,GAAG,CAAC,OAAJ,GAAc,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,OAApB,CAAlB,GAAiD,SADlE;AAEA,WAAO,GAAP;AACD,GAtD4B;;AAwD7B,EAAA,WAAW,CAAC,MAAD,EAAqC;AAC9C,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,mBAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,QAAxB,CAAnB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,SAAnB;AACD;;AACD,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,MAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,OAAxB,CAAlB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,OAAR,GAAkB,SAAlB;AACD;;AACD,WAAO,OAAP;AACD;;AArE4B,CAAlB;AAwEb,MAAM,eAAe,GAAW;AAAE,EAAA,WAAW,EAAE,EAAf;AAAmB,EAAA,SAAS,EAAE,EAA9B;AAAkC,EAAA,QAAQ,EAAE;AAA5C,CAAhC;AAEa,OAAA,CAAA,WAAA,GAAc;AACzB,EAAA,MAAM,CAAC,OAAD,EAA+D;AAAA,QAAxC,MAAwC,uEAAnB,SAAA,CAAA,OAAA,CAAI,MAAJ,CAAW,MAAX,EAAmB;;AACnE,QAAI,OAAO,CAAC,WAAR,KAAwB,EAA5B,EAAgC;AAC9B,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAyB,OAAO,CAAC,WAAjC;AACD;;AACD,QAAI,OAAO,CAAC,SAAR,KAAsB,EAA1B,EAA8B;AAC5B,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAyB,OAAO,CAAC,SAAjC;AACD;;AACD,QAAI,OAAO,CAAC,SAAR,KAAsB,SAA1B,EAAqC;AACnC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,SAApB,EAA+B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA/B,EAAyD,MAAzD;AACD;;AACD,QAAI,OAAO,CAAC,QAAR,KAAqB,EAAzB,EAA6B;AAC3B,MAAA,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAyB,OAAO,CAAC,QAAjC;AACD;;AACD,WAAO,MAAP;AACD,GAfwB;;AAiBzB,EAAA,MAAM,CAAC,KAAD,EAAiC,MAAjC,EAAgD;AACpD,UAAM,MAAM,GAAG,KAAK,YAAY,SAAA,CAAA,OAAA,CAAI,MAArB,GAA8B,KAA9B,GAAsC,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,KAAf,CAArD;AACA,QAAI,GAAG,GAAG,MAAM,KAAK,SAAX,GAAuB,MAAM,CAAC,GAA9B,GAAoC,MAAM,CAAC,GAAP,GAAa,MAA3D;AACA,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,eAAL,CAAhB;;AACA,WAAO,MAAM,CAAC,GAAP,GAAa,GAApB,EAAyB;AACvB,YAAM,GAAG,GAAG,MAAM,CAAC,MAAP,EAAZ;;AACA,cAAQ,GAAG,KAAK,CAAhB;AACE,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,WAAR,GAAsB,MAAM,CAAC,MAAP,EAAtB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,SAAR,GAAoB,MAAM,CAAC,MAAP,EAApB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAApB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,MAAP,EAAnB;AACA;;AACF;AACE,UAAA,MAAM,CAAC,QAAP,CAAgB,GAAG,GAAG,CAAtB;AACA;AAfJ;AAiBD;;AACD,WAAO,OAAP;AACD,GA1CwB;;AA4CzB,EAAA,QAAQ,CAAC,MAAD,EAAY;AAClB,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,eAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,MAAA,OAAO,CAAC,WAAR,GAAsB,MAAM,CAAC,MAAM,CAAC,WAAR,CAA5B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,WAAR,GAAsB,EAAtB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAM,CAAC,MAAM,CAAC,SAAR,CAA1B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,EAApB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,SAArB,CAApB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,SAApB;AACD;;AACD,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,MAAM,CAAC,QAAR,CAAzB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,EAAnB;AACD;;AACD,WAAO,OAAP;AACD,GAnEwB;;AAqEzB,EAAA,MAAM,CAAC,OAAD,EAAqB;AACzB,UAAM,GAAG,GAAQ,EAAjB;AACA,IAAA,OAAO,CAAC,WAAR,KAAwB,SAAxB,KAAsC,GAAG,CAAC,WAAJ,GAAkB,OAAO,CAAC,WAAhE;AACA,IAAA,OAAO,CAAC,SAAR,KAAsB,SAAtB,KAAoC,GAAG,CAAC,SAAJ,GAAgB,OAAO,CAAC,SAA5D;AACA,IAAA,OAAO,CAAC,SAAR,KAAsB,SAAtB,KACG,GAAG,CAAC,SAAJ,GAAgB,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,SAApB,CAApB,GAAqD,SADxE;AAEA,IAAA,OAAO,CAAC,QAAR,KAAqB,SAArB,KAAmC,GAAG,CAAC,QAAJ,GAAe,OAAO,CAAC,QAA1D;AACA,WAAO,GAAP;AACD,GA7EwB;;AA+EzB,EAAA,WAAW,CAAC,MAAD,EAAiC;AAC1C,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,eAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,WAAP,KAAuB,SAAvB,IAAoC,MAAM,CAAC,WAAP,KAAuB,IAA/D,EAAqE;AACnE,MAAA,OAAO,CAAC,WAAR,GAAsB,MAAM,CAAC,WAA7B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,WAAR,GAAsB,EAAtB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAM,CAAC,SAA3B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,EAApB;AACD;;AACD,QAAI,MAAM,CAAC,SAAP,KAAqB,SAArB,IAAkC,MAAM,CAAC,SAAP,KAAqB,IAA3D,EAAiE;AAC/D,MAAA,OAAO,CAAC,SAAR,GAAoB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,SAAxB,CAApB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,SAAR,GAAoB,SAApB;AACD;;AACD,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,CAAC,QAA1B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,EAAnB;AACD;;AACD,WAAO,OAAP;AACD;;AAtGwB,CAAd;AAyGb,MAAM,uBAAuB,GAAW,EAAxC;AAEa,OAAA,CAAA,mBAAA,GAAsB;AACjC,EAAA,MAAM,CAAC,OAAD,EAAuE;AAAA,QAAxC,MAAwC,uEAAnB,SAAA,CAAA,OAAA,CAAI,MAAJ,CAAW,MAAX,EAAmB;;AAC3E,QAAI,OAAO,CAAC,QAAR,KAAqB,SAAzB,EAAoC;AAClC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,QAApB,EAA8B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA9B,EAAwD,MAAxD;AACD;;AACD,QAAI,OAAO,CAAC,OAAR,KAAoB,SAAxB,EAAmC;AACjC,MAAA,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,OAApB,EAA6B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAA7B,EAAuD,MAAvD;AACD;;AACD,WAAO,MAAP;AACD,GATgC;;AAWjC,EAAA,MAAM,CAAC,KAAD,EAAiC,MAAjC,EAAgD;AACpD,UAAM,MAAM,GAAG,KAAK,YAAY,SAAA,CAAA,OAAA,CAAI,MAArB,GAA8B,KAA9B,GAAsC,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,KAAf,CAArD;AACA,QAAI,GAAG,GAAG,MAAM,KAAK,SAAX,GAAuB,MAAM,CAAC,GAA9B,GAAoC,MAAM,CAAC,GAAP,GAAa,MAA3D;AACA,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,uBAAL,CAAhB;;AACA,WAAO,MAAM,CAAC,GAAP,GAAa,GAApB,EAAyB;AACvB,YAAM,GAAG,GAAG,MAAM,CAAC,MAAP,EAAZ;;AACA,cAAQ,GAAG,KAAK,CAAhB;AACE,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAAnB;AACA;;AACF,aAAK,CAAL;AACE,UAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,MAAZ,EAAoB,MAAM,CAAC,MAAP,EAApB,CAAlB;AACA;;AACF;AACE,UAAA,MAAM,CAAC,QAAP,CAAgB,GAAG,GAAG,CAAtB;AACA;AATJ;AAWD;;AACD,WAAO,OAAP;AACD,GA9BgC;;AAgCjC,EAAA,QAAQ,CAAC,MAAD,EAAY;AAClB,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,uBAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,QAArB,CAAnB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,SAAnB;AACD;;AACD,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,MAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,MAAM,CAAC,OAArB,CAAlB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,OAAR,GAAkB,SAAlB;AACD;;AACD,WAAO,OAAP;AACD,GA7CgC;;AA+CjC,EAAA,MAAM,CAAC,OAAD,EAA6B;AACjC,UAAM,GAAG,GAAQ,EAAjB;AACA,IAAA,OAAO,CAAC,QAAR,KAAqB,SAArB,KACG,GAAG,CAAC,QAAJ,GAAe,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,QAApB,CAAnB,GAAmD,SADrE;AAEA,IAAA,OAAO,CAAC,OAAR,KAAoB,SAApB,KACG,GAAG,CAAC,OAAJ,GAAc,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,MAAL,CAAY,OAAO,CAAC,OAApB,CAAlB,GAAiD,SADlE;AAEA,WAAO,GAAP;AACD,GAtDgC;;AAwDjC,EAAA,WAAW,CAAC,MAAD,EAAyC;AAClD,UAAM,OAAO,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,uBAAL,CAAhB;;AACA,QAAI,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,KAAoB,IAAzD,EAA+D;AAC7D,MAAA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,QAAxB,CAAnB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,QAAR,GAAmB,SAAnB;AACD;;AACD,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAnB,IAAgC,MAAM,CAAC,OAAP,KAAmB,IAAvD,EAA6D;AAC3D,MAAA,OAAO,CAAC,OAAR,GAAkB,MAAA,CAAA,IAAA,CAAK,WAAL,CAAiB,MAAM,CAAC,OAAxB,CAAlB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,OAAR,GAAkB,SAAlB;AACD;;AACD,WAAO,OAAP;AACD;;AArEgC,CAAtB;;AAsFb,MAAa,aAAb,CAA0B;AAExB,EAAA,WAAA,CAAY,GAAZ,EAAoB;AAClB,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAZ;AACA,SAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AACD,EAAA,IAAI,CAAC,OAAD,EAAiB;AACnB,UAAM,IAAI,GAAG,OAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,OAAf,EAAwB,MAAxB,EAAb;AACA,UAAM,OAAO,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,0BAAjB,EAA6C,MAA7C,EAAqD,IAArD,CAAhB;AACA,WAAO,OAAO,CAAC,IAAR,CAAc,IAAD,IAAU,OAAA,CAAA,eAAA,CAAgB,MAAhB,CAAuB,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,IAAf,CAAvB,CAAvB,CAAP;AACD;;AAED,EAAA,QAAQ,CAAC,OAAD,EAAqB;AAC3B,UAAM,IAAI,GAAG,OAAA,CAAA,WAAA,CAAY,MAAZ,CAAmB,OAAnB,EAA4B,MAA5B,EAAb;AACA,UAAM,OAAO,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,0BAAjB,EAA6C,UAA7C,EAAyD,IAAzD,CAAhB;AACA,WAAO,OAAO,CAAC,IAAR,CAAc,IAAD,IAAU,OAAA,CAAA,mBAAA,CAAoB,MAApB,CAA2B,IAAI,SAAA,CAAA,OAAA,CAAI,MAAR,CAAe,IAAf,CAA3B,CAAvB,CAAP;AACD;;AAjBuB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA;;AAmCA,IAAI,SAAA,CAAA,OAAA,CAAI,IAAJ,CAAS,IAAT,KAAkB,MAAA,CAAA,OAAtB,EAA4B;AAC1B,EAAA,SAAA,CAAA,OAAA,CAAI,IAAJ,CAAS,IAAT,GAAgB,MAAA,CAAA,OAAhB;AACA,EAAA,SAAA,CAAA,OAAA,CAAI,SAAJ;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgSwapSendResponse = exports.MsgSwapSend = exports.MsgSwapResponse = exports.MsgSwap = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"terra.market.v1beta1\";\nconst baseMsgSwap = { trader: \"\", askDenom: \"\" };\nexports.MsgSwap = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.trader !== \"\") {\n            writer.uint32(10).string(message.trader);\n        }\n        if (message.offerCoin !== undefined) {\n            coin_1.Coin.encode(message.offerCoin, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.askDenom !== \"\") {\n            writer.uint32(26).string(message.askDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgSwap);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trader = reader.string();\n                    break;\n                case 2:\n                    message.offerCoin = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.askDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgSwap);\n        if (object.trader !== undefined && object.trader !== null) {\n            message.trader = String(object.trader);\n        }\n        else {\n            message.trader = \"\";\n        }\n        if (object.offerCoin !== undefined && object.offerCoin !== null) {\n            message.offerCoin = coin_1.Coin.fromJSON(object.offerCoin);\n        }\n        else {\n            message.offerCoin = undefined;\n        }\n        if (object.askDenom !== undefined && object.askDenom !== null) {\n            message.askDenom = String(object.askDenom);\n        }\n        else {\n            message.askDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trader !== undefined && (obj.trader = message.trader);\n        message.offerCoin !== undefined &&\n            (obj.offerCoin = message.offerCoin ? coin_1.Coin.toJSON(message.offerCoin) : undefined);\n        message.askDenom !== undefined && (obj.askDenom = message.askDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgSwap);\n        if (object.trader !== undefined && object.trader !== null) {\n            message.trader = object.trader;\n        }\n        else {\n            message.trader = \"\";\n        }\n        if (object.offerCoin !== undefined && object.offerCoin !== null) {\n            message.offerCoin = coin_1.Coin.fromPartial(object.offerCoin);\n        }\n        else {\n            message.offerCoin = undefined;\n        }\n        if (object.askDenom !== undefined && object.askDenom !== null) {\n            message.askDenom = object.askDenom;\n        }\n        else {\n            message.askDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSwapResponse = {};\nexports.MsgSwapResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.swapCoin !== undefined) {\n            coin_1.Coin.encode(message.swapCoin, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.swapFee !== undefined) {\n            coin_1.Coin.encode(message.swapFee, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgSwapResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.swapCoin = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.swapFee = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgSwapResponse);\n        if (object.swapCoin !== undefined && object.swapCoin !== null) {\n            message.swapCoin = coin_1.Coin.fromJSON(object.swapCoin);\n        }\n        else {\n            message.swapCoin = undefined;\n        }\n        if (object.swapFee !== undefined && object.swapFee !== null) {\n            message.swapFee = coin_1.Coin.fromJSON(object.swapFee);\n        }\n        else {\n            message.swapFee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.swapCoin !== undefined &&\n            (obj.swapCoin = message.swapCoin ? coin_1.Coin.toJSON(message.swapCoin) : undefined);\n        message.swapFee !== undefined &&\n            (obj.swapFee = message.swapFee ? coin_1.Coin.toJSON(message.swapFee) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgSwapResponse);\n        if (object.swapCoin !== undefined && object.swapCoin !== null) {\n            message.swapCoin = coin_1.Coin.fromPartial(object.swapCoin);\n        }\n        else {\n            message.swapCoin = undefined;\n        }\n        if (object.swapFee !== undefined && object.swapFee !== null) {\n            message.swapFee = coin_1.Coin.fromPartial(object.swapFee);\n        }\n        else {\n            message.swapFee = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSwapSend = { fromAddress: \"\", toAddress: \"\", askDenom: \"\" };\nexports.MsgSwapSend = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        if (message.offerCoin !== undefined) {\n            coin_1.Coin.encode(message.offerCoin, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.askDenom !== \"\") {\n            writer.uint32(34).string(message.askDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgSwapSend);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.offerCoin = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.askDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgSwapSend);\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.offerCoin !== undefined && object.offerCoin !== null) {\n            message.offerCoin = coin_1.Coin.fromJSON(object.offerCoin);\n        }\n        else {\n            message.offerCoin = undefined;\n        }\n        if (object.askDenom !== undefined && object.askDenom !== null) {\n            message.askDenom = String(object.askDenom);\n        }\n        else {\n            message.askDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        message.offerCoin !== undefined &&\n            (obj.offerCoin = message.offerCoin ? coin_1.Coin.toJSON(message.offerCoin) : undefined);\n        message.askDenom !== undefined && (obj.askDenom = message.askDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgSwapSend);\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.offerCoin !== undefined && object.offerCoin !== null) {\n            message.offerCoin = coin_1.Coin.fromPartial(object.offerCoin);\n        }\n        else {\n            message.offerCoin = undefined;\n        }\n        if (object.askDenom !== undefined && object.askDenom !== null) {\n            message.askDenom = object.askDenom;\n        }\n        else {\n            message.askDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSwapSendResponse = {};\nexports.MsgSwapSendResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.swapCoin !== undefined) {\n            coin_1.Coin.encode(message.swapCoin, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.swapFee !== undefined) {\n            coin_1.Coin.encode(message.swapFee, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgSwapSendResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.swapCoin = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.swapFee = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgSwapSendResponse);\n        if (object.swapCoin !== undefined && object.swapCoin !== null) {\n            message.swapCoin = coin_1.Coin.fromJSON(object.swapCoin);\n        }\n        else {\n            message.swapCoin = undefined;\n        }\n        if (object.swapFee !== undefined && object.swapFee !== null) {\n            message.swapFee = coin_1.Coin.fromJSON(object.swapFee);\n        }\n        else {\n            message.swapFee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.swapCoin !== undefined &&\n            (obj.swapCoin = message.swapCoin ? coin_1.Coin.toJSON(message.swapCoin) : undefined);\n        message.swapFee !== undefined &&\n            (obj.swapFee = message.swapFee ? coin_1.Coin.toJSON(message.swapFee) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgSwapSendResponse);\n        if (object.swapCoin !== undefined && object.swapCoin !== null) {\n            message.swapCoin = coin_1.Coin.fromPartial(object.swapCoin);\n        }\n        else {\n            message.swapCoin = undefined;\n        }\n        if (object.swapFee !== undefined && object.swapFee !== null) {\n            message.swapFee = coin_1.Coin.fromPartial(object.swapFee);\n        }\n        else {\n            message.swapFee = undefined;\n        }\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Swap = this.Swap.bind(this);\n        this.SwapSend = this.SwapSend.bind(this);\n    }\n    Swap(request) {\n        const data = exports.MsgSwap.encode(request).finish();\n        const promise = this.rpc.request(\"terra.market.v1beta1.Msg\", \"Swap\", data);\n        return promise.then((data) => exports.MsgSwapResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    SwapSend(request) {\n        const data = exports.MsgSwapSend.encode(request).finish();\n        const promise = this.rpc.request(\"terra.market.v1beta1.Msg\", \"SwapSend\", data);\n        return promise.then((data) => exports.MsgSwapSendResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=tx.js.map"]},"metadata":{},"sourceType":"script"}