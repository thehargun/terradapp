{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { AccAddress } from '@terra-money/terra.js';\nimport { createElement, useCallback, useMemo, useState } from 'react';\nimport { render } from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nexport function readonlyWalletModal(_ref) {\n  let {\n    networks,\n    className\n  } = _ref;\n  return new Promise(resolve => {\n    var _a;\n\n    const modalContainer = window.document.createElement('div');\n\n    function onComplete(session) {\n      var _a;\n\n      resolve(session);\n      (_a = modalContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(modalContainer);\n    }\n\n    const modal = createElement(ReadonlyWalletModal, {\n      className,\n      networks,\n      onComplete\n    });\n    render(modal, modalContainer);\n    (_a = window.document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.appendChild(modalContainer);\n  });\n}\n\nfunction ReadonlyWalletModalBase(_ref2) {\n  let {\n    networks,\n    className,\n    onComplete\n  } = _ref2;\n  const [chainID, setChainID] = useState(() => networks[0].chainID);\n  const [address, setAddress] = useState('');\n  const validAddress = useMemo(() => {\n    return AccAddress.validate(address);\n  }, [address]);\n  const submit = useCallback(() => {\n    const network = networks.find(itemNetwork => itemNetwork.chainID === chainID);\n    if (!network) return;\n    onComplete({\n      terraAddress: address,\n      network\n    });\n  }, [address, chainID, networks, onComplete]);\n  return _jsxs(\"div\", Object.assign({\n    className: className\n  }, {\n    children: [_jsx(\"div\", {\n      onClick: () => onComplete(null)\n    }, void 0), _jsxs(\"section\", {\n      children: [_jsx(\"h1\", {\n        children: \"View an Address\"\n      }, void 0), _jsxs(\"label\", {\n        children: [_jsx(\"select\", Object.assign({\n          value: chainID,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setChainID(target.value);\n          }\n        }, {\n          children: networks.map(itemNetwork => _jsxs(\"option\", {\n            children: [itemNetwork.name[0].toUpperCase() + itemNetwork.name.slice(1), ' ', \"- \", itemNetwork.chainID]\n          }, itemNetwork.chainID))\n        }), void 0), _jsx(\"svg\", Object.assign({\n          viewBox: \"0 0 10 6\"\n        }, {\n          children: _jsx(\"polyline\", {\n            points: \"1 1 5 5 9 1\"\n          }, void 0)\n        }), void 0)]\n      }, void 0), _jsx(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: _ref4 => {\n          let {\n            target\n          } = _ref4;\n          return setAddress(target.value);\n        }\n      }, void 0), _jsx(\"button\", Object.assign({\n        disabled: !validAddress,\n        onClick: submit\n      }, {\n        children: \"View an Address\"\n      }), void 0)]\n    }, void 0)]\n  }), void 0);\n}\n\nconst modalEnter = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n`;\nconst sectionEnter = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(0.4);\n  }\n  \n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\nconst ReadonlyWalletModal = styled(ReadonlyWalletModalBase)`\n  position: fixed;\n  z-index: 100000;\n\n  color: #000000;\n\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n\n  display: grid;\n  place-content: center;\n\n  > div {\n    position: fixed;\n    z-index: -1;\n\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.3);\n\n    animation: ${modalEnter} 0.2s ease-in-out;\n  }\n\n  > section {\n    max-width: 80vw;\n    width: 450px;\n\n    border-radius: 25px;\n\n    background-color: #ffffff;\n    box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);\n\n    animation: ${sectionEnter} 0.2s ease-in-out;\n\n    padding: 50px 60px;\n\n    h1 {\n      font-size: 27px;\n      font-weight: 500;\n\n      text-align: center;\n\n      margin-bottom: 24px;\n    }\n\n    label {\n      position: relative;\n\n      select {\n        -webkit-appearance: none;\n        outline: none;\n        padding: 10px 40px 10px 12px;\n        width: 100%;\n        border: 1px solid #2c2c2c;\n        border-radius: 10px;\n        cursor: pointer;\n        font-family: inherit;\n        font-size: 13px;\n      }\n\n      svg {\n        position: absolute;\n        right: 12px;\n        top: calc(50%);\n        width: 10px;\n        height: 6px;\n        stroke-width: 2px;\n        stroke: #2c2c2c;\n        fill: none;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n        pointer-events: none;\n      }\n    }\n\n    input {\n      box-sizing: border-box;\n      margin-top: 10px;\n\n      font-size: 13px;\n      outline: none;\n      border-radius: 10px;\n      padding: 0 12px;\n      width: 100%;\n      height: 37px;\n      border: 1px solid #2c2c2c;\n    }\n\n    button {\n      margin-top: 20px;\n\n      cursor: pointer;\n\n      display: block;\n      outline: none;\n      width: 100%;\n      height: 40px;\n      font-size: 13px;\n      letter-spacing: -0.2px;\n      border-radius: 18px;\n      border: 0;\n\n      color: #ffffff;\n      background-color: #2c2c2c;\n\n      &:disabled {\n        opacity: 0.4;\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["../../../../../src/@terra-money/wallet-provider/modules/readonly-wallet/modal.tsx"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,uBAA3B;AAEA,SAAS,aAAT,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,QAA9C,QAA8D,OAA9D;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,OAAO,MAAP,IAAiB,SAAjB,QAAkC,mBAAlC;AAQA,OAAM,SAAU,mBAAV,OAGI;AAAA,MAH0B;AAClC,IAAA,QADkC;AAElC,IAAA;AAFkC,GAG1B;AACR,SAAO,IAAI,OAAJ,CAA2C,OAAD,IAAY;;;AAC3D,UAAM,cAAc,GAAG,MAAM,CAAC,QAAP,CAAgB,aAAhB,CAA8B,KAA9B,CAAvB;;AAEA,aAAS,UAAT,CAAoB,OAApB,EAAyD;;;AACvD,MAAA,OAAO,CAAC,OAAD,CAAP;AACA,OAAA,EAAA,GAAA,cAAc,CAAC,aAAf,MAA4B,IAA5B,IAA4B,EAAA,KAAA,KAAA,CAA5B,GAA4B,KAAA,CAA5B,GAA4B,EAAA,CAAE,WAAF,CAAc,cAAd,CAA5B;AACD;;AAED,UAAM,KAAK,GAAG,aAAa,CAAC,mBAAD,EAAsB;AAC/C,MAAA,SAD+C;AAE/C,MAAA,QAF+C;AAG/C,MAAA;AAH+C,KAAtB,CAA3B;AAMA,IAAA,MAAM,CAAC,KAAD,EAAQ,cAAR,CAAN;AACA,KAAA,EAAA,GAAA,MAAM,CAAC,QAAP,CAAgB,aAAhB,CAA8B,MAA9B,CAAA,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,KAAA,CAArC,GAAqC,EAAA,CAAE,WAAF,CAAc,cAAd,CAArC;AACD,GAhBM,CAAP;AAiBD;;AAED,SAAS,uBAAT,QAI4E;AAAA,MAJ3C;AAC/B,IAAA,QAD+B;AAE/B,IAAA,SAF+B;AAG/B,IAAA;AAH+B,GAI2C;AAC1E,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAS,MAAM,QAAQ,CAAC,CAAD,CAAR,CAAY,OAA3B,CAAtC;AACA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAS,EAAT,CAAtC;AAEA,QAAM,YAAY,GAAG,OAAO,CAAC,MAAK;AAChC,WAAO,UAAU,CAAC,QAAX,CAAoB,OAApB,CAAP;AACD,GAF2B,EAEzB,CAAC,OAAD,CAFyB,CAA5B;AAIA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAK;AAC9B,UAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CACb,WAAD,IAAiB,WAAW,CAAC,OAAZ,KAAwB,OAD3B,CAAhB;AAIA,QAAI,CAAC,OAAL,EAAc;AAEd,IAAA,UAAU,CAAC;AACT,MAAA,YAAY,EAAE,OADL;AAET,MAAA;AAFS,KAAD,CAAV;AAID,GAXyB,EAWvB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,UAA7B,CAXuB,CAA1B;AAaA,SACE,KAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE;AAAhB,GAAA,EAAyB;AAAA,IAAA,QAAA,EAAA,CACvB,IAAA,CAAA,KAAA,EAAA;AAAK,MAAA,OAAO,EAAE,MAAM,UAAU,CAAC,IAAD;AAA9B,KAAA,EAAoC,KAAA,CAApC,CADuB,EAEvB,KAAA,CAAA,SAAA,EAAA;AAAA,MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,CADF,EAGE,KAAA,CAAA,OAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CACE,IAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,UAAA,KAAK,EAAE,OADT;AAEE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAE,cAAA;AAAF,aAAD;AAAA,mBAAgB,UAAU,CAAC,MAAM,CAAC,KAAR,CAA1B;AAAA;AAFZ,SAAA,EAEoD;AAAA,UAAA,QAAA,EAEjD,QAAQ,CAAC,GAAT,CAAc,WAAD,IACZ,KAAA,CAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,CACG,WAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,WAApB,KAAoC,WAAW,CAAC,IAAZ,CAAiB,KAAjB,CAAuB,CAAvB,CADvC,EACkE,GADlE,EACqE,IADrE,EAEK,WAAW,CAAC,OAFjB;AAAA,WAAA,EAAa,WAAW,CAAC,OAAzB,CADD;AAFiD,SAFpD,CAAA,EASI,KAAA,CATJ,CADF,EAYE,IAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,UAAA,OAAO,EAAC;AAAb,SAAA,EAAuB;AAAA,UAAA,QAAA,EACrB,IAAA,CAAA,UAAA,EAAA;AAAU,YAAA,MAAM,EAAC;AAAjB,WAAA,EAA8B,KAAA,CAA9B;AADqB,SAAvB,CAAA,EAC4C,KAAA,CAD5C,CAZF;AAAA,OAAA,EAcQ,KAAA,CAdR,CAHF,EAoBE,IAAA,CAAA,OAAA,EAAA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,OAFT;AAGE,QAAA,QAAQ,EAAE;AAAA,cAAC;AAAE,YAAA;AAAF,WAAD;AAAA,iBAAgB,UAAU,CAAC,MAAM,CAAC,KAAR,CAA1B;AAAA;AAHZ,OAAA,EAGoD,KAAA,CAHpD,CApBF,EA0BE,IAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAQ,QAAA,QAAQ,EAAE,CAAC,YAAnB;AAAiC,QAAA,OAAO,EAAE;AAA1C,OAAA,EAAgD;AAAA,QAAA,QAAA,EAAA;AAAA,OAAhD,CAAA,EAAgD,KAAA,CAAhD,CA1BF;AAAA,KAAA,EA4BW,KAAA,CA5BX,CAFuB;AAAA,GAAzB,CAAA,EA+BY,KAAA,CA/BZ,CADF;AAmCD;;AAED,MAAM,UAAU,GAAG,SAAS;;;;;;;;AAQ3B,CARD;AAUA,MAAM,YAAY,GAAG,SAAS;;;;;;;;;;AAU7B,CAVD;AAYA,MAAM,mBAAmB,GAAG,MAAM,CAAC,uBAAD,CAAyB;;;;;;;;;;;;;;;;;;;;;;;;iBAwB1C,UAAU;;;;;;;;;;;;iBAYV,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8E5B,CAlHD","sourcesContent":["import { AccAddress } from '@terra-money/terra.js';\nimport { NetworkInfo } from '@terra-money/use-wallet';\nimport { createElement, useCallback, useMemo, useState } from 'react';\nimport { render } from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { ReadonlyWalletSession } from './types';\n\ninterface Options {\n  networks: NetworkInfo[];\n  className?: string;\n}\n\nexport function readonlyWalletModal({\n  networks,\n  className,\n}: Options): Promise<ReadonlyWalletSession | null> {\n  return new Promise<ReadonlyWalletSession | null>((resolve) => {\n    const modalContainer = window.document.createElement('div');\n\n    function onComplete(session: ReadonlyWalletSession | null) {\n      resolve(session);\n      modalContainer.parentElement?.removeChild(modalContainer);\n    }\n\n    const modal = createElement(ReadonlyWalletModal, {\n      className,\n      networks,\n      onComplete,\n    });\n\n    render(modal, modalContainer);\n    window.document.querySelector('body')?.appendChild(modalContainer);\n  });\n}\n\nfunction ReadonlyWalletModalBase({\n  networks,\n  className,\n  onComplete,\n}: Options & { onComplete: (session: ReadonlyWalletSession | null) => void }) {\n  const [chainID, setChainID] = useState<string>(() => networks[0].chainID);\n  const [address, setAddress] = useState<string>('');\n\n  const validAddress = useMemo(() => {\n    return AccAddress.validate(address);\n  }, [address]);\n\n  const submit = useCallback(() => {\n    const network = networks.find(\n      (itemNetwork) => itemNetwork.chainID === chainID,\n    );\n\n    if (!network) return;\n\n    onComplete({\n      terraAddress: address,\n      network,\n    });\n  }, [address, chainID, networks, onComplete]);\n\n  return (\n    <div className={className}>\n      <div onClick={() => onComplete(null)} />\n      <section>\n        <h1>View an Address</h1>\n\n        <label>\n          <select\n            value={chainID}\n            onChange={({ target }) => setChainID(target.value)}\n          >\n            {networks.map((itemNetwork) => (\n              <option key={itemNetwork.chainID}>\n                {itemNetwork.name[0].toUpperCase() + itemNetwork.name.slice(1)}{' '}\n                - {itemNetwork.chainID}\n              </option>\n            ))}\n          </select>\n          <svg viewBox=\"0 0 10 6\">\n            <polyline points=\"1 1 5 5 9 1\"></polyline>\n          </svg>\n        </label>\n\n        <input\n          type=\"text\"\n          value={address}\n          onChange={({ target }) => setAddress(target.value)}\n        />\n\n        <button disabled={!validAddress} onClick={submit}>\n          View an Address\n        </button>\n      </section>\n    </div>\n  );\n}\n\nconst modalEnter = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n`;\n\nconst sectionEnter = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(0.4);\n  }\n  \n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst ReadonlyWalletModal = styled(ReadonlyWalletModalBase)`\n  position: fixed;\n  z-index: 100000;\n\n  color: #000000;\n\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n\n  display: grid;\n  place-content: center;\n\n  > div {\n    position: fixed;\n    z-index: -1;\n\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.3);\n\n    animation: ${modalEnter} 0.2s ease-in-out;\n  }\n\n  > section {\n    max-width: 80vw;\n    width: 450px;\n\n    border-radius: 25px;\n\n    background-color: #ffffff;\n    box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);\n\n    animation: ${sectionEnter} 0.2s ease-in-out;\n\n    padding: 50px 60px;\n\n    h1 {\n      font-size: 27px;\n      font-weight: 500;\n\n      text-align: center;\n\n      margin-bottom: 24px;\n    }\n\n    label {\n      position: relative;\n\n      select {\n        -webkit-appearance: none;\n        outline: none;\n        padding: 10px 40px 10px 12px;\n        width: 100%;\n        border: 1px solid #2c2c2c;\n        border-radius: 10px;\n        cursor: pointer;\n        font-family: inherit;\n        font-size: 13px;\n      }\n\n      svg {\n        position: absolute;\n        right: 12px;\n        top: calc(50%);\n        width: 10px;\n        height: 6px;\n        stroke-width: 2px;\n        stroke: #2c2c2c;\n        fill: none;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n        pointer-events: none;\n      }\n    }\n\n    input {\n      box-sizing: border-box;\n      margin-top: 10px;\n\n      font-size: 13px;\n      outline: none;\n      border-radius: 10px;\n      padding: 0 12px;\n      width: 100%;\n      height: 37px;\n      border: 1px solid #2c2c2c;\n    }\n\n    button {\n      margin-top: 20px;\n\n      cursor: pointer;\n\n      display: block;\n      outline: none;\n      width: 100%;\n      height: 40px;\n      font-size: 13px;\n      letter-spacing: -0.2px;\n      border-radius: 18px;\n      border: 0;\n\n      color: #ffffff;\n      background-color: #2c2c2c;\n\n      &:disabled {\n        opacity: 0.4;\n      }\n    }\n  }\n`;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}