{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenTry = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar Counterparty_1 = require(\"./Counterparty\");\n\nvar Version_1 = require(\"./Version\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/tx\");\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar Height_1 = require(\"../client/Height\");\n/**\n *  MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B.\n */\n\n\nvar MsgConnectionOpenTry =\n/** @class */\nfunction (_super) {\n  __extends(MsgConnectionOpenTry, _super);\n  /**\n   * @param client_id in the case of crossing hello's, when both chains call OpenInit, we need the connection identifier of the previous connection in state INIT\n   * @param previous_connection_id\n   * @param client_state\n   * @param counterparty\n   * @param delay_period\n   * @param counterparty_versions\n   * @param proof_height proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`\n   * @param proof_init proof of client state included in message\n   * @param proof_client proof of client consensus state\n   * @param proof_consensus\n   * @param consensus_height\n   * @param signer signer address\n   */\n\n\n  function MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty, delay_period, counterparty_versions, proof_height, proof_init, proof_client, proof_consensus, consensus_height, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.client_id = client_id;\n    _this.previous_connection_id = previous_connection_id;\n    _this.client_state = client_state;\n    _this.counterparty = counterparty;\n    _this.delay_period = delay_period;\n    _this.counterparty_versions = counterparty_versions;\n    _this.proof_height = proof_height;\n    _this.proof_init = proof_init;\n    _this.proof_client = proof_client;\n    _this.proof_consensus = proof_consensus;\n    _this.consensus_height = consensus_height;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgConnectionOpenTry.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenTry.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenTry.fromData = function (data) {\n    var client_id = data.client_id,\n        previous_connection_id = data.previous_connection_id,\n        client_state = data.client_state,\n        counterparty = data.counterparty,\n        delay_period = data.delay_period,\n        counterparty_versions = data.counterparty_versions,\n        proof_height = data.proof_height,\n        proof_init = data.proof_init,\n        proof_client = data.proof_client,\n        proof_consensus = data.proof_consensus,\n        consensus_height = data.consensus_height,\n        signer = data.signer;\n    return new MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, Number.parseInt(delay_period), counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n      return Version_1.Version.fromData(cv);\n    }) : [], proof_height ? Height_1.Height.fromData(proof_height) : undefined, Buffer.from(proof_init).toString('base64'), Buffer.from(proof_client).toString('base64'), Buffer.from(proof_consensus).toString('base64'), consensus_height ? Height_1.Height.fromData(consensus_height) : undefined, signer);\n  };\n\n  MsgConnectionOpenTry.prototype.toData = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        previous_connection_id = _a.previous_connection_id,\n        client_state = _a.client_state,\n        counterparty = _a.counterparty,\n        delay_period = _a.delay_period,\n        counterparty_versions = _a.counterparty_versions,\n        proof_height = _a.proof_height,\n        proof_init = _a.proof_init,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      client_id: client_id,\n      previous_connection_id: previous_connection_id,\n      client_state: client_state,\n      counterparty: counterparty ? counterparty.toData() : undefined,\n      delay_period: delay_period.toFixed(),\n      counterparty_versions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toData();\n      }) : [],\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      proof_init: proof_init,\n      proof_client: proof_client,\n      proof_consensus: proof_consensus,\n      consensus_height: consensus_height ? consensus_height.toData() : undefined,\n      signer: signer\n    };\n  };\n\n  MsgConnectionOpenTry.fromProto = function (proto) {\n    return new MsgConnectionOpenTry(proto.clientId, proto.previousConnectionId, proto.clientState, proto.counterparty ? Counterparty_1.Counterparty.fromProto(proto.counterparty) : undefined, proto.delayPeriod.toNumber(), proto.counterpartyVersions.length > 0 ? proto.counterpartyVersions.map(function (cv) {\n      return Version_1.Version.fromProto(cv);\n    }) : [], proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, Buffer.from(proto.proofInit).toString('base64'), Buffer.from(proto.proofClient).toString('base64'), Buffer.from(proto.proofConsensus).toString('base64'), proto.consensusHeight ? Height_1.Height.fromProto(proto.consensusHeight) : undefined, proto.signer);\n  };\n\n  MsgConnectionOpenTry.prototype.toProto = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        previous_connection_id = _a.previous_connection_id,\n        client_state = _a.client_state,\n        counterparty = _a.counterparty,\n        delay_period = _a.delay_period,\n        counterparty_versions = _a.counterparty_versions,\n        proof_height = _a.proof_height,\n        proof_init = _a.proof_init,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return tx_1.MsgConnectionOpenTry.fromPartial({\n      clientId: client_id,\n      previousConnectionId: previous_connection_id,\n      clientState: client_state.toProto(),\n      counterparty: counterparty ? counterparty.toProto() : undefined,\n      delayPeriod: long_1.default.fromNumber(delay_period),\n      counterpartyVersions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toProto();\n      }) : [],\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      proofInit: Buffer.from(proof_init, 'base64'),\n      proofClient: Buffer.from(proof_client, 'base64'),\n      proofConsensus: Buffer.from(proof_consensus, 'base64'),\n      consensusHeight: consensus_height ? consensus_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n\n  MsgConnectionOpenTry.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      value: tx_1.MsgConnectionOpenTry.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgConnectionOpenTry.unpackAny = function (msgAny) {\n    return MsgConnectionOpenTry.fromProto(tx_1.MsgConnectionOpenTry.decode(msgAny.value));\n  };\n\n  return MsgConnectionOpenTry;\n}(json_1.JSONSerializable);\n\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;","map":{"version":3,"sources":["../../../../../src/core/ibc/msgs/connection/MsgConnectionOpenTry.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgConnectionOpenTry = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar Counterparty_1 = require(\"./Counterparty\");\nvar Version_1 = require(\"./Version\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/tx\");\nvar long_1 = __importDefault(require(\"long\"));\nvar Height_1 = require(\"../client/Height\");\n/**\n *  MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B.\n */\nvar MsgConnectionOpenTry = /** @class */ (function (_super) {\n    __extends(MsgConnectionOpenTry, _super);\n    /**\n     * @param client_id in the case of crossing hello's, when both chains call OpenInit, we need the connection identifier of the previous connection in state INIT\n     * @param previous_connection_id\n     * @param client_state\n     * @param counterparty\n     * @param delay_period\n     * @param counterparty_versions\n     * @param proof_height proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`\n     * @param proof_init proof of client state included in message\n     * @param proof_client proof of client consensus state\n     * @param proof_consensus\n     * @param consensus_height\n     * @param signer signer address\n     */\n    function MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty, delay_period, counterparty_versions, proof_height, proof_init, proof_client, proof_consensus, consensus_height, signer) {\n        var _this = _super.call(this) || this;\n        _this.client_id = client_id;\n        _this.previous_connection_id = previous_connection_id;\n        _this.client_state = client_state;\n        _this.counterparty = counterparty;\n        _this.delay_period = delay_period;\n        _this.counterparty_versions = counterparty_versions;\n        _this.proof_height = proof_height;\n        _this.proof_init = proof_init;\n        _this.proof_client = proof_client;\n        _this.proof_consensus = proof_consensus;\n        _this.consensus_height = consensus_height;\n        _this.signer = signer;\n        return _this;\n    }\n    MsgConnectionOpenTry.fromAmino = function (_) {\n        _;\n        throw new Error('Amino not supported');\n    };\n    MsgConnectionOpenTry.prototype.toAmino = function () {\n        throw new Error('Amino not supported');\n    };\n    MsgConnectionOpenTry.fromData = function (data) {\n        var client_id = data.client_id, previous_connection_id = data.previous_connection_id, client_state = data.client_state, counterparty = data.counterparty, delay_period = data.delay_period, counterparty_versions = data.counterparty_versions, proof_height = data.proof_height, proof_init = data.proof_init, proof_client = data.proof_client, proof_consensus = data.proof_consensus, consensus_height = data.consensus_height, signer = data.signer;\n        return new MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, Number.parseInt(delay_period), counterparty_versions.length > 0\n            ? counterparty_versions.map(function (cv) { return Version_1.Version.fromData(cv); })\n            : [], proof_height ? Height_1.Height.fromData(proof_height) : undefined, Buffer.from(proof_init).toString('base64'), Buffer.from(proof_client).toString('base64'), Buffer.from(proof_consensus).toString('base64'), consensus_height ? Height_1.Height.fromData(consensus_height) : undefined, signer);\n    };\n    MsgConnectionOpenTry.prototype.toData = function () {\n        var _a = this, client_id = _a.client_id, previous_connection_id = _a.previous_connection_id, client_state = _a.client_state, counterparty = _a.counterparty, delay_period = _a.delay_period, counterparty_versions = _a.counterparty_versions, proof_height = _a.proof_height, proof_init = _a.proof_init, proof_client = _a.proof_client, proof_consensus = _a.proof_consensus, consensus_height = _a.consensus_height, signer = _a.signer;\n        return {\n            '@type': '/ibc.core.connection.v1.MsgConnectionOpenTry',\n            client_id: client_id,\n            previous_connection_id: previous_connection_id,\n            client_state: client_state,\n            counterparty: counterparty ? counterparty.toData() : undefined,\n            delay_period: delay_period.toFixed(),\n            counterparty_versions: counterparty_versions.length > 0\n                ? counterparty_versions.map(function (cv) { return cv.toData(); })\n                : [],\n            proof_height: proof_height ? proof_height.toData() : undefined,\n            proof_init: proof_init,\n            proof_client: proof_client,\n            proof_consensus: proof_consensus,\n            consensus_height: consensus_height\n                ? consensus_height.toData()\n                : undefined,\n            signer: signer,\n        };\n    };\n    MsgConnectionOpenTry.fromProto = function (proto) {\n        return new MsgConnectionOpenTry(proto.clientId, proto.previousConnectionId, proto.clientState, proto.counterparty\n            ? Counterparty_1.Counterparty.fromProto(proto.counterparty)\n            : undefined, proto.delayPeriod.toNumber(), proto.counterpartyVersions.length > 0\n            ? proto.counterpartyVersions.map(function (cv) { return Version_1.Version.fromProto(cv); })\n            : [], proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, Buffer.from(proto.proofInit).toString('base64'), Buffer.from(proto.proofClient).toString('base64'), Buffer.from(proto.proofConsensus).toString('base64'), proto.consensusHeight\n            ? Height_1.Height.fromProto(proto.consensusHeight)\n            : undefined, proto.signer);\n    };\n    MsgConnectionOpenTry.prototype.toProto = function () {\n        var _a = this, client_id = _a.client_id, previous_connection_id = _a.previous_connection_id, client_state = _a.client_state, counterparty = _a.counterparty, delay_period = _a.delay_period, counterparty_versions = _a.counterparty_versions, proof_height = _a.proof_height, proof_init = _a.proof_init, proof_client = _a.proof_client, proof_consensus = _a.proof_consensus, consensus_height = _a.consensus_height, signer = _a.signer;\n        return tx_1.MsgConnectionOpenTry.fromPartial({\n            clientId: client_id,\n            previousConnectionId: previous_connection_id,\n            clientState: client_state.toProto(),\n            counterparty: counterparty ? counterparty.toProto() : undefined,\n            delayPeriod: long_1.default.fromNumber(delay_period),\n            counterpartyVersions: counterparty_versions.length > 0\n                ? counterparty_versions.map(function (cv) { return cv.toProto(); })\n                : [],\n            proofHeight: proof_height ? proof_height.toProto() : undefined,\n            proofInit: Buffer.from(proof_init, 'base64'),\n            proofClient: Buffer.from(proof_client, 'base64'),\n            proofConsensus: Buffer.from(proof_consensus, 'base64'),\n            consensusHeight: consensus_height\n                ? consensus_height.toProto()\n                : undefined,\n            signer: signer,\n        });\n    };\n    MsgConnectionOpenTry.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/ibc.core.connection.v1.MsgConnectionOpenTry',\n            value: tx_1.MsgConnectionOpenTry.encode(this.toProto()).finish(),\n        });\n    };\n    MsgConnectionOpenTry.unpackAny = function (msgAny) {\n        return MsgConnectionOpenTry.fromProto(tx_1.MsgConnectionOpenTry.decode(msgAny.value));\n    };\n    return MsgConnectionOpenTry;\n}(json_1.JSONSerializable));\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;\n//# sourceMappingURL=MsgConnectionOpenTry.js.map"]},"metadata":{},"sourceType":"script"}