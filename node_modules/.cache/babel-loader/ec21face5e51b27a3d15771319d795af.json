{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParameterChangeProposal = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar ParamChange_1 = require(\"../ParamChange\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar params_1 = require(\"@terra-money/terra.proto/cosmos/params/v1beta1/params\");\n/**\n * Describes a proposal for directly altering the value of the module parameters.\n * If you want to select a couple parameters to change for your proposal, you'll first\n * include the subspace (module it belongs to, such as \"oracle\" or \"distribution\"), and\n * then just the specific keys that you want to include in your changes as items in a\n * JavaScript object.\n *\n * ```ts\n * import {\n *    Dec,\n *    MsgSubmitProposal,\n *    ParameterChangeProposal\n * } from \"@terra-money/terra.js\";\n *\n * const proposal = new ParameterChangeProposal(\"title\", \"description\", {\n *    market: {\n *      minspread: new Dec(0.25),\n *      basepool: new Dec(10000000)\n *    },\n *    staking: {\n *      UnbondingTime: 15000000\n *    }\n * });\n *\n * const msg = new MsgSubmitProposal();\n * ```\n */\n\n\nvar ParameterChangeProposal =\n/** @class */\nfunction (_super) {\n  __extends(ParameterChangeProposal, _super);\n  /**\n   * @param title proposal's title\n   * @param description proposal's description\n   * @param changes an object whose keys are subspace names, and whose values are objects\n   * with objects having for keys and values, the desired parameter changes.\n   */\n\n\n  function ParameterChangeProposal(title, description, changes) {\n    var _this = _super.call(this) || this;\n\n    _this.title = title;\n    _this.description = description;\n\n    if (Array.isArray(changes)) {\n      _this.changes = ParamChange_1.ParamChanges.fromData(changes);\n    } else {\n      _this.changes = changes;\n    }\n\n    return _this;\n  }\n\n  ParameterChangeProposal.fromAmino = function (data) {\n    var _a = data.value,\n        title = _a.title,\n        description = _a.description,\n        changes = _a.changes;\n    return new ParameterChangeProposal(title, description, ParamChange_1.ParamChanges.fromAmino(changes));\n  };\n\n  ParameterChangeProposal.prototype.toAmino = function () {\n    var _a = this,\n        title = _a.title,\n        description = _a.description,\n        changes = _a.changes;\n\n    return {\n      type: 'params/ParameterChangeProposal',\n      value: {\n        title: title,\n        description: description,\n        changes: changes.toAmino()\n      }\n    };\n  };\n\n  ParameterChangeProposal.fromData = function (proto) {\n    var title = proto.title,\n        description = proto.description,\n        changes = proto.changes;\n    return new ParameterChangeProposal(title, description, ParamChange_1.ParamChanges.fromData(changes));\n  };\n\n  ParameterChangeProposal.prototype.toData = function () {\n    var _a = this,\n        title = _a.title,\n        description = _a.description,\n        changes = _a.changes;\n\n    return {\n      '@type': '/cosmos.params.v1beta1.ParameterChangeProposal',\n      title: title,\n      description: description,\n      changes: changes.toData()\n    };\n  };\n\n  ParameterChangeProposal.fromProto = function (proto) {\n    return new ParameterChangeProposal(proto.title, proto.description, ParamChange_1.ParamChanges.fromProto(proto.changes));\n  };\n\n  ParameterChangeProposal.prototype.toProto = function () {\n    var _a = this,\n        title = _a.title,\n        description = _a.description,\n        changes = _a.changes;\n\n    return params_1.ParameterChangeProposal.fromPartial({\n      changes: changes.toProto(),\n      description: description,\n      title: title\n    });\n  };\n\n  ParameterChangeProposal.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',\n      value: params_1.ParameterChangeProposal.encode(this.toProto()).finish()\n    });\n  };\n\n  ParameterChangeProposal.unpackAny = function (msgAny) {\n    return ParameterChangeProposal.fromProto(params_1.ParameterChangeProposal.decode(msgAny.value));\n  };\n\n  return ParameterChangeProposal;\n}(json_1.JSONSerializable);\n\nexports.ParameterChangeProposal = ParameterChangeProposal;","map":{"version":3,"sources":["../../../../src/core/params/proposals/ParameterChangeProposal.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParameterChangeProposal = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar ParamChange_1 = require(\"../ParamChange\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar params_1 = require(\"@terra-money/terra.proto/cosmos/params/v1beta1/params\");\n/**\n * Describes a proposal for directly altering the value of the module parameters.\n * If you want to select a couple parameters to change for your proposal, you'll first\n * include the subspace (module it belongs to, such as \"oracle\" or \"distribution\"), and\n * then just the specific keys that you want to include in your changes as items in a\n * JavaScript object.\n *\n * ```ts\n * import {\n *    Dec,\n *    MsgSubmitProposal,\n *    ParameterChangeProposal\n * } from \"@terra-money/terra.js\";\n *\n * const proposal = new ParameterChangeProposal(\"title\", \"description\", {\n *    market: {\n *      minspread: new Dec(0.25),\n *      basepool: new Dec(10000000)\n *    },\n *    staking: {\n *      UnbondingTime: 15000000\n *    }\n * });\n *\n * const msg = new MsgSubmitProposal();\n * ```\n */\nvar ParameterChangeProposal = /** @class */ (function (_super) {\n    __extends(ParameterChangeProposal, _super);\n    /**\n     * @param title proposal's title\n     * @param description proposal's description\n     * @param changes an object whose keys are subspace names, and whose values are objects\n     * with objects having for keys and values, the desired parameter changes.\n     */\n    function ParameterChangeProposal(title, description, changes) {\n        var _this = _super.call(this) || this;\n        _this.title = title;\n        _this.description = description;\n        if (Array.isArray(changes)) {\n            _this.changes = ParamChange_1.ParamChanges.fromData(changes);\n        }\n        else {\n            _this.changes = changes;\n        }\n        return _this;\n    }\n    ParameterChangeProposal.fromAmino = function (data) {\n        var _a = data.value, title = _a.title, description = _a.description, changes = _a.changes;\n        return new ParameterChangeProposal(title, description, ParamChange_1.ParamChanges.fromAmino(changes));\n    };\n    ParameterChangeProposal.prototype.toAmino = function () {\n        var _a = this, title = _a.title, description = _a.description, changes = _a.changes;\n        return {\n            type: 'params/ParameterChangeProposal',\n            value: {\n                title: title,\n                description: description,\n                changes: changes.toAmino(),\n            },\n        };\n    };\n    ParameterChangeProposal.fromData = function (proto) {\n        var title = proto.title, description = proto.description, changes = proto.changes;\n        return new ParameterChangeProposal(title, description, ParamChange_1.ParamChanges.fromData(changes));\n    };\n    ParameterChangeProposal.prototype.toData = function () {\n        var _a = this, title = _a.title, description = _a.description, changes = _a.changes;\n        return {\n            '@type': '/cosmos.params.v1beta1.ParameterChangeProposal',\n            title: title,\n            description: description,\n            changes: changes.toData(),\n        };\n    };\n    ParameterChangeProposal.fromProto = function (proto) {\n        return new ParameterChangeProposal(proto.title, proto.description, ParamChange_1.ParamChanges.fromProto(proto.changes));\n    };\n    ParameterChangeProposal.prototype.toProto = function () {\n        var _a = this, title = _a.title, description = _a.description, changes = _a.changes;\n        return params_1.ParameterChangeProposal.fromPartial({\n            changes: changes.toProto(),\n            description: description,\n            title: title,\n        });\n    };\n    ParameterChangeProposal.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',\n            value: params_1.ParameterChangeProposal.encode(this.toProto()).finish(),\n        });\n    };\n    ParameterChangeProposal.unpackAny = function (msgAny) {\n        return ParameterChangeProposal.fromProto(params_1.ParameterChangeProposal.decode(msgAny.value));\n    };\n    return ParameterChangeProposal;\n}(json_1.JSONSerializable));\nexports.ParameterChangeProposal = ParameterChangeProposal;\n//# sourceMappingURL=ParameterChangeProposal.js.map"]},"metadata":{},"sourceType":"script"}