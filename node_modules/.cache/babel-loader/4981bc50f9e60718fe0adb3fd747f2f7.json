{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MerklePrefix = void 0;\n\nvar commitment_1 = require(\"@terra-money/terra.proto/ibc/core/commitment/v1/commitment\");\n\nvar json_1 = require(\"../../../../util/json\");\n/*\n * MerklePrefix is merkle path prefixed to the key.\n * The constructed key from the Path and the key will be append(Path.KeyPath,\n * append(Path.KeyPrefix, key...))\n */\n\n\nvar MerklePrefix =\n/** @class */\nfunction (_super) {\n  __extends(MerklePrefix, _super);\n  /**\n   * @param key_prefix\n   */\n\n\n  function MerklePrefix(key_prefix) {\n    var _this = _super.call(this) || this;\n\n    _this.key_prefix = key_prefix;\n    return _this;\n  }\n\n  MerklePrefix.fromAmino = function (data) {\n    var key_prefix = data.key_prefix;\n    return new MerklePrefix(key_prefix);\n  };\n\n  MerklePrefix.prototype.toAmino = function () {\n    var key_prefix = this.key_prefix;\n    var res = {\n      key_prefix: key_prefix\n    };\n    return res;\n  };\n\n  MerklePrefix.fromData = function (data) {\n    var key_prefix = data.key_prefix;\n    return new MerklePrefix(key_prefix);\n  };\n\n  MerklePrefix.prototype.toData = function () {\n    var key_prefix = this.key_prefix;\n    var res = {\n      key_prefix: key_prefix\n    };\n    return res;\n  };\n\n  MerklePrefix.fromProto = function (proto) {\n    return new MerklePrefix(Buffer.from(proto.keyPrefix).toString('base64'));\n  };\n\n  MerklePrefix.prototype.toProto = function () {\n    var key_prefix = this.key_prefix;\n    return commitment_1.MerklePrefix.fromPartial({\n      keyPrefix: Buffer.from(key_prefix, 'base64')\n    });\n  };\n\n  return MerklePrefix;\n}(json_1.JSONSerializable);\n\nexports.MerklePrefix = MerklePrefix;","map":{"version":3,"sources":["../../../../../src/core/ibc/core/commitment/MerklePrefix.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,4DAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAEA;;;;AAIG;;;AACH,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;AAKhC;;AAEG;;;AACH,WAAA,YAAA,CAAmB,UAAnB,EAAqC;AAArC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAAmB,IAAA,KAAA,CAAA,UAAA,GAAA,UAAA;;AAElB;;AAEa,EAAA,YAAA,CAAA,SAAA,GAAd,UAAwB,IAAxB,EAAgD;AACtC,QAAA,UAAU,GAAK,IAAI,CAAT,UAAV;AACR,WAAO,IAAI,YAAJ,CAAiB,UAAjB,CAAP;AACD,GAHa;;AAKP,EAAA,YAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACU,QAAA,UAAU,GAAK,KAAL,UAAV;AACR,QAAM,GAAG,GAAuB;AAC9B,MAAA,UAAU,EAAA;AADoB,KAAhC;AAGA,WAAO,GAAP;AACD,GANM;;AAQO,EAAA,YAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAA8C;AACpC,QAAA,UAAU,GAAK,IAAI,CAAT,UAAV;AACR,WAAO,IAAI,YAAJ,CAAiB,UAAjB,CAAP;AACD,GAHa;;AAKP,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,UAAU,GAAK,KAAL,UAAV;AACR,QAAM,GAAG,GAAsB;AAC7B,MAAA,UAAU,EAAA;AADmB,KAA/B;AAGA,WAAO,GAAP;AACD,GANM;;AAQO,EAAA,YAAA,CAAA,SAAA,GAAd,UAAwB,KAAxB,EAAiD;AAC/C,WAAO,IAAI,YAAJ,CAAiB,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,SAAlB,EAA6B,QAA7B,CAAsC,QAAtC,CAAjB,CAAP;AACD,GAFa;;AAIP,EAAA,YAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACU,QAAA,UAAU,GAAK,KAAL,UAAV;AACR,WAAO,YAAA,CAAA,YAAA,CAAgB,WAAhB,CAA4B;AACjC,MAAA,SAAS,EAAE,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,QAAxB;AADsB,KAA5B,CAAP;AAGD,GALM;;AAMT,SAAA,YAAA;AAAC,CAhDD,CAAkC,MAAA,CAAA,gBAAlC,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerklePrefix = void 0;\nvar commitment_1 = require(\"@terra-money/terra.proto/ibc/core/commitment/v1/commitment\");\nvar json_1 = require(\"../../../../util/json\");\n/*\n * MerklePrefix is merkle path prefixed to the key.\n * The constructed key from the Path and the key will be append(Path.KeyPath,\n * append(Path.KeyPrefix, key...))\n */\nvar MerklePrefix = /** @class */ (function (_super) {\n    __extends(MerklePrefix, _super);\n    /**\n     * @param key_prefix\n     */\n    function MerklePrefix(key_prefix) {\n        var _this = _super.call(this) || this;\n        _this.key_prefix = key_prefix;\n        return _this;\n    }\n    MerklePrefix.fromAmino = function (data) {\n        var key_prefix = data.key_prefix;\n        return new MerklePrefix(key_prefix);\n    };\n    MerklePrefix.prototype.toAmino = function () {\n        var key_prefix = this.key_prefix;\n        var res = {\n            key_prefix: key_prefix,\n        };\n        return res;\n    };\n    MerklePrefix.fromData = function (data) {\n        var key_prefix = data.key_prefix;\n        return new MerklePrefix(key_prefix);\n    };\n    MerklePrefix.prototype.toData = function () {\n        var key_prefix = this.key_prefix;\n        var res = {\n            key_prefix: key_prefix,\n        };\n        return res;\n    };\n    MerklePrefix.fromProto = function (proto) {\n        return new MerklePrefix(Buffer.from(proto.keyPrefix).toString('base64'));\n    };\n    MerklePrefix.prototype.toProto = function () {\n        var key_prefix = this.key_prefix;\n        return commitment_1.MerklePrefix.fromPartial({\n            keyPrefix: Buffer.from(key_prefix, 'base64'),\n        });\n    };\n    return MerklePrefix;\n}(json_1.JSONSerializable));\nexports.MerklePrefix = MerklePrefix;\n//# sourceMappingURL=MerklePrefix.js.map"]},"metadata":{},"sourceType":"script"}