{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValConsPublicKey = exports.LegacyAminoMultisigPublicKey = exports.SimplePublicKey = exports.PublicKey = void 0;\n\nvar json_1 = require(\"../util/json\");\n\nvar hash_1 = require(\"../util/hash\");\n\nvar keys_1 = require(\"@terra-money/terra.proto/cosmos/crypto/multisig/keys\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar keys_2 = require(\"@terra-money/terra.proto/cosmos/crypto/secp256k1/keys\");\n\nvar keys_3 = require(\"@terra-money/terra.proto/cosmos/crypto/ed25519/keys\");\n\nvar bech32_1 = require(\"bech32\"); // As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\n\n\nvar pubkeyAminoPrefixSecp256k1 = Buffer.from('eb5ae987' + '21'\n/* fixed length */\n, 'hex');\nvar pubkeyAminoPrefixEd25519 = Buffer.from('1624de64' + '20'\n/* fixed length */\n, 'hex');\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\n\nvar pubkeyAminoPrefixMultisigThreshold = Buffer.from('22c1f7e2'\n/* variable length not included */\n, 'hex');\n\nvar encodeUvarint = function (value) {\n  var checked = Number.parseInt(value.toString());\n\n  if (checked > 127) {\n    throw new Error('Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.');\n  }\n\n  return [checked];\n};\n\nvar PublicKey;\n\n(function (PublicKey) {\n  function fromAmino(data) {\n    switch (data.type) {\n      case 'tendermint/PubKeySecp256k1':\n        return SimplePublicKey.fromAmino(data);\n\n      case 'tendermint/PubKeyMultisigThreshold':\n        return LegacyAminoMultisigPublicKey.fromAmino(data);\n\n      case 'tendermint/PubKeyEd25519':\n        return ValConsPublicKey.fromAmino(data);\n    }\n  }\n\n  PublicKey.fromAmino = fromAmino;\n\n  function fromData(data) {\n    switch (data['@type']) {\n      case '/cosmos.crypto.secp256k1.PubKey':\n        return SimplePublicKey.fromData(data);\n\n      case '/cosmos.crypto.multisig.LegacyAminoPubKey':\n        return LegacyAminoMultisigPublicKey.fromData(data);\n\n      case '/cosmos.crypto.ed25519.PubKey':\n        return ValConsPublicKey.fromData(data);\n    }\n  }\n\n  PublicKey.fromData = fromData;\n\n  function fromProto(pubkeyAny) {\n    var typeUrl = pubkeyAny.typeUrl;\n\n    if (typeUrl === '/cosmos.crypto.secp256k1.PubKey') {\n      return SimplePublicKey.unpackAny(pubkeyAny);\n    } else if (typeUrl === '/cosmos.crypto.multisig.LegacyAminoPubKey') {\n      return LegacyAminoMultisigPublicKey.unpackAny(pubkeyAny);\n    } else if (typeUrl === '/cosmos.crypto.ed25519.PubKey') {\n      return ValConsPublicKey.unpackAny(pubkeyAny);\n    }\n\n    throw new Error(\"Pubkey type \" + typeUrl + \" not recognized\");\n  }\n\n  PublicKey.fromProto = fromProto;\n})(PublicKey = exports.PublicKey || (exports.PublicKey = {}));\n\nvar SimplePublicKey =\n/** @class */\nfunction (_super) {\n  __extends(SimplePublicKey, _super);\n\n  function SimplePublicKey(key) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    return _this;\n  }\n\n  SimplePublicKey.fromAmino = function (data) {\n    return new SimplePublicKey(data.value);\n  };\n\n  SimplePublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeySecp256k1',\n      value: this.key\n    };\n  };\n\n  SimplePublicKey.fromData = function (data) {\n    return new SimplePublicKey(data.key);\n  };\n\n  SimplePublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.secp256k1.PubKey',\n      key: this.key\n    };\n  };\n\n  SimplePublicKey.fromProto = function (pubkeyProto) {\n    return new SimplePublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n  };\n\n  SimplePublicKey.prototype.toProto = function () {\n    return keys_2.PubKey.fromPartial({\n      key: Buffer.from(this.key, 'base64')\n    });\n  };\n\n  SimplePublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.secp256k1.PubKey',\n      value: keys_2.PubKey.encode(this.toProto()).finish()\n    });\n  };\n\n  SimplePublicKey.unpackAny = function (pubkeyAny) {\n    return SimplePublicKey.fromProto(keys_2.PubKey.decode(pubkeyAny.value));\n  };\n\n  SimplePublicKey.prototype.encodeAminoPubkey = function () {\n    return Buffer.concat([pubkeyAminoPrefixSecp256k1, Buffer.from(this.key, 'base64')]);\n  };\n\n  SimplePublicKey.prototype.rawAddress = function () {\n    var pubkeyData = Buffer.from(this.key, 'base64');\n    return (0, hash_1.ripemd160)((0, hash_1.sha256)(pubkeyData));\n  };\n\n  SimplePublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n\n  SimplePublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n\n  return SimplePublicKey;\n}(json_1.JSONSerializable);\n\nexports.SimplePublicKey = SimplePublicKey;\n\nvar LegacyAminoMultisigPublicKey =\n/** @class */\nfunction (_super) {\n  __extends(LegacyAminoMultisigPublicKey, _super);\n\n  function LegacyAminoMultisigPublicKey(threshold, pubkeys) {\n    var _this = _super.call(this) || this;\n\n    _this.threshold = threshold;\n    _this.pubkeys = pubkeys;\n    return _this;\n  }\n\n  LegacyAminoMultisigPublicKey.prototype.encodeAminoPubkey = function () {\n    var out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n    out.push(0x08);\n    out.push.apply(out, encodeUvarint(this.threshold));\n\n    for (var _i = 0, _a = this.pubkeys.map(function (p) {\n      return p.encodeAminoPubkey();\n    }); _i < _a.length; _i++) {\n      var pubkeyData = _a[_i];\n      out.push(0x12);\n      out.push.apply(out, encodeUvarint(pubkeyData.length));\n      out.push.apply(out, Array.from(pubkeyData));\n    }\n\n    return new Uint8Array(out);\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.rawAddress = function () {\n    var pubkeyData = this.encodeAminoPubkey();\n    return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n\n  LegacyAminoMultisigPublicKey.fromAmino = function (data) {\n    return new LegacyAminoMultisigPublicKey(Number.parseInt(data.value.threshold), data.value.pubkeys.map(function (p) {\n      return SimplePublicKey.fromAmino(p);\n    }));\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeyMultisigThreshold',\n      value: {\n        threshold: this.threshold.toFixed(),\n        pubkeys: this.pubkeys.map(function (p) {\n          return p.toAmino();\n        })\n      }\n    };\n  };\n\n  LegacyAminoMultisigPublicKey.fromData = function (data) {\n    return new LegacyAminoMultisigPublicKey(Number.parseInt(data.threshold), data.public_keys.map(function (v) {\n      return SimplePublicKey.fromData(v);\n    }));\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.multisig.LegacyAminoPubKey',\n      threshold: this.threshold.toFixed(),\n      public_keys: this.pubkeys.map(function (p) {\n        return p.toData();\n      })\n    };\n  };\n\n  LegacyAminoMultisigPublicKey.fromProto = function (pubkeyProto) {\n    return new LegacyAminoMultisigPublicKey(pubkeyProto.threshold, pubkeyProto.publicKeys.map(function (v) {\n      return SimplePublicKey.unpackAny(v);\n    }));\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.toProto = function () {\n    return keys_1.LegacyAminoPubKey.fromPartial({\n      threshold: this.threshold,\n      publicKeys: this.pubkeys.map(function (v) {\n        return v.packAny();\n      })\n    });\n  };\n\n  LegacyAminoMultisigPublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.multisig.LegacyAminoPubKey',\n      value: keys_1.LegacyAminoPubKey.encode(this.toProto()).finish()\n    });\n  };\n\n  LegacyAminoMultisigPublicKey.unpackAny = function (pubkeyAny) {\n    return LegacyAminoMultisigPublicKey.fromProto(keys_1.LegacyAminoPubKey.decode(pubkeyAny.value));\n  };\n\n  return LegacyAminoMultisigPublicKey;\n}(json_1.JSONSerializable);\n\nexports.LegacyAminoMultisigPublicKey = LegacyAminoMultisigPublicKey;\n\nvar ValConsPublicKey =\n/** @class */\nfunction (_super) {\n  __extends(ValConsPublicKey, _super);\n\n  function ValConsPublicKey(key) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    return _this;\n  }\n\n  ValConsPublicKey.fromAmino = function (data) {\n    return new ValConsPublicKey(data.value);\n  };\n\n  ValConsPublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeyEd25519',\n      value: this.key\n    };\n  };\n\n  ValConsPublicKey.fromData = function (data) {\n    return new ValConsPublicKey(data.key);\n  };\n\n  ValConsPublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.ed25519.PubKey',\n      key: this.key\n    };\n  };\n\n  ValConsPublicKey.fromProto = function (pubkeyProto) {\n    return new ValConsPublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n  };\n\n  ValConsPublicKey.prototype.toProto = function () {\n    return keys_2.PubKey.fromPartial({\n      key: Buffer.from(this.key, 'base64')\n    });\n  };\n\n  ValConsPublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.ed25519.PubKey',\n      value: keys_3.PubKey.encode(this.toProto()).finish()\n    });\n  };\n\n  ValConsPublicKey.unpackAny = function (pubkeyAny) {\n    return ValConsPublicKey.fromProto(keys_3.PubKey.decode(pubkeyAny.value));\n  };\n\n  ValConsPublicKey.prototype.encodeAminoPubkey = function () {\n    return Buffer.concat([pubkeyAminoPrefixEd25519, Buffer.from(this.key, 'base64')]);\n  };\n\n  ValConsPublicKey.prototype.rawAddress = function () {\n    var pubkeyData = Buffer.from(this.key, 'base64');\n    return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n  };\n\n  ValConsPublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terravalcons', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n\n  ValConsPublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terravalconspub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n\n  return ValConsPublicKey;\n}(json_1.JSONSerializable);\n\nexports.ValConsPublicKey = ValConsPublicKey;","map":{"version":3,"sources":["../../src/core/PublicKey.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValConsPublicKey = exports.LegacyAminoMultisigPublicKey = exports.SimplePublicKey = exports.PublicKey = void 0;\nvar json_1 = require(\"../util/json\");\nvar hash_1 = require(\"../util/hash\");\nvar keys_1 = require(\"@terra-money/terra.proto/cosmos/crypto/multisig/keys\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar keys_2 = require(\"@terra-money/terra.proto/cosmos/crypto/secp256k1/keys\");\nvar keys_3 = require(\"@terra-money/terra.proto/cosmos/crypto/ed25519/keys\");\nvar bech32_1 = require(\"bech32\");\n// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\nvar pubkeyAminoPrefixSecp256k1 = Buffer.from('eb5ae987' + '21' /* fixed length */, 'hex');\nvar pubkeyAminoPrefixEd25519 = Buffer.from('1624de64' + '20' /* fixed length */, 'hex');\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\nvar pubkeyAminoPrefixMultisigThreshold = Buffer.from('22c1f7e2' /* variable length not included */, 'hex');\nvar encodeUvarint = function (value) {\n    var checked = Number.parseInt(value.toString());\n    if (checked > 127) {\n        throw new Error('Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.');\n    }\n    return [checked];\n};\nvar PublicKey;\n(function (PublicKey) {\n    function fromAmino(data) {\n        switch (data.type) {\n            case 'tendermint/PubKeySecp256k1':\n                return SimplePublicKey.fromAmino(data);\n            case 'tendermint/PubKeyMultisigThreshold':\n                return LegacyAminoMultisigPublicKey.fromAmino(data);\n            case 'tendermint/PubKeyEd25519':\n                return ValConsPublicKey.fromAmino(data);\n        }\n    }\n    PublicKey.fromAmino = fromAmino;\n    function fromData(data) {\n        switch (data['@type']) {\n            case '/cosmos.crypto.secp256k1.PubKey':\n                return SimplePublicKey.fromData(data);\n            case '/cosmos.crypto.multisig.LegacyAminoPubKey':\n                return LegacyAminoMultisigPublicKey.fromData(data);\n            case '/cosmos.crypto.ed25519.PubKey':\n                return ValConsPublicKey.fromData(data);\n        }\n    }\n    PublicKey.fromData = fromData;\n    function fromProto(pubkeyAny) {\n        var typeUrl = pubkeyAny.typeUrl;\n        if (typeUrl === '/cosmos.crypto.secp256k1.PubKey') {\n            return SimplePublicKey.unpackAny(pubkeyAny);\n        }\n        else if (typeUrl === '/cosmos.crypto.multisig.LegacyAminoPubKey') {\n            return LegacyAminoMultisigPublicKey.unpackAny(pubkeyAny);\n        }\n        else if (typeUrl === '/cosmos.crypto.ed25519.PubKey') {\n            return ValConsPublicKey.unpackAny(pubkeyAny);\n        }\n        throw new Error(\"Pubkey type \" + typeUrl + \" not recognized\");\n    }\n    PublicKey.fromProto = fromProto;\n})(PublicKey = exports.PublicKey || (exports.PublicKey = {}));\nvar SimplePublicKey = /** @class */ (function (_super) {\n    __extends(SimplePublicKey, _super);\n    function SimplePublicKey(key) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        return _this;\n    }\n    SimplePublicKey.fromAmino = function (data) {\n        return new SimplePublicKey(data.value);\n    };\n    SimplePublicKey.prototype.toAmino = function () {\n        return {\n            type: 'tendermint/PubKeySecp256k1',\n            value: this.key,\n        };\n    };\n    SimplePublicKey.fromData = function (data) {\n        return new SimplePublicKey(data.key);\n    };\n    SimplePublicKey.prototype.toData = function () {\n        return {\n            '@type': '/cosmos.crypto.secp256k1.PubKey',\n            key: this.key,\n        };\n    };\n    SimplePublicKey.fromProto = function (pubkeyProto) {\n        return new SimplePublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n    };\n    SimplePublicKey.prototype.toProto = function () {\n        return keys_2.PubKey.fromPartial({\n            key: Buffer.from(this.key, 'base64'),\n        });\n    };\n    SimplePublicKey.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/cosmos.crypto.secp256k1.PubKey',\n            value: keys_2.PubKey.encode(this.toProto()).finish(),\n        });\n    };\n    SimplePublicKey.unpackAny = function (pubkeyAny) {\n        return SimplePublicKey.fromProto(keys_2.PubKey.decode(pubkeyAny.value));\n    };\n    SimplePublicKey.prototype.encodeAminoPubkey = function () {\n        return Buffer.concat([\n            pubkeyAminoPrefixSecp256k1,\n            Buffer.from(this.key, 'base64'),\n        ]);\n    };\n    SimplePublicKey.prototype.rawAddress = function () {\n        var pubkeyData = Buffer.from(this.key, 'base64');\n        return (0, hash_1.ripemd160)((0, hash_1.sha256)(pubkeyData));\n    };\n    SimplePublicKey.prototype.address = function () {\n        return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n    };\n    SimplePublicKey.prototype.pubkeyAddress = function () {\n        return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n    };\n    return SimplePublicKey;\n}(json_1.JSONSerializable));\nexports.SimplePublicKey = SimplePublicKey;\nvar LegacyAminoMultisigPublicKey = /** @class */ (function (_super) {\n    __extends(LegacyAminoMultisigPublicKey, _super);\n    function LegacyAminoMultisigPublicKey(threshold, pubkeys) {\n        var _this = _super.call(this) || this;\n        _this.threshold = threshold;\n        _this.pubkeys = pubkeys;\n        return _this;\n    }\n    LegacyAminoMultisigPublicKey.prototype.encodeAminoPubkey = function () {\n        var out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n        out.push(0x08);\n        out.push.apply(out, encodeUvarint(this.threshold));\n        for (var _i = 0, _a = this.pubkeys.map(function (p) { return p.encodeAminoPubkey(); }); _i < _a.length; _i++) {\n            var pubkeyData = _a[_i];\n            out.push(0x12);\n            out.push.apply(out, encodeUvarint(pubkeyData.length));\n            out.push.apply(out, Array.from(pubkeyData));\n        }\n        return new Uint8Array(out);\n    };\n    LegacyAminoMultisigPublicKey.prototype.rawAddress = function () {\n        var pubkeyData = this.encodeAminoPubkey();\n        return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n    };\n    LegacyAminoMultisigPublicKey.prototype.address = function () {\n        return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n    };\n    LegacyAminoMultisigPublicKey.prototype.pubkeyAddress = function () {\n        return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n    };\n    LegacyAminoMultisigPublicKey.fromAmino = function (data) {\n        return new LegacyAminoMultisigPublicKey(Number.parseInt(data.value.threshold), data.value.pubkeys.map(function (p) { return SimplePublicKey.fromAmino(p); }));\n    };\n    LegacyAminoMultisigPublicKey.prototype.toAmino = function () {\n        return {\n            type: 'tendermint/PubKeyMultisigThreshold',\n            value: {\n                threshold: this.threshold.toFixed(),\n                pubkeys: this.pubkeys.map(function (p) { return p.toAmino(); }),\n            },\n        };\n    };\n    LegacyAminoMultisigPublicKey.fromData = function (data) {\n        return new LegacyAminoMultisigPublicKey(Number.parseInt(data.threshold), data.public_keys.map(function (v) { return SimplePublicKey.fromData(v); }));\n    };\n    LegacyAminoMultisigPublicKey.prototype.toData = function () {\n        return {\n            '@type': '/cosmos.crypto.multisig.LegacyAminoPubKey',\n            threshold: this.threshold.toFixed(),\n            public_keys: this.pubkeys.map(function (p) { return p.toData(); }),\n        };\n    };\n    LegacyAminoMultisigPublicKey.fromProto = function (pubkeyProto) {\n        return new LegacyAminoMultisigPublicKey(pubkeyProto.threshold, pubkeyProto.publicKeys.map(function (v) { return SimplePublicKey.unpackAny(v); }));\n    };\n    LegacyAminoMultisigPublicKey.prototype.toProto = function () {\n        return keys_1.LegacyAminoPubKey.fromPartial({\n            threshold: this.threshold,\n            publicKeys: this.pubkeys.map(function (v) { return v.packAny(); }),\n        });\n    };\n    LegacyAminoMultisigPublicKey.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/cosmos.crypto.multisig.LegacyAminoPubKey',\n            value: keys_1.LegacyAminoPubKey.encode(this.toProto()).finish(),\n        });\n    };\n    LegacyAminoMultisigPublicKey.unpackAny = function (pubkeyAny) {\n        return LegacyAminoMultisigPublicKey.fromProto(keys_1.LegacyAminoPubKey.decode(pubkeyAny.value));\n    };\n    return LegacyAminoMultisigPublicKey;\n}(json_1.JSONSerializable));\nexports.LegacyAminoMultisigPublicKey = LegacyAminoMultisigPublicKey;\nvar ValConsPublicKey = /** @class */ (function (_super) {\n    __extends(ValConsPublicKey, _super);\n    function ValConsPublicKey(key) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        return _this;\n    }\n    ValConsPublicKey.fromAmino = function (data) {\n        return new ValConsPublicKey(data.value);\n    };\n    ValConsPublicKey.prototype.toAmino = function () {\n        return {\n            type: 'tendermint/PubKeyEd25519',\n            value: this.key,\n        };\n    };\n    ValConsPublicKey.fromData = function (data) {\n        return new ValConsPublicKey(data.key);\n    };\n    ValConsPublicKey.prototype.toData = function () {\n        return {\n            '@type': '/cosmos.crypto.ed25519.PubKey',\n            key: this.key,\n        };\n    };\n    ValConsPublicKey.fromProto = function (pubkeyProto) {\n        return new ValConsPublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n    };\n    ValConsPublicKey.prototype.toProto = function () {\n        return keys_2.PubKey.fromPartial({\n            key: Buffer.from(this.key, 'base64'),\n        });\n    };\n    ValConsPublicKey.prototype.packAny = function () {\n        return any_1.Any.fromPartial({\n            typeUrl: '/cosmos.crypto.ed25519.PubKey',\n            value: keys_3.PubKey.encode(this.toProto()).finish(),\n        });\n    };\n    ValConsPublicKey.unpackAny = function (pubkeyAny) {\n        return ValConsPublicKey.fromProto(keys_3.PubKey.decode(pubkeyAny.value));\n    };\n    ValConsPublicKey.prototype.encodeAminoPubkey = function () {\n        return Buffer.concat([\n            pubkeyAminoPrefixEd25519,\n            Buffer.from(this.key, 'base64'),\n        ]);\n    };\n    ValConsPublicKey.prototype.rawAddress = function () {\n        var pubkeyData = Buffer.from(this.key, 'base64');\n        return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n    };\n    ValConsPublicKey.prototype.address = function () {\n        return bech32_1.bech32.encode('terravalcons', bech32_1.bech32.toWords(this.rawAddress()));\n    };\n    ValConsPublicKey.prototype.pubkeyAddress = function () {\n        return bech32_1.bech32.encode('terravalconspub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n    };\n    return ValConsPublicKey;\n}(json_1.JSONSerializable));\nexports.ValConsPublicKey = ValConsPublicKey;\n//# sourceMappingURL=PublicKey.js.map"]},"metadata":{},"sourceType":"script"}