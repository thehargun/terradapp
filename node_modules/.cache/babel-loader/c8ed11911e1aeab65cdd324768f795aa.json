{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hargu\\\\Desktop\\\\Luna Classic\\\\Hargun\\\\src\\\\components\\\\Donation.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fee, MsgSend } from '@terra-money/terra.js';\nimport { CreateTxFailed, Timeout, TxFailed, TxUnspecifiedError, useConnectedWallet, UserDenied } from '@terra-money/wallet-provider';\nimport React, { useCallback, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DONATE_ADDRESS = 'terra14nh3a5s8r65smd8qy0wuszx0jq6kq035kv3u9n';\nexport function Donation() {\n  _s();\n\n  const [txResult, setTxResult] = useState(null);\n  const [txError, setTxError] = useState(null);\n  const connectedWallet = useConnectedWallet();\n  const proceed = useCallback(() => {\n    if (!connectedWallet) {\n      return;\n    }\n\n    setTxResult(null);\n    setTxError(null);\n    connectedWallet.post({\n      fee: new Fee(300000, '200000uusd'),\n      msgs: [new MsgSend(connectedWallet.walletAddress, DONATE_ADDRESS, {\n        uusd: 5000000\n      })]\n    }).then(nextTxResult => {\n      console.log(nextTxResult);\n      setTxResult(nextTxResult);\n    }).catch(error => {\n      if (error instanceof UserDenied) {\n        setTxError('User Denied');\n      } else if (error instanceof CreateTxFailed) {\n        setTxError('Create Tx Failed: ' + error.message);\n      } else if (error instanceof TxFailed) {\n        setTxError('Tx Failed: ' + error.message);\n      } else if (error instanceof Timeout) {\n        setTxError('Timeout');\n      } else if (error instanceof TxUnspecifiedError) {\n        setTxError('Unspecified Error: ' + error.message);\n      } else {\n        setTxError('Unknown Error: ' + (error instanceof Error ? error.message : String(error)));\n      }\n    });\n  }, [connectedWallet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Buy me a Coffee?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), (connectedWallet === null || connectedWallet === void 0 ? void 0 : connectedWallet.availablePost) && !txResult && !txError && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: 'white',\n        background: 'black'\n      },\n      onClick: proceed,\n      children: \"Send $5 to hargun.eth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), txResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: connectedWallet && txResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://finder.terra.money/${connectedWallet.network.chainID}/tx/${txResult.result.txhash}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Open Tx Result in Terra Finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), txError && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: 'white'\n      },\n      children: txError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }, this), (!!txResult || !!txError) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setTxResult(null);\n        setTxError(null);\n      },\n      style: {\n        color: 'white'\n      },\n      children: \"Thank You!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), !connectedWallet && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Wallet not connected!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 28\n    }, this), connectedWallet && !connectedWallet.availablePost && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'white'\n      },\n      children: \"This connection does not support post()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Donation, \"xL7CmSyJXhOOTEWOjWVec8ZubCI=\", false, function () {\n  return [useConnectedWallet];\n});\n\n_c = Donation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Donation\");","map":{"version":3,"sources":["C:/Users/hargu/Desktop/Luna Classic/Hargun/src/components/Donation.tsx"],"names":["Fee","MsgSend","CreateTxFailed","Timeout","TxFailed","TxUnspecifiedError","useConnectedWallet","UserDenied","React","useCallback","useState","DONATE_ADDRESS","Donation","txResult","setTxResult","txError","setTxError","connectedWallet","proceed","post","fee","msgs","walletAddress","uusd","then","nextTxResult","console","log","catch","error","message","Error","String","color","availablePost","background","network","chainID","result","txhash"],"mappings":"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","sourcesContent":["import { Fee, MsgSend } from '@terra-money/terra.js';\nimport {\n  CreateTxFailed,\n  Timeout,\n  TxFailed,\n  TxResult,\n  TxUnspecifiedError,\n  useConnectedWallet,\n  UserDenied,\n} from '@terra-money/wallet-provider';\nimport React, { useCallback, useState } from 'react';\n\nconst DONATE_ADDRESS = 'terra14nh3a5s8r65smd8qy0wuszx0jq6kq035kv3u9n';\n\nexport function Donation() {\n  const [txResult, setTxResult] = useState<TxResult | null>(null);\n  const [txError, setTxError] = useState<string | null>(null);\n\n  const connectedWallet = useConnectedWallet();\n\n  const proceed = useCallback(() => {\n    if (!connectedWallet) {\n      return;\n    }\n\n    setTxResult(null);\n    setTxError(null);\n\n    connectedWallet\n      .post({\n        fee: new Fee(300000, '200000uusd'),\n        msgs: [\n          new MsgSend(connectedWallet.walletAddress, DONATE_ADDRESS, {\n            uusd: 5000000,\n          }),\n        ],\n      })\n      .then((nextTxResult: TxResult) => {\n        console.log(nextTxResult);\n        setTxResult(nextTxResult);\n      })\n      .catch((error: unknown) => {\n        if (error instanceof UserDenied) {\n          setTxError('User Denied');\n        } else if (error instanceof CreateTxFailed) {\n          setTxError('Create Tx Failed: ' + error.message);\n        } else if (error instanceof TxFailed) {\n          setTxError('Tx Failed: ' + error.message);\n        } else if (error instanceof Timeout) {\n          setTxError('Timeout');\n        } else if (error instanceof TxUnspecifiedError) {\n          setTxError('Unspecified Error: ' + error.message);\n        } else {\n          setTxError(\n            'Unknown Error: ' +\n              (error instanceof Error ? error.message : String(error)),\n          );\n        }\n      });\n  }, [connectedWallet]);\n\n  return (\n    <div>\n      <h1 style={{color: 'white'}}>Buy me a Coffee?</h1>\n\n      {connectedWallet?.availablePost && !txResult && !txError && (\n        <button style={{color: 'white', background: 'black'}} onClick={proceed}>Send $5 to hargun.eth</button>\n      )}\n\n      {txResult && (\n        <>\n          {connectedWallet && txResult && (\n            <div>\n              <a\n                href={`https://finder.terra.money/${connectedWallet.network.chainID}/tx/${txResult.result.txhash}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Open Tx Result in Terra Finder\n              </a>\n            </div>\n          )}\n        </>\n      )}\n\n      {txError && <pre style={{color: 'white'}}>{txError}</pre>}\n\n      {(!!txResult || !!txError) && (\n        <button\n          onClick={() => {\n            setTxResult(null);\n            setTxError(null);\n          }}\n          style={{color: 'white'}}>\n          Thank You!\n        </button>\n      )}\n\n      {!connectedWallet && <p style={{color: 'white'}}>Wallet not connected!</p>}\n\n      {connectedWallet && !connectedWallet.availablePost && (\n        <p style={{color: 'white'}}>This connection does not support post()</p>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}