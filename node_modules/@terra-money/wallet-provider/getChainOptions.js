const FALLBACK_MAINNET = {
    name: 'mainnet',
    chainID: 'columbus-5',
    lcd: 'https://lcd.terra.dev',
};
const FALLBACK = {
    defaultNetwork: FALLBACK_MAINNET,
    walletConnectChainIds: {
        1: FALLBACK_MAINNET,
        0: {
            name: 'testnet',
            chainID: 'bombay-12',
            lcd: 'https://bombay-lcd.terra.dev',
        },
    },
};
let cache;
export async function getChainOptions() {
    return fetch('https://assets.terra.money/chains.json')
        .then((res) => res.json())
        .then((data) => {
        const chains = Object.values(data);
        const walletConnectChainIds = chains.reduce((result, network) => {
            if (typeof network.walletconnectID === 'number') {
                result[network.walletconnectID] = network;
            }
            else if (!result[1] && network.name === 'mainnet') {
                result[1] = network;
            }
            else if (!result[0] && network.name === 'testnet') {
                result[0] = network;
            }
            return result;
        }, {});
        const chainOptions = {
            defaultNetwork: walletConnectChainIds[1],
            walletConnectChainIds,
        };
        cache = chainOptions;
        return chainOptions;
    })
        .catch((error) => {
        console.error('Failed to fetch chains.json', error);
        return cache !== null && cache !== void 0 ? cache : FALLBACK;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2hhaW5PcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL0B0ZXJyYS1tb25leS93YWxsZXQtcHJvdmlkZXIvZ2V0Q2hhaW5PcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWVBLE1BQU0sZ0JBQWdCLEdBQUc7SUFDdkIsSUFBSSxFQUFFLFNBQVM7SUFDZixPQUFPLEVBQUUsWUFBWTtJQUNyQixHQUFHLEVBQUUsdUJBQXVCO0NBQzdCLENBQUM7QUFFRixNQUFNLFFBQVEsR0FBaUM7SUFDN0MsY0FBYyxFQUFFLGdCQUFnQjtJQUNoQyxxQkFBcUIsRUFBRTtRQUNyQixDQUFDLEVBQUUsZ0JBQWdCO1FBQ25CLENBQUMsRUFBRTtZQUNELElBQUksRUFBRSxTQUFTO1lBQ2YsT0FBTyxFQUFFLFdBQVc7WUFDcEIsR0FBRyxFQUFFLDhCQUE4QjtTQUNwQztLQUNGO0NBQ0YsQ0FBQztBQUVGLElBQUksS0FBbUMsQ0FBQztBQUV4QyxNQUFNLENBQUMsS0FBSyxVQUFVLGVBQWU7SUFDbkMsT0FBTyxLQUFLLENBQUMsd0NBQXdDLENBQUM7U0FDbkQsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDekIsSUFBSSxDQUFDLENBQUMsSUFBK0IsRUFBRSxFQUFFO1FBQ3hDLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsTUFBTSxxQkFBcUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxFQUFFO1lBQzlELElBQUksT0FBTyxPQUFPLENBQUMsZUFBZSxLQUFLLFFBQVEsRUFBRTtnQkFDL0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsR0FBRyxPQUFPLENBQUM7YUFDM0M7aUJBQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtnQkFDbkQsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQzthQUNyQjtpQkFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO2dCQUNuRCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO2FBQ3JCO1lBQ0QsT0FBTyxNQUFNLENBQUM7UUFDaEIsQ0FBQyxFQUFFLEVBQWlDLENBQUMsQ0FBQztRQUN0QyxNQUFNLFlBQVksR0FBaUM7WUFDakQsY0FBYyxFQUFFLHFCQUFxQixDQUFDLENBQUMsQ0FBQztZQUN4QyxxQkFBcUI7U0FDdEIsQ0FBQztRQUNGLEtBQUssR0FBRyxZQUFZLENBQUM7UUFDckIsT0FBTyxZQUFZLENBQUM7SUFDdEIsQ0FBQyxDQUFDO1NBQ0QsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLDZCQUE2QixFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BELE9BQU8sS0FBSyxhQUFMLEtBQUssY0FBTCxLQUFLLEdBQUksUUFBUSxDQUFDO0lBQzNCLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5ldHdvcmtJbmZvIH0gZnJvbSAnQHRlcnJhLW1vbmV5L3VzZS13YWxsZXQnO1xuaW1wb3J0IHsgV2FsbGV0Q29udHJvbGxlck9wdGlvbnMgfSBmcm9tICcuL2NvbnRyb2xsZXInO1xuXG5pbnRlcmZhY2UgQ2hhaW5JbmZvIHtcbiAgbmFtZTogc3RyaW5nO1xuICBjaGFpbklEOiBzdHJpbmc7XG4gIGxjZDogc3RyaW5nO1xuICB3YWxsZXRjb25uZWN0SUQ/OiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIFdhbGxldENvbnRyb2xsZXJDaGFpbk9wdGlvbnMgPSBQaWNrPFxuICBXYWxsZXRDb250cm9sbGVyT3B0aW9ucyxcbiAgJ2RlZmF1bHROZXR3b3JrJyB8ICd3YWxsZXRDb25uZWN0Q2hhaW5JZHMnXG4+O1xuXG5jb25zdCBGQUxMQkFDS19NQUlOTkVUID0ge1xuICBuYW1lOiAnbWFpbm5ldCcsXG4gIGNoYWluSUQ6ICdjb2x1bWJ1cy01JyxcbiAgbGNkOiAnaHR0cHM6Ly9sY2QudGVycmEuZGV2Jyxcbn07XG5cbmNvbnN0IEZBTExCQUNLOiBXYWxsZXRDb250cm9sbGVyQ2hhaW5PcHRpb25zID0ge1xuICBkZWZhdWx0TmV0d29yazogRkFMTEJBQ0tfTUFJTk5FVCxcbiAgd2FsbGV0Q29ubmVjdENoYWluSWRzOiB7XG4gICAgMTogRkFMTEJBQ0tfTUFJTk5FVCxcbiAgICAwOiB7XG4gICAgICBuYW1lOiAndGVzdG5ldCcsXG4gICAgICBjaGFpbklEOiAnYm9tYmF5LTEyJyxcbiAgICAgIGxjZDogJ2h0dHBzOi8vYm9tYmF5LWxjZC50ZXJyYS5kZXYnLFxuICAgIH0sXG4gIH0sXG59O1xuXG5sZXQgY2FjaGU6IFdhbGxldENvbnRyb2xsZXJDaGFpbk9wdGlvbnM7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDaGFpbk9wdGlvbnMoKTogUHJvbWlzZTxXYWxsZXRDb250cm9sbGVyQ2hhaW5PcHRpb25zPiB7XG4gIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9hc3NldHMudGVycmEubW9uZXkvY2hhaW5zLmpzb24nKVxuICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXG4gICAgLnRoZW4oKGRhdGE6IFJlY29yZDxzdHJpbmcsIENoYWluSW5mbz4pID0+IHtcbiAgICAgIGNvbnN0IGNoYWlucyA9IE9iamVjdC52YWx1ZXMoZGF0YSk7XG4gICAgICBjb25zdCB3YWxsZXRDb25uZWN0Q2hhaW5JZHMgPSBjaGFpbnMucmVkdWNlKChyZXN1bHQsIG5ldHdvcmspID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBuZXR3b3JrLndhbGxldGNvbm5lY3RJRCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICByZXN1bHRbbmV0d29yay53YWxsZXRjb25uZWN0SURdID0gbmV0d29yaztcbiAgICAgICAgfSBlbHNlIGlmICghcmVzdWx0WzFdICYmIG5ldHdvcmsubmFtZSA9PT0gJ21haW5uZXQnKSB7XG4gICAgICAgICAgcmVzdWx0WzFdID0gbmV0d29yaztcbiAgICAgICAgfSBlbHNlIGlmICghcmVzdWx0WzBdICYmIG5ldHdvcmsubmFtZSA9PT0gJ3Rlc3RuZXQnKSB7XG4gICAgICAgICAgcmVzdWx0WzBdID0gbmV0d29yaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSwge30gYXMgUmVjb3JkPG51bWJlciwgTmV0d29ya0luZm8+KTtcbiAgICAgIGNvbnN0IGNoYWluT3B0aW9uczogV2FsbGV0Q29udHJvbGxlckNoYWluT3B0aW9ucyA9IHtcbiAgICAgICAgZGVmYXVsdE5ldHdvcms6IHdhbGxldENvbm5lY3RDaGFpbklkc1sxXSxcbiAgICAgICAgd2FsbGV0Q29ubmVjdENoYWluSWRzLFxuICAgICAgfTtcbiAgICAgIGNhY2hlID0gY2hhaW5PcHRpb25zO1xuICAgICAgcmV0dXJuIGNoYWluT3B0aW9ucztcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBjaGFpbnMuanNvbicsIGVycm9yKTtcbiAgICAgIHJldHVybiBjYWNoZSA/PyBGQUxMQkFDSztcbiAgICB9KTtcbn1cbiJdfQ==