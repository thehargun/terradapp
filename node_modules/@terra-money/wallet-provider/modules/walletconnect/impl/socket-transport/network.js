// -- NetworkMonitor --------------------------------------------------------- //
class NetworkMonitor {
    constructor() {
        this._eventEmitters = [];
        if (typeof window !== 'undefined' &&
            typeof window.addEventListener !== 'undefined') {
            window.addEventListener('online', () => this.trigger('online'));
            window.addEventListener('offline', () => this.trigger('offline'));
        }
    }
    on(event, callback) {
        this._eventEmitters.push({
            event,
            callback,
        });
    }
    trigger(event) {
        let eventEmitters = [];
        if (event) {
            eventEmitters = this._eventEmitters.filter((eventEmitter) => eventEmitter.event === event);
        }
        eventEmitters.forEach((eventEmitter) => {
            eventEmitter.callback();
        });
    }
}
export default NetworkMonitor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29yay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9AdGVycmEtbW9uZXkvd2FsbGV0LXByb3ZpZGVyL21vZHVsZXMvd2FsbGV0Y29ubmVjdC9pbXBsL3NvY2tldC10cmFuc3BvcnQvbmV0d29yay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxpRkFBaUY7QUFFakYsTUFBTSxjQUFjO0lBR2xCO1FBQ0UsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7UUFFekIsSUFDRSxPQUFPLE1BQU0sS0FBSyxXQUFXO1lBQzdCLE9BQVEsTUFBYyxDQUFDLGdCQUFnQixLQUFLLFdBQVcsRUFDdkQ7WUFDQSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNoRSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUNuRTtJQUNILENBQUM7SUFFTSxFQUFFLENBQUMsS0FBbUIsRUFBRSxRQUFvQjtRQUNqRCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQztZQUN2QixLQUFLO1lBQ0wsUUFBUTtTQUNULENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxPQUFPLENBQUMsS0FBbUI7UUFDaEMsSUFBSSxhQUFhLEdBQTJCLEVBQUUsQ0FBQztRQUUvQyxJQUFJLEtBQUssRUFBRTtZQUNULGFBQWEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FDeEMsQ0FBQyxZQUFrQyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FDckUsQ0FBQztTQUNIO1FBRUQsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQWtDLEVBQUUsRUFBRTtZQUMzRCxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFFRCxlQUFlLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE5ldHdvcmtFdmVudCxcbiAgSU5ldHdvcmtFdmVudEVtaXR0ZXIsXG4gIElOZXR3b3JrTW9uaXRvcixcbn0gZnJvbSAnQHdhbGxldGNvbm5lY3QvdHlwZXMnO1xuXG4vLyAtLSBOZXR3b3JrTW9uaXRvciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxuY2xhc3MgTmV0d29ya01vbml0b3IgaW1wbGVtZW50cyBJTmV0d29ya01vbml0b3Ige1xuICBwcml2YXRlIF9ldmVudEVtaXR0ZXJzOiBJTmV0d29ya0V2ZW50RW1pdHRlcltdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX2V2ZW50RW1pdHRlcnMgPSBbXTtcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICB0eXBlb2YgKHdpbmRvdyBhcyBhbnkpLmFkZEV2ZW50TGlzdGVuZXIgIT09ICd1bmRlZmluZWQnXG4gICAgKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb25saW5lJywgKCkgPT4gdGhpcy50cmlnZ2VyKCdvbmxpbmUnKSk7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb2ZmbGluZScsICgpID0+IHRoaXMudHJpZ2dlcignb2ZmbGluZScpKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb24oZXZlbnQ6IE5ldHdvcmtFdmVudCwgY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkIHtcbiAgICB0aGlzLl9ldmVudEVtaXR0ZXJzLnB1c2goe1xuICAgICAgZXZlbnQsXG4gICAgICBjYWxsYmFjayxcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyB0cmlnZ2VyKGV2ZW50OiBOZXR3b3JrRXZlbnQpOiB2b2lkIHtcbiAgICBsZXQgZXZlbnRFbWl0dGVyczogSU5ldHdvcmtFdmVudEVtaXR0ZXJbXSA9IFtdO1xuXG4gICAgaWYgKGV2ZW50KSB7XG4gICAgICBldmVudEVtaXR0ZXJzID0gdGhpcy5fZXZlbnRFbWl0dGVycy5maWx0ZXIoXG4gICAgICAgIChldmVudEVtaXR0ZXI6IElOZXR3b3JrRXZlbnRFbWl0dGVyKSA9PiBldmVudEVtaXR0ZXIuZXZlbnQgPT09IGV2ZW50LFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBldmVudEVtaXR0ZXJzLmZvckVhY2goKGV2ZW50RW1pdHRlcjogSU5ldHdvcmtFdmVudEVtaXR0ZXIpID0+IHtcbiAgICAgIGV2ZW50RW1pdHRlci5jYWxsYmFjaygpO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE5ldHdvcmtNb25pdG9yO1xuIl19