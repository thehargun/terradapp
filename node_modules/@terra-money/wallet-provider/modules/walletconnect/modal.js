import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import QRCode from 'qrcode.react';
import { createElement, useCallback, useMemo } from 'react';
import { render } from 'react-dom';
import styled, { keyframes } from 'styled-components';
import { isMobile as isMobileBrowser } from '../../utils/browser-check';
export class TerraWalletconnectQrcodeModal {
    constructor() {
        this.modalContainer = null;
        this.callback = null;
        this.setCloseCallback = (callback) => {
            this.callback = callback;
        };
        this.open = (uri, cb, _qrcodeModalOptions) => {
            var _a;
            const modalContainer = window.document.createElement('div');
            const query = encodeURIComponent(`action=wallet_connect&payload=${encodeURIComponent(uri)}`);
            const schemeUri = `https://terrastation.page.link/?link=https://terra.money?${query}&apn=money.terra.station&ibi=money.terra.station&isi=1548434735`;
            const modal = createElement(TerraQRCodeModal, {
                schemeUri,
                onClose: () => {
                    if (this.callback) {
                        this.callback();
                        this.callback = null;
                    }
                    this.close();
                },
            });
            if (isMobileBrowser()) {
                window.location.href = schemeUri;
            }
            render(modal, modalContainer);
            (_a = window.document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.appendChild(modalContainer);
            this.modalContainer = modalContainer;
        };
        this.close = () => {
            var _a;
            if (this.modalContainer) {
                (_a = this.modalContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.modalContainer);
            }
            this.callback = null;
        };
    }
}
function TerraQRCodeModalBase({ schemeUri, className, onClose, }) {
    const isMobile = useMemo(() => isMobileBrowser(), []);
    const openTerraStationMobile = useCallback(() => {
        window.location.href = schemeUri;
    }, [schemeUri]);
    return (_jsxs("div", Object.assign({ className: className }, { children: [_jsx("div", { onClick: onClose }, void 0), isMobile ? (_jsxs("section", Object.assign({ className: "mobile" }, { children: [_jsx("h1", { children: "Wallet Connect" }, void 0), _jsx("button", Object.assign({ onClick: openTerraStationMobile, className: "flat-button" }, { children: "Open Terra Station Mobile" }), void 0)] }), void 0)) : (_jsxs("section", Object.assign({ className: "desktop" }, { children: [_jsx("h1", { children: "Wallet Connect" }, void 0), _jsx(QRCode, { value: schemeUri, size: 240 }, void 0)] }), void 0))] }), void 0));
}
const modalEnter = keyframes `
  0% {
    opacity: 0;
  }
  
  100% {
    opacity: 1;
  }
`;
const sectionEnter = keyframes `
  0% {
    opacity: 0;
    transform: scale(0.4);
  }
  
  100% {
    opacity: 1;
    transform: scale(1);
  }
`;
const TerraQRCodeModal = styled(TerraQRCodeModalBase) `
  position: fixed;
  z-index: 100000;

  color: #000000;

  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;

  display: grid;
  place-content: center;

  > div {
    position: fixed;
    z-index: -1;

    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.3);

    animation: ${modalEnter} 0.2s ease-in-out;
  }

  > section {
    border-radius: 25px;

    background-color: #ffffff;
    box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);

    animation: ${sectionEnter} 0.2s ease-in-out;

    button {
      cursor: pointer;

      display: block;
      outline: none;
      background-color: transparent;
      width: 100%;
      height: 32px;
      font-size: 13px;
      letter-spacing: -0.2px;
      border-radius: 18px;
      border: solid 1px #2c2c2c;

      &.flat-button {
        border: 0;
        color: #ffffff;
        background-color: #2c2c2c;
      }
    }

    .separator {
      height: 12px;

      position: relative;

      hr {
        position: absolute;
        top: 5px;
        left: 0;
        right: 0;

        border: 0;
        border-bottom: 1px dashed #cccccc;
      }

      span {
        display: block;

        position: absolute;
        top: -4px;
        left: 50%;
        transform: translateX(-50%);

        font-size: 12px;
        color: #c2c2c2;
        background-color: #ffffff;
        padding: 0 2px;
      }
    }

    &.desktop {
      padding: 50px 60px;

      h1 {
        font-size: 27px;
        font-weight: 500;

        text-align: center;

        margin-bottom: 24px;
      }

      button {
        margin-top: 20px;
      }
    }

    &.mobile {
      padding: 40px 30px;
      min-width: 320px;

      h1 {
        font-size: 22px;
        font-weight: 500;

        text-align: center;

        margin-bottom: 30px;
      }

      .separator {
        margin: 10px 0;
      }

      canvas {
        display: block;
        margin: 16px auto 0 auto;
      }
    }
  }
`;
//# sourceMappingURL=data:application/json;base64,