import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { AccAddress } from '@terra-money/terra.js';
import { createElement, useCallback, useMemo, useState } from 'react';
import { render } from 'react-dom';
import styled, { keyframes } from 'styled-components';
export function readonlyWalletModal({ networks, className, }) {
    return new Promise((resolve) => {
        var _a;
        const modalContainer = window.document.createElement('div');
        function onComplete(session) {
            var _a;
            resolve(session);
            (_a = modalContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(modalContainer);
        }
        const modal = createElement(ReadonlyWalletModal, {
            className,
            networks,
            onComplete,
        });
        render(modal, modalContainer);
        (_a = window.document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.appendChild(modalContainer);
    });
}
function ReadonlyWalletModalBase({ networks, className, onComplete, }) {
    const [chainID, setChainID] = useState(() => networks[0].chainID);
    const [address, setAddress] = useState('');
    const validAddress = useMemo(() => {
        return AccAddress.validate(address);
    }, [address]);
    const submit = useCallback(() => {
        const network = networks.find((itemNetwork) => itemNetwork.chainID === chainID);
        if (!network)
            return;
        onComplete({
            terraAddress: address,
            network,
        });
    }, [address, chainID, networks, onComplete]);
    return (_jsxs("div", Object.assign({ className: className }, { children: [_jsx("div", { onClick: () => onComplete(null) }, void 0), _jsxs("section", { children: [_jsx("h1", { children: "View an Address" }, void 0), _jsxs("label", { children: [_jsx("select", Object.assign({ value: chainID, onChange: ({ target }) => setChainID(target.value) }, { children: networks.map((itemNetwork) => (_jsxs("option", { children: [itemNetwork.name[0].toUpperCase() + itemNetwork.name.slice(1), ' ', "- ", itemNetwork.chainID] }, itemNetwork.chainID))) }), void 0), _jsx("svg", Object.assign({ viewBox: "0 0 10 6" }, { children: _jsx("polyline", { points: "1 1 5 5 9 1" }, void 0) }), void 0)] }, void 0), _jsx("input", { type: "text", value: address, onChange: ({ target }) => setAddress(target.value) }, void 0), _jsx("button", Object.assign({ disabled: !validAddress, onClick: submit }, { children: "View an Address" }), void 0)] }, void 0)] }), void 0));
}
const modalEnter = keyframes `
  0% {
    opacity: 0;
  }
  
  100% {
    opacity: 1;
  }
`;
const sectionEnter = keyframes `
  0% {
    opacity: 0;
    transform: scale(0.4);
  }
  
  100% {
    opacity: 1;
    transform: scale(1);
  }
`;
const ReadonlyWalletModal = styled(ReadonlyWalletModalBase) `
  position: fixed;
  z-index: 100000;

  color: #000000;

  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;

  display: grid;
  place-content: center;

  > div {
    position: fixed;
    z-index: -1;

    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.3);

    animation: ${modalEnter} 0.2s ease-in-out;
  }

  > section {
    max-width: 80vw;
    width: 450px;

    border-radius: 25px;

    background-color: #ffffff;
    box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);

    animation: ${sectionEnter} 0.2s ease-in-out;

    padding: 50px 60px;

    h1 {
      font-size: 27px;
      font-weight: 500;

      text-align: center;

      margin-bottom: 24px;
    }

    label {
      position: relative;

      select {
        -webkit-appearance: none;
        outline: none;
        padding: 10px 40px 10px 12px;
        width: 100%;
        border: 1px solid #2c2c2c;
        border-radius: 10px;
        cursor: pointer;
        font-family: inherit;
        font-size: 13px;
      }

      svg {
        position: absolute;
        right: 12px;
        top: calc(50%);
        width: 10px;
        height: 6px;
        stroke-width: 2px;
        stroke: #2c2c2c;
        fill: none;
        stroke-linecap: round;
        stroke-linejoin: round;
        pointer-events: none;
      }
    }

    input {
      box-sizing: border-box;
      margin-top: 10px;

      font-size: 13px;
      outline: none;
      border-radius: 10px;
      padding: 0 12px;
      width: 100%;
      height: 37px;
      border: 1px solid #2c2c2c;
    }

    button {
      margin-top: 20px;

      cursor: pointer;

      display: block;
      outline: none;
      width: 100%;
      height: 40px;
      font-size: 13px;
      letter-spacing: -0.2px;
      border-radius: 18px;
      border: 0;

      color: #ffffff;
      background-color: #2c2c2c;

      &:disabled {
        opacity: 0.4;
      }
    }
  }
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQHRlcnJhLW1vbmV5L3dhbGxldC1wcm92aWRlci9tb2R1bGVzL3JlYWRvbmx5LXdhbGxldC9tb2RhbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVuRCxPQUFPLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbkMsT0FBTyxNQUFNLEVBQUUsRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVF0RCxNQUFNLFVBQVUsbUJBQW1CLENBQUMsRUFDbEMsUUFBUSxFQUNSLFNBQVMsR0FDRDtJQUNSLE9BQU8sSUFBSSxPQUFPLENBQStCLENBQUMsT0FBTyxFQUFFLEVBQUU7O1FBQzNELE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTVELFNBQVMsVUFBVSxDQUFDLE9BQXFDOztZQUN2RCxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakIsTUFBQSxjQUFjLENBQUMsYUFBYSwwQ0FBRSxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDNUQsQ0FBQztRQUVELE1BQU0sS0FBSyxHQUFHLGFBQWEsQ0FBQyxtQkFBbUIsRUFBRTtZQUMvQyxTQUFTO1lBQ1QsUUFBUTtZQUNSLFVBQVU7U0FDWCxDQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQzlCLE1BQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLDBDQUFFLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUNyRSxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxTQUFTLHVCQUF1QixDQUFDLEVBQy9CLFFBQVEsRUFDUixTQUFTLEVBQ1QsVUFBVSxHQUNnRTtJQUMxRSxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxHQUFHLFFBQVEsQ0FBUyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxRQUFRLENBQVMsRUFBRSxDQUFDLENBQUM7SUFFbkQsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRTtRQUNoQyxPQUFPLFVBQVUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVkLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUU7UUFDOUIsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FDM0IsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUNqRCxDQUFDO1FBRUYsSUFBSSxDQUFDLE9BQU87WUFBRSxPQUFPO1FBRXJCLFVBQVUsQ0FBQztZQUNULFlBQVksRUFBRSxPQUFPO1lBQ3JCLE9BQU87U0FDUixDQUFDLENBQUM7SUFDTCxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBRTdDLE9BQU8sQ0FDTCw2QkFBSyxTQUFTLEVBQUUsU0FBUyxpQkFDdkIsY0FBSyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFJLEVBQ3hDLDhCQUNFLG1EQUF3QixFQUV4Qiw0QkFDRSwrQkFDRSxLQUFLLEVBQUUsT0FBTyxFQUNkLFFBQVEsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGdCQUVqRCxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUM3Qiw2QkFDRyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsUUFDaEUsV0FBVyxDQUFDLE9BQU8sS0FGWCxXQUFXLENBQUMsT0FBTyxDQUd2QixDQUNWLENBQUMsWUFDSyxFQUNULDRCQUFLLE9BQU8sRUFBQyxVQUFVLGdCQUNyQixtQkFBVSxNQUFNLEVBQUMsYUFBYSxXQUFZLFlBQ3RDLFlBQ0EsRUFFUixnQkFDRSxJQUFJLEVBQUMsTUFBTSxFQUNYLEtBQUssRUFBRSxPQUFPLEVBQ2QsUUFBUSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FDbEQsRUFFRiwrQkFBUSxRQUFRLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sNkNBRXZDLFlBQ0QsYUFDTixDQUNQLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFBOzs7Ozs7OztDQVEzQixDQUFDO0FBRUYsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFBOzs7Ozs7Ozs7O0NBVTdCLENBQUM7QUFFRixNQUFNLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUJBd0IxQyxVQUFVOzs7Ozs7Ozs7Ozs7aUJBWVYsWUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBOEU1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjQWRkcmVzcyB9IGZyb20gJ0B0ZXJyYS1tb25leS90ZXJyYS5qcyc7XG5pbXBvcnQgeyBOZXR3b3JrSW5mbyB9IGZyb20gJ0B0ZXJyYS1tb25leS91c2Utd2FsbGV0JztcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHVzZUNhbGxiYWNrLCB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgc3R5bGVkLCB7IGtleWZyYW1lcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7IFJlYWRvbmx5V2FsbGV0U2Vzc2lvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG5pbnRlcmZhY2UgT3B0aW9ucyB7XG4gIG5ldHdvcmtzOiBOZXR3b3JrSW5mb1tdO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkb25seVdhbGxldE1vZGFsKHtcbiAgbmV0d29ya3MsXG4gIGNsYXNzTmFtZSxcbn06IE9wdGlvbnMpOiBQcm9taXNlPFJlYWRvbmx5V2FsbGV0U2Vzc2lvbiB8IG51bGw+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlPFJlYWRvbmx5V2FsbGV0U2Vzc2lvbiB8IG51bGw+KChyZXNvbHZlKSA9PiB7XG4gICAgY29uc3QgbW9kYWxDb250YWluZXIgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBmdW5jdGlvbiBvbkNvbXBsZXRlKHNlc3Npb246IFJlYWRvbmx5V2FsbGV0U2Vzc2lvbiB8IG51bGwpIHtcbiAgICAgIHJlc29sdmUoc2Vzc2lvbik7XG4gICAgICBtb2RhbENvbnRhaW5lci5wYXJlbnRFbGVtZW50Py5yZW1vdmVDaGlsZChtb2RhbENvbnRhaW5lcik7XG4gICAgfVxuXG4gICAgY29uc3QgbW9kYWwgPSBjcmVhdGVFbGVtZW50KFJlYWRvbmx5V2FsbGV0TW9kYWwsIHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIG5ldHdvcmtzLFxuICAgICAgb25Db21wbGV0ZSxcbiAgICB9KTtcblxuICAgIHJlbmRlcihtb2RhbCwgbW9kYWxDb250YWluZXIpO1xuICAgIHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk/LmFwcGVuZENoaWxkKG1vZGFsQ29udGFpbmVyKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIFJlYWRvbmx5V2FsbGV0TW9kYWxCYXNlKHtcbiAgbmV0d29ya3MsXG4gIGNsYXNzTmFtZSxcbiAgb25Db21wbGV0ZSxcbn06IE9wdGlvbnMgJiB7IG9uQ29tcGxldGU6IChzZXNzaW9uOiBSZWFkb25seVdhbGxldFNlc3Npb24gfCBudWxsKSA9PiB2b2lkIH0pIHtcbiAgY29uc3QgW2NoYWluSUQsIHNldENoYWluSURdID0gdXNlU3RhdGU8c3RyaW5nPigoKSA9PiBuZXR3b3Jrc1swXS5jaGFpbklEKTtcbiAgY29uc3QgW2FkZHJlc3MsIHNldEFkZHJlc3NdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG5cbiAgY29uc3QgdmFsaWRBZGRyZXNzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIEFjY0FkZHJlc3MudmFsaWRhdGUoYWRkcmVzcyk7XG4gIH0sIFthZGRyZXNzXSk7XG5cbiAgY29uc3Qgc3VibWl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IG5ldHdvcmsgPSBuZXR3b3Jrcy5maW5kKFxuICAgICAgKGl0ZW1OZXR3b3JrKSA9PiBpdGVtTmV0d29yay5jaGFpbklEID09PSBjaGFpbklELFxuICAgICk7XG5cbiAgICBpZiAoIW5ldHdvcmspIHJldHVybjtcblxuICAgIG9uQ29tcGxldGUoe1xuICAgICAgdGVycmFBZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgbmV0d29yayxcbiAgICB9KTtcbiAgfSwgW2FkZHJlc3MsIGNoYWluSUQsIG5ldHdvcmtzLCBvbkNvbXBsZXRlXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgIDxkaXYgb25DbGljaz17KCkgPT4gb25Db21wbGV0ZShudWxsKX0gLz5cbiAgICAgIDxzZWN0aW9uPlxuICAgICAgICA8aDE+VmlldyBhbiBBZGRyZXNzPC9oMT5cblxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgdmFsdWU9e2NoYWluSUR9XG4gICAgICAgICAgICBvbkNoYW5nZT17KHsgdGFyZ2V0IH0pID0+IHNldENoYWluSUQodGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bmV0d29ya3MubWFwKChpdGVtTmV0d29yaykgPT4gKFxuICAgICAgICAgICAgICA8b3B0aW9uIGtleT17aXRlbU5ldHdvcmsuY2hhaW5JRH0+XG4gICAgICAgICAgICAgICAge2l0ZW1OZXR3b3JrLm5hbWVbMF0udG9VcHBlckNhc2UoKSArIGl0ZW1OZXR3b3JrLm5hbWUuc2xpY2UoMSl9eycgJ31cbiAgICAgICAgICAgICAgICAtIHtpdGVtTmV0d29yay5jaGFpbklEfVxuICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMCA2XCI+XG4gICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPVwiMSAxIDUgNSA5IDFcIj48L3BvbHlsaW5lPlxuICAgICAgICAgIDwvc3ZnPlxuICAgICAgICA8L2xhYmVsPlxuXG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICB2YWx1ZT17YWRkcmVzc31cbiAgICAgICAgICBvbkNoYW5nZT17KHsgdGFyZ2V0IH0pID0+IHNldEFkZHJlc3ModGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgLz5cblxuICAgICAgICA8YnV0dG9uIGRpc2FibGVkPXshdmFsaWRBZGRyZXNzfSBvbkNsaWNrPXtzdWJtaXR9PlxuICAgICAgICAgIFZpZXcgYW4gQWRkcmVzc1xuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuY29uc3QgbW9kYWxFbnRlciA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgXG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbmA7XG5cbmNvbnN0IHNlY3Rpb25FbnRlciA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjQpO1xuICB9XG4gIFxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbmA7XG5cbmNvbnN0IFJlYWRvbmx5V2FsbGV0TW9kYWwgPSBzdHlsZWQoUmVhZG9ubHlXYWxsZXRNb2RhbEJhc2UpYFxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDAwMDtcblxuICBjb2xvcjogIzAwMDAwMDtcblxuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcblxuICBkaXNwbGF5OiBncmlkO1xuICBwbGFjZS1jb250ZW50OiBjZW50ZXI7XG5cbiAgPiBkaXYge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAtMTtcblxuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcblxuICAgIGFuaW1hdGlvbjogJHttb2RhbEVudGVyfSAwLjJzIGVhc2UtaW4tb3V0O1xuICB9XG5cbiAgPiBzZWN0aW9uIHtcbiAgICBtYXgtd2lkdGg6IDgwdnc7XG4gICAgd2lkdGg6IDQ1MHB4O1xuXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMThweCAzcHggcmdiYSgwLCAwLCAwLCAwLjQzKTtcblxuICAgIGFuaW1hdGlvbjogJHtzZWN0aW9uRW50ZXJ9IDAuMnMgZWFzZS1pbi1vdXQ7XG5cbiAgICBwYWRkaW5nOiA1MHB4IDYwcHg7XG5cbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDI3cHg7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgfVxuXG4gICAgbGFiZWwge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICBzZWxlY3Qge1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggNDBweCAxMHB4IDEycHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMmMyYzJjO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICB9XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDEycHg7XG4gICAgICAgIHRvcDogY2FsYyg1MCUpO1xuICAgICAgICB3aWR0aDogMTBweDtcbiAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgIHN0cm9rZS13aWR0aDogMnB4O1xuICAgICAgICBzdHJva2U6ICMyYzJjMmM7XG4gICAgICAgIGZpbGw6IG5vbmU7XG4gICAgICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcbiAgICAgICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgcGFkZGluZzogMCAxMnB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDM3cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMmMyYzJjO1xuICAgIH1cblxuICAgIGJ1dHRvbiB7XG4gICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IC0wLjJweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gICAgICBib3JkZXI6IDA7XG5cbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmMyYztcblxuICAgICAgJjpkaXNhYmxlZCB7XG4gICAgICAgIG9wYWNpdHk6IDAuNDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG4iXX0=